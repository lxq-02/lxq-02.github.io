<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mingw</title>
      <link href="/2024/08/22/%E8%BD%AF%E4%BB%B6/MINGW/mingw/"/>
      <url>/2024/08/22/%E8%BD%AF%E4%BB%B6/MINGW/mingw/</url>
      
        <content type="html"><![CDATA[<h1 id="下载安装MinGW-w64详细步骤（c-c-的编译器gcc的windows版，win10真实可用）"><a href="#下载安装MinGW-w64详细步骤（c-c-的编译器gcc的windows版，win10真实可用）" class="headerlink" title="下载安装MinGW-w64详细步骤（c&#x2F;c++的编译器gcc的windows版，win10真实可用）"></a>下载安装MinGW-w64详细步骤（c&#x2F;c++的编译器gcc的windows版，win10真实可用）</h1><p><a href="https://blog.csdn.net/jjxcsdn/article/details/123058745">下载安装MinGW-w64详细步骤（c&#x2F;c++的编译器gcc的windows版，win10真实可用）-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> mingw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS</title>
      <link href="/2024/08/22/%E8%BD%AF%E4%BB%B6/VS/VS/"/>
      <url>/2024/08/22/%E8%BD%AF%E4%BB%B6/VS/VS/</url>
      
        <content type="html"><![CDATA[<h1 id="一、配置"><a href="#一、配置" class="headerlink" title="一、配置"></a>一、配置</h1><h2 id="1-1、安装"><a href="#1-1、安装" class="headerlink" title="1.1、安装"></a>1.1、安装</h2><p><a href="https://blog.csdn.net/qq_53862369/article/details/117295784">Visual Studio 2013下载及其安装_vs2013下载官方下载-CSDN博客</a></p><p><a href="https://blog.csdn.net/YSJ367635984/article/details/104648941">visual studio 2019安装教程（详细的很）_vs2019安装教程-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_49329264/article/details/132640725">VS2022工具箱消失或者工具箱控件变为灰色不可用解决方案_vs工具箱控件灰色-CSDN博客</a></p><p><a href="https://blog.csdn.net/zhebushibiaoshifu/article/details/132940838">Visual Studio复制、拷贝C++项目与第三方库配置信息到新的项目中_vs如何把项目配置完全添加到另外一个项目-CSDN博客</a></p><h2 id="1-2、VS调试"><a href="#1-2、VS调试" class="headerlink" title="1.2、VS调试"></a>1.2、VS调试</h2><p><a href="https://blog.csdn.net/weixin_74310945/article/details/128998270">https://blog.csdn.net/weixin_74310945/article/details/128998270</a></p><h2 id="1-3、快捷键"><a href="#1-3、快捷键" class="headerlink" title="1.3、快捷键"></a>1.3、快捷键</h2><ul><li>关闭文件：Ctrl + F4</li><li>关闭所有文件： Alt + W + L</li><li>回到上一步：Ctrl + -</li><li>隐藏：Ctrl + M，之后Ctrl + H</li></ul><h2 id="1-4、VS2022配置QT"><a href="#1-4、VS2022配置QT" class="headerlink" title="1.4、VS2022配置QT"></a>1.4、VS2022配置QT</h2><p><a href="https://www.cnblogs.com/W-cats/p/18177801">https://www.cnblogs.com/W-cats/p/18177801</a></p><h1 id="二、报错"><a href="#二、报错" class="headerlink" title="二、报错"></a>二、报错</h1><h2 id="LNK2005"><a href="#LNK2005" class="headerlink" title="LNK2005"></a>LNK2005</h2><p><a href="https://blog.csdn.net/zhanghefu/article/details/116266727">LNK2005错误的原因与解决-CSDN博客</a></p><h2 id="LNK2038"><a href="#LNK2038" class="headerlink" title="LNK2038"></a>LNK2038</h2><p><a href="https://www.cnblogs.com/arxive/p/11220854.html">error LNK2038: 检测到“RuntimeLibrary”的不匹配项: 值“MDd_DynamicDebug”不匹配值“MD_DynamicRelease” - wenglabs - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> VS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora</title>
      <link href="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/"/>
      <url>/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/</url>
      
        <content type="html"><![CDATA[<h1 id="0-Typora"><a href="#0-Typora" class="headerlink" title="0 Typora"></a>0 Typora</h1><p>基础Typora是一款<strong>支持实时预览的Markdown文本编辑器</strong>。它有OS X、Windows、Linux三个平台的版本，且<strong>完全免费。</strong></p><h2 id="0-1-Markdown"><a href="#0-1-Markdown" class="headerlink" title="0.1 Markdown"></a>0.1 Markdown</h2><p>Markdown 是用来编写结构化文档的一种纯文本模式，它使我们在双手不离开键盘的情况下，可以对文本进行一定程度 的格式排版。</p><p>由于目前还没有一个权威机构对 Markdown 的语法进行规范，各应用厂商制作时遵循的 Markdown 语法也是不尽相同的。其中比较收到认可的是 GFM标准，它是由著名代码托管网站 Github 所制定的。 Typora 主要使用的是 GFM 标准。</p><h1 id="一、基本知识"><a href="#一、基本知识" class="headerlink" title="一、基本知识"></a>一、基本知识</h1><h2 id="1-0-打字机模式和专注模式"><a href="#1-0-打字机模式和专注模式" class="headerlink" title="1.0 打字机模式和专注模式"></a>1.0 打字机模式和专注模式</h2><p>[打字机模式]使得你所编辑的那一行永远处于屏幕正中。</p><p>[专注模式] 使你正在编辑的哪一行保留颜色，而其他行的字体呈灰色</p><p>你可以在 $视图-专注模式 &#x2F; 打字机模式$ 中勾选使用这两个模式</p><h2 id="1-1-空格和换行"><a href="#1-1-空格和换行" class="headerlink" title="1.1 空格和换行"></a>1.1 空格和换行</h2><p>Typora 在空格与换行部分主要是 使用 CommonMark 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。</p><ul><li><strong>空格</strong>：在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。<br>你可以在源代码模式下，为每个空格前加一个  <code>\</code>转义符，或者直接使用 HTML风格的<code>&amp;nbps;</code> 来保持连续的空格。</li><li><strong>软换行</strong>：需要说明的是，在 Markdown 语法下，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在Typora 中，你可以通过 <code>shift + Enter</code>完成一次软换行，软换行只在编辑界面可见，当文本导出时换行会省略。</li><li>**硬换行： **你可以通过 <code>空格 + 空格 + Shift + Enter</code> 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。</li><li><strong>换段：</strong>你可以通过 <code>Enter</code> 完成一次换段。Typora 会自动帮你完成两次 <code>Shift + Enter</code> 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。</li></ul><p><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105094332841.png" alt="image-20211105094332841"></p><h2 id="1-2-emoji-表情"><a href="#1-2-emoji-表情" class="headerlink" title="1.2  emoji 表情"></a>1.2  emoji 表情</h2><p>在 Typora 中，你可以用 <code>:emoji:</code>的形式来打出 emoji，软件会自动给出图形的提示。</p><p>:horse:</p><h2 id="1-3-学术文档编辑器"><a href="#1-3-学术文档编辑器" class="headerlink" title="1.3 学术文档编辑器"></a>1.3 学术文档编辑器</h2><p>除了基本的文本编辑体验极佳之外，Typora 还是一个非常优秀的学术文档编辑器。当然作为一个轻量级的、基于 Markdown 的编辑器，它不能与那些 LaTeX 编辑器相提并论，但它仍支持了许多可用于学术写作的功能。</p><p><strong>LaTex</strong></p><p>LaTeX 是一种基于 TeX 的排版系统，由于它易于快速生成复杂表格和数学公式，非常适用于生成高印刷质量的科技和数学类文档。如果你常阅读数学、计算机等领域的学术论文，你一定对 LaTeX 不陌生。</p><p>Typora 原生支持 LaTeX 语法，你有两种方式输入 LaTeX 风格的数学公式：</p><ol><li><strong>行内公式（inline）：</strong>用 <code>$...$</code> 括起公式，公式会出现在行内。</li><li><strong>块间公式（display）：</strong>用 <code>$$...$$</code> 括起公式（注意 <code>$$</code> 后需要换行），公式会默认显示在行中间。</li></ol><p>具体的 LaTeX 语法在此不赘述了，你可以在 <a href="https://blog.csdn.net/happyday_d/article/details/83715440">这篇文章</a> 中查看。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>Typora 中代码的插入也可以分为行内和块间两种：</p><ol><li>行内代码：用 <code>...</code> 或 <code>...</code> 括起代码，代码会以主题中设置的样式出现在行内，但不会实现代码高亮。</li><li>代码块：输入 &#96;&#96;&#96;&#96;&#96; 后并输入语言名，换行，开始写代码，Typora 就会自动帮你实现代码高亮。Typora 原生支持许多编程语言代码块的语法高亮，基本日常常用的编程语言它都能很好地支持。<br>除此以外，你也可以直接换行开始写，而后再选择语言。</li></ol><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>在 Markdown 中插入表格一直是一件比较头疼的事情。在一般的 Markdown 编辑器中，你可以通过以下的格式插入表格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>乍一看还挺直观好用的是吧？但想想，一旦表格内容层次不齐，又或是表格长得难以下手，直接用键盘输入表格就显得十分麻烦和痛苦了。</p><p>好在 Typora 为我们提供了图形界面的插入表格的功能，你只需要在行内 <code>鼠标右键 - 插入 - 表格</code> ，并输入行数和列数，Typora 就会自动生成一张样式不错的空表格。</p><h3 id="链接引用与脚注"><a href="#链接引用与脚注" class="headerlink" title="链接引用与脚注"></a><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/51bf2f290592e1ddbadb95765c04f297-1636077212750.png" alt="img"><strong>链接引用与脚注</strong></h3><p>**链接引用 **类似于我们常在论文末尾看到的「参考文献」的写法，你可以通过 <code>[]:</code> 的语法来为你的文档加上链接引用。</p><p>**脚注 **在少数派的文章中也很常见，即某段话结尾右上角标有数字标记，页面底部进行注释的写法。你可以在需要插入脚注标号的位置写 <code>[^ number ]</code> ，再在下方通过 <code>[^ number ]:</code> 在文档中插入脚注。注意不要遗漏了脚注编号 <code>number</code> 前后的空格。</p><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="  文件系统"></a><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/5f82606e6d89fe1eb24705c4ca6b895d.png" alt="img">  文件系统</h3><p>除了前文提到的文件侧边栏，Typora 还提供了一些耦合度不高的文件系统。</p><ul><li><strong>快速打开：</strong>你可以通过 <code>文件 - 快速打开...</code> 或 <code>Ctrl + P</code> 快捷键快速打开最近的文档。</li><li><strong>保存：</strong>Typora 支持自动保存，一般很少有写好的文档丢失的情况。同时它也提供了诸如「保存」、「另存为」、「保存全部打开的文件…」之类的功能。</li><li><strong>导入：</strong>Typora 支持非常多的文件格式：.docx, .latex, .tex, .ltx, .rst, .rest, .org, .wiki, .dokuwiki, .textile, .opml, .epub。</li><li><strong>导出：</strong>Typora 原生支持导出 PDF，HTML等格式。你可以根据软件内提示安装 <strong>Pandoc 插件</strong>来导出更多例如 docx，LaTeX 等格式。</li></ul><p><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/ba295f21f0b71646bb36a0517e868ced.png" alt="img"></p><h1 id="二、数字符号"><a href="#二、数字符号" class="headerlink" title="二、数字符号"></a>二、数字符号</h1><h2 id="2-1-上标、下标、求和、括号"><a href="#2-1-上标、下标、求和、括号" class="headerlink" title="2.1 上标、下标、求和、括号"></a>2.1 上标、下标、求和、括号</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>上标</td><td><code>x^2</code>、<code>x^y</code>、<code>e^3</code></td><td>$x^2、x^y、e^3$</td></tr><tr><td>下标</td><td><code>x_0</code>、<code>a_1</code>、<code>T_1</code></td><td>$x_0、a_1、T_1$</td></tr><tr><td>求和</td><td><code>\sum</code></td><td>$\sum$</td></tr><tr><td>求和上下标</td><td>\sum_0^3 、\sum\limits_0^{\infty} 、\sum\limits_{-\infty}^{\infty}</td><td>$\sum_0^3、\sum\limits_0^{\infty}、\sum\limits_{-\infty}^{\infty}$</td></tr><tr><td>中括号</td><td><code>[s(s+1)-(s-1)(s-2)]</code></td><td>$[s(s+1)-(s-1)(s-2)]$</td></tr><tr><td>花括号</td><td><code>\lbrace x-y \rbrace</code></td><td>$\lbrace x-y \rbrace$</td></tr></tbody></table><h2 id="2-2-三角函数、指数、对数"><a href="#2-2-三角函数、指数、对数" class="headerlink" title="2.2 三角函数、指数、对数"></a>2.2 三角函数、指数、对数</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>sin</td><td><code>\sin(x)</code></td><td>$\sin(x)$</td></tr><tr><td>cos</td><td><code>\cos(x)</code></td><td>$\cos(x)$</td></tr><tr><td>tan</td><td><code>\tan(x)</code></td><td>$\tan(x)$</td></tr><tr><td>log</td><td><code>\log_2 10</code></td><td>$\log_2 10$</td></tr><tr><td>ln</td><td><code>\ln2</code></td><td>$\ln2$</td></tr></tbody></table><h2 id="2-3-运算符"><a href="#2-3-运算符" class="headerlink" title="2.3 运算符"></a>2.3 运算符</h2><table><thead><tr><th></th><th><strong>markdown语法（输入在两个$$之间）</strong></th><th><strong>显示</strong></th></tr></thead><tbody><tr><td>乘</td><td><code>\times</code></td><td>$\times$</td></tr><tr><td>除</td><td><code>\div</code></td><td>$\div$</td></tr><tr><td>加减</td><td><code>\pm</code></td><td>$\pm$</td></tr><tr><td>减加</td><td><code>\mp</code></td><td>$\mp$</td></tr><tr><td>求和</td><td><code>\sum</code></td><td>$\sum$</td></tr><tr><td>求积</td><td><code>\prod</code></td><td>$\prod$</td></tr><tr><td>微分</td><td><code>\partial</code></td><td>$\partial$</td></tr><tr><td>积分</td><td><code>\int</code>、<code>\displaystyle\int</code></td><td>$\int$、$\displaystyle\int $</td></tr><tr><td>不等于</td><td><code>\neq</code></td><td>$\neq$</td></tr><tr><td>大于等于</td><td><code>\geq</code></td><td>$\geq$</td></tr><tr><td>小于等于</td><td><code>\leq</code></td><td>$\leq$</td></tr><tr><td>约等于</td><td><code>\approx</code></td><td>$\approx$</td></tr><tr><td>不大于等于</td><td><code>x+y  \ngeq z</code></td><td>$x+y  \ngeq z$</td></tr><tr><td>点乘</td><td><code>a \cdot b</code></td><td>$ a \cdot b$</td></tr><tr><td>星乘</td><td><code>a \ast b</code></td><td>$a \ast b$</td></tr><tr><td>分式</td><td><code>\frac&#123;y&#125;&#123;x&#125;</code>、<code>\frac&#123;1&#125;&#123;x+1&#125;</code></td><td>$\frac{y}{x}、\frac{1}{x+1}$</td></tr></tbody></table><h2 id="2-4-导数，省略号"><a href="#2-4-导数，省略号" class="headerlink" title="2.4 导数，省略号"></a>2.4 导数，省略号</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>无穷</td><td><code>\infty</code></td><td>$\infty$</td></tr><tr><td>矢量</td><td><code>\vec&#123;a&#125;</code></td><td>$\vec{a}$</td></tr><tr><td>一阶导数</td><td><code>\dot&#123;x&#125;</code></td><td>$\dot{x}$</td></tr><tr><td>二阶导数</td><td><code>\ddot&#123;x&#125;</code></td><td>$\ddot{x}$</td></tr><tr><td>算数平均值</td><td><code>\bar&#123;a&#125;</code></td><td>$\bar{a}$</td></tr><tr><td>概率分布</td><td><code>\hat&#123;a&#125;</code></td><td>$\hat{a}$</td></tr><tr><td>虚数 i、j</td><td><code>\imath</code>、<code>\jmath</code></td><td>$\imath$  $\jmath$</td></tr><tr><td>四种省略符号</td><td><code>\ldots</code> <code>\cdots</code> <code>vdots</code> <code>\ddots</code></td><td>$\dots$  $\cdots$  $\vdots$ $\ddots$</td></tr></tbody></table><h2 id="2-5-积分、微分"><a href="#2-5-积分、微分" class="headerlink" title="2.5 积分、微分"></a>2.5 积分、微分</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>平均数运算</td><td><code>\overline&#123;xyz&#125;</code></td><td>$\overline{xyz}$</td></tr><tr><td>开二次方运算</td><td><code>\sqrt&#123;x&#125;</code></td><td>$\sqrt{x}$</td></tr><tr><td>极限运算</td><td><code>\lim^&#123;x \to \infty&#125;_&#123;y \to 0&#125;&#123;\frac&#123;y&#125;&#123;x&#125;&#125;</code></td><td>$\lim^{x \to \infty}_{y \to 0}{\frac{y}{x}}$</td></tr><tr><td>求和运算</td><td><code>\sum^&#123;x \to \infty&#125;_&#123;y \to 0&#125;&#123;\frac&#123;y&#125;&#123;x&#125;&#125;</code></td><td>$\sum^{x \to \infty}_{y \to 0}{\frac{y}{x}}$</td></tr><tr><td>积分运算</td><td><code>\int^&#123;\infty&#125;_&#123;0&#125;&#123;xdx&#125;</code></td><td>$\int^{\infty}_{0}{xdx}$</td></tr><tr><td></td><td><code>\displaystyle \int^&#123;\infty&#125;_&#123;0&#125;&#123;xdx&#125;</code></td><td>$\displaystyle \int^{\infty}_{0}{xdx}$</td></tr><tr><td>微分运算</td><td><code>\frac&#123;\partial x&#125;&#123;\partial y&#125;</code></td><td>$\frac{\partial x}{\partial y}$</td></tr></tbody></table><h2 id="2-6-集合运算"><a href="#2-6-集合运算" class="headerlink" title="2.6 集合运算"></a>2.6 集合运算</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>属于</td><td><code>\in</code></td><td>$\in$</td></tr><tr><td>不属于</td><td><code>\notin</code></td><td>$\notin$</td></tr><tr><td>包含于</td><td><code>\subset</code> <code>\supset</code></td><td>$\subset$ $\supset$</td></tr><tr><td>真包含于</td><td><code>\subseteq</code> <code>\supseteq</code></td><td>$\subseteq$ $\supseteq$</td></tr><tr><td>并集</td><td><code>\cup</code></td><td>$\cup$</td></tr><tr><td>交集</td><td><code>\cap</code></td><td>$\cap$</td></tr><tr><td>差集</td><td><code>\setminus</code></td><td>$\setminus$</td></tr><tr><td>同或</td><td><code>\bigodot</code></td><td>$\bigodot$</td></tr><tr><td>同与</td><td><code>\bigotimes</code></td><td>$\bigotimes$</td></tr><tr><td>异或</td><td><code>\bigoplus</code></td><td>$\bigoplus$</td></tr><tr><td>实数集合</td><td><code>\mathbb&#123;R&#125;</code></td><td>$\mathbb{R}$</td></tr><tr><td>自然数集合</td><td><code>\mathbb&#123;Z&#125;</code></td><td>$\mathbb{Z}$</td></tr><tr><td>析取联结词</td><td><code>$\vee$</code></td><td>$\vee$</td></tr><tr><td>合取联结词</td><td><code>$\wedge$</code></td><td>$\wedge$</td></tr><tr><td>蕴涵连接词</td><td><code>$\rightarrow$</code></td><td>$\rightarrow$</td></tr></tbody></table><h2 id="2-7、箭头"><a href="#2-7、箭头" class="headerlink" title="2.7、箭头"></a>2.7、箭头</h2><table><thead><tr><th align="center">Markdown语法</th><th>形状</th></tr></thead><tbody><tr><td align="center"><code>$\uparrow$</code></td><td>$\uparrow$</td></tr><tr><td align="center"><code>$\Uparrow&amp;</code></td><td>$\Uparrow$</td></tr><tr><td align="center"><code>&amp;\downarrow$</code></td><td>$\downarrow$</td></tr><tr><td align="center"><code>$\Downarrow$</code></td><td>$\Downarrow$</td></tr><tr><td align="center"><code>$\leftarrow$</code></td><td>$\leftarrow$</td></tr><tr><td align="center"><code>$\Leftarrow$</code></td><td>$\Leftarrow$</td></tr><tr><td align="center"><code>$\rightarrow$</code></td><td>$\rightarrow$</td></tr><tr><td align="center"><code>$\Rightarrow$</code></td><td>$\Rightarrow$</td></tr><tr><td align="center">$<code>\updownarrow$</code></td><td>$\updownarrow$</td></tr><tr><td align="center">$<code>\Updownarrow$</code></td><td>$\Updownarrow$</td></tr><tr><td align="center"><code>$\leftrightarrow$</code></td><td>$\leftrightarrow$</td></tr><tr><td align="center"><code>$\Leftrightarrow$</code></td><td>$\Leftrightarrow$</td></tr></tbody></table><hr><p>长箭头</p><table><thead><tr><th align="center">MarkDown</th><th>箭头形状</th></tr></thead><tbody><tr><td align="center"><code>$\longleftarrow$</code></td><td>$\longleftarrow$</td></tr><tr><td align="center"><code>$\Longleftarrow$</code></td><td>$\Longleftarrow$</td></tr><tr><td align="center"><code>$\longrightarrow$</code></td><td>$\longrightarrow$</td></tr><tr><td align="center"><code>$\Longrightarrow$</code></td><td>$\Longrightarrow$</td></tr><tr><td align="center"><code>$\longleftrightarrow$</code></td><td>$\longleftrightarrow$</td></tr><tr><td align="center"><code>$\Longleftrightarrow$</code></td><td>$\Longleftrightarrow$</td></tr></tbody></table><hr><p>其他箭头</p><table><thead><tr><th align="center">MarkDown</th><th>箭头形状</th></tr></thead><tbody><tr><td align="center"><code>$\twoheadrightarrow$</code></td><td>$\twoheadrightarrow$</td></tr><tr><td align="center">![\rightarrowtail](Typora文档.assets</td><td>$\rightarrowtail$</td></tr><tr><td align="center"><code>$\looparrowright$</code></td><td>$\looparrowright$</td></tr><tr><td align="center"><code>$\curvearrowright$</code></td><td>$\curvearrowright$</td></tr><tr><td align="center"><code>$\circlearrowright$</code></td><td>$\circlearrowright$</td></tr><tr><td align="center"><code>$\Rsh$</code></td><td>$\Rsh$</td></tr><tr><td align="center"><code>$\multimap$</code></td><td>$\multimap$</td></tr><tr><td align="center"><code>$\leftrightsquigarrow$</code></td><td>$\leftrightsquigarrow$</td></tr><tr><td align="center"><code>$\rightsquigarrow$</code></td><td>$\rightsquigarrow$</td></tr><tr><td align="center"><code>$\leadsto$</code></td><td>$\leadsto$</td></tr><tr><td align="center"><code>$\nearrow$</code></td><td>$\nearrow$</td></tr><tr><td align="center"><code>$\searrow$</code></td><td>$\searrow$</td></tr><tr><td align="center"><code>$\swarrow$</code></td><td>$\swarrow$</td></tr><tr><td align="center"><code>$\nwarrow$</code></td><td>$\nwarrow$</td></tr><tr><td align="center"><code>$\nleftarrow$</code></td><td>$\nleftarrow$</td></tr><tr><td align="center"><code>$\nLeftarrow$</code></td><td>$\nLeftarrow$</td></tr><tr><td align="center"><code>$\nrightarrow$</code></td><td>$\nrightarrow$</td></tr><tr><td align="center"><code>$\nRightarrow$</code></td><td>$\nRightarrow$</td></tr><tr><td align="center"><code>$\nleftrightarrow$</code></td><td>$\nleftrightarrow$</td></tr><tr><td align="center"><code>$\nLeftrightarrow$</code></td><td>$\nLeftrightarrow$</td></tr><tr><td align="center"><code>$\dashrightarrow$</code></td><td>$\dashrightarrow$</td></tr><tr><td align="center"><code>$\dashleftarrow$</code></td><td>$\dashleftarrow$</td></tr><tr><td align="center"><code>$\leftleftarrows$</code></td><td>$\leftleftarrows$</td></tr><tr><td align="center"><code>$\leftrightarrows$</code></td><td>$\leftrightarrows$</td></tr><tr><td align="center"><code>$\Lleftarrow$</code></td><td>$\Lleftarrow$</td></tr><tr><td align="center"><code>$\twoheadleftarrow$</code></td><td>$\twoheadleftarrow$</td></tr><tr><td align="center"><code>$\leftarrowtail</code>$</td><td>$\leftarrowtail$</td></tr><tr><td align="center"><code>$\looparrowleft$</code></td><td>$\looparrowleft$</td></tr><tr><td align="center"><code>$\curvearrowleft$</code></td><td>$\curvearrowleft$</td></tr></tbody></table><hr><table><thead><tr><th align="center">箭头形状</th><th>MarkDown</th></tr></thead><tbody><tr><td align="center"><code>$\circlearrowleft$</code></td><td>$\circlearrowleft$</td></tr><tr><td align="center"><code>$\Lsh$</code></td><td>$\Lsh$</td></tr><tr><td align="center"><code>$\mapsto$</code></td><td>$\mapsto$</td></tr><tr><td align="center"><code>$\hookleftarrow$</code></td><td>$\hookleftarrow$</td></tr><tr><td align="center"><code>$\hookrightarrow</code>$</td><td>$\hookrightarrow$</td></tr><tr><td align="center"><code>$\upharpoonright$</code></td><td>$\upharpoonright$</td></tr><tr><td align="center"><code>$\upharpoonleft$</code></td><td>$\upharpoonleft$</td></tr><tr><td align="center"><code>$\downharpoonright</code>$</td><td>$\downharpoonright$</td></tr><tr><td align="center"><code>$\downharpoonleft</code>$</td><td>$\downharpoonleft$</td></tr><tr><td align="center"><code>$\leftharpoonup$</code></td><td>$\leftharpoonup$</td></tr><tr><td align="center"><code>$\rightharpoonup$</code></td><td>$\rightharpoonup$</td></tr><tr><td align="center"><code>$\rightharpoondown$</code></td><td>$\rightharpoondown$</td></tr><tr><td align="center"><code>$\leftharpoondown$</code></td><td>$\leftharpoondown$</td></tr><tr><td align="center"><code>$\upuparrows$</code></td><td>$\upuparrows$</td></tr><tr><td align="center"><code>$\downdownarrows$</code></td><td>$\downdownarrows$</td></tr><tr><td align="center"><code>$\rightrightarrows$</code></td><td>$\rightrightarrows$</td></tr><tr><td align="center"><code>$\rightleftarrows$</code></td><td>$\rightleftarrows$</td></tr><tr><td align="center"><code>$\leftleftarrows$</code></td><td>$\leftleftarrows$</td></tr><tr><td align="center"><code>$\leftrightarrows$</code></td><td>$\leftrightarrows$</td></tr><tr><td align="center"><code>$\rightleftharpoons$</code></td><td>$\rightleftharpoons$</td></tr><tr><td align="center"><code>$\leftrightharpoons$</code></td><td>$\leftrightharpoons$</td></tr></tbody></table><h2 id="2-8-其他"><a href="#2-8-其他" class="headerlink" title="2.8 其他"></a>2.8 其他</h2><table><thead><tr><th></th><th>markdown语法（输入在两个$$之间）</th><th>显示</th></tr></thead><tbody><tr><td>加粗</td><td><code>\textbf&#123;Latex&#125;</code></td><td>$\textbf{Latex}$</td></tr><tr><td>波浪号</td><td><code>\sim</code></td><td>$\sim$</td></tr><tr><td></td><td></td><td></td></tr><tr><td>字体变大</td><td><code>\displaystyle</code></td><td>$\displaystyle\frac{x+y}{y+z}$</td></tr><tr><td>下划线</td><td><code>\underline</code></td><td>$\underline{x+y}$</td></tr><tr><td>上大括号</td><td><code>\overbrace&#123;&#125;</code></td><td>$\overbrace{x+y}$</td></tr><tr><td>下大括号</td><td><code>\underbrace&#123;&#125;</code></td><td>$\underbrace{x+y}$</td></tr><tr><td>不是斜体</td><td><code>\rm</code></td><td>$\rm e$</td></tr><tr><td>字母上方或下方加数字</td><td><code>$\mathop&#123;U&#125;^&#123;n&#125;\limits_&#123;i=1&#125;$</code></td><td>$\mathop{U}^{n}\limits_{i&#x3D;1}$</td></tr><tr><td>存在</td><td><code>\exists</code></td><td>$\exists$</td></tr><tr><td>任意</td><td><code>\forall</code></td><td>$\forall$</td></tr></tbody></table><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><table><thead><tr><th>字母（大写）</th><th>markdown语法（输入在两个$$之间）</th><th>字母小写</th><th>markdown语法</th></tr></thead><tbody><tr><td>$A$</td><td>A</td><td>$\alpha$</td><td>\alpha</td></tr><tr><td>$B$</td><td>B</td><td>$\beta$</td><td>\beta</td></tr><tr><td>$\Gamma$</td><td>\Gamma</td><td>$\gamma$</td><td>\gamma</td></tr><tr><td>$\Delta$</td><td>\Delta</td><td>$\delta$</td><td>\delta</td></tr><tr><td>$E$</td><td>E</td><td>$\epsilon$</td><td>\epsilon</td></tr><tr><td>$Z$</td><td>Z</td><td>$\zeta$</td><td>\zeta</td></tr><tr><td>$H$</td><td>H</td><td>$\eta$</td><td>\eta</td></tr><tr><td>$\Theta$</td><td>\Theta</td><td>$\theta$</td><td>\theta</td></tr><tr><td>$I$</td><td>I</td><td>$\iota$</td><td>\iota</td></tr><tr><td>$K$</td><td>K</td><td>$\kappa$</td><td>\kappa</td></tr><tr><td>$\Lambda$</td><td>\Lambda</td><td>$\lambda$</td><td>\lambda</td></tr><tr><td>M</td><td></td><td>$\mu$</td><td>\mu</td></tr><tr><td>$N$</td><td>N</td><td>$\nu$</td><td>\nu</td></tr><tr><td>$\Xi$</td><td>\Xi</td><td>$\xi$</td><td>\xi</td></tr><tr><td>$O$</td><td>O</td><td>$\omicron$</td><td>\omicron</td></tr><tr><td>$\Pi$</td><td>\Pi</td><td>$\pi$</td><td>\pi</td></tr><tr><td>$P$</td><td>P</td><td>$\rho$</td><td>\rho</td></tr><tr><td>$\Sigma$</td><td>\Sigmma</td><td>$\sigma$</td><td>\sigma</td></tr><tr><td>$T$</td><td>T</td><td>$\tau$</td><td>\tau</td></tr><tr><td>$\Upsilon$</td><td>\Upsilon</td><td>$\upsilon$</td><td>\upsilon</td></tr><tr><td>$\Phi$</td><td>\Phi</td><td>$\phi$</td><td>\phi</td></tr><tr><td>$X$</td><td>X</td><td>$\chi$</td><td>\chi</td></tr><tr><td>$\Psi$</td><td>\Psi</td><td>$\psi$</td><td>\psi</td></tr><tr><td>$\Omega$</td><td>\Omega</td><td>$\omega$</td><td>\omega</td></tr><tr><td></td><td></td><td>$\varphi$</td><td>\varphi</td></tr></tbody></table><p><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20220423092649473.png" alt="image-20220423092649473"></p><h1 id="三、-Markdown-LaTex公式"><a href="#三、-Markdown-LaTex公式" class="headerlink" title="三、 Markdown&#x2F;LaTex公式"></a>三、 Markdown&#x2F;LaTex公式</h1><h2 id="3-1-基本函数公式"><a href="#3-1-基本函数公式" class="headerlink" title="3.1 基本函数公式"></a>3.1 基本函数公式</h2><ul><li>行内公式：$\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt$</li></ul><p><code>\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt</code></p><ul><li><p>行间公式<br>$$<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105113339912.png" alt="image-20211105113339912"></p></li><li><p>$y_k &#x3D; \varphi(u_k+v_k)$<br><code>$y_k = \varphi(u_k+v_k)$</code></p></li><li><p>$y(x)&#x3D;x^3+2x^2+x+1$<br><code>$y(x)=x^3+2x^2+x+1$</code></p></li><li><p>$x^{y}&#x3D;(1+{\rm e}^x)^{-2xy}$<br><code>$x^&#123;y&#125;=(1+&#123;\rm e&#125;^x)^&#123;-2xy&#125;$</code></p></li><li><p>$\displaystyle f(n)&#x3D;\sum_{i&#x3D;1}^{n}{n*(n+1)}$<br><code>$\displaystyle f(n)=\sum_&#123;i=1&#125;^&#123;n&#125;&#123;n*(n+1)&#125;$</code></p></li></ul><h2 id="3-2-分段函数"><a href="#3-2-分段函数" class="headerlink" title="3.2 分段函数"></a>3.2 分段函数</h2><ul><li><p>分段函数<br>$$<br>y&#x3D;\begin{cases}<br>2x+1,&amp;x\leq0\<br>x,&amp;x&gt;0<br>\end{cases}<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105114606132.png" alt="image-20211105114606132"></p></li><li><p>齐次方程<br>$$<br>\left<br>{<br>\begin{array}{}<br>a_1x+b_1y+c_1z&#x3D;d_1 \<br>a_2x+b_2y+c_2z&#x3D;d_2 \<br>a_3x+b_3y+c_3z&#x3D;d_3<br>\end{array}<br>\right.<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105115235227.png" alt="image-20211105115235227"></p></li></ul><h2 id="3-3-积分"><a href="#3-3-积分" class="headerlink" title="3.3 积分"></a>3.3 积分</h2><ul><li><p>一重积分<br>$$<br>\int_{\theta_1(x)^{\theta_2(x)}}&#x3D;1<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105115407660.png" alt="image-20211105115407660"></p></li><li><p>二重积分<br>$$<br>\iint dx dy &#x3D;\sigma<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105115458340.png" alt="image-20211105115458340"></p></li><li><p>三重积分<br>$$<br>\iiint dx dydz&#x3D;\nu<br>$$<br><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105115553987.png" alt="image-20211105115553987"></p></li></ul><h2 id="3-4-微分和偏微分"><a href="#3-4-微分和偏微分" class="headerlink" title="3.4 微分和偏微分"></a>3.4 微分和偏微分</h2><ul><li><p>一阶微分方程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\frac&#123;dy&#125;&#123;dx&#125;+P(x)y = Q(x) \\</span><br><span class="line">\left. \frac&#123;&#123;\rm d&#125;y&#125;&#123;&#123;\rm d&#125;x&#125; \right|_&#123;x=0&#125; =3x+1=1</span><br></pre></td></tr></table></figure><p><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105115859719.png" alt="image-20211105115859719"></p></li><li><p>二阶微分方程<br>$$y’’+py’+qy&#x3D;f(x)$$<br>$$\frac{d^2y}{dx^2}+p\frac{dy}{dx}+qy&#x3D;f(x)$$</p></li><li><p>偏微分方程<br>$$<br>\frac{\partial u}{\partial t}&#x3D; h^2 \left( \frac{\partial^2 u}{\partial x^2} +\frac{\partial^2 u}{\partial y^2}+ \frac{\partial^2 u}{\partial z^2}\right)<br>$$</p></li></ul><h2 id="3-5-矩阵和行列式"><a href="#3-5-矩阵和行列式" class="headerlink" title="3.5 矩阵和行列式"></a>3.5 矩阵和行列式</h2><p><img src="/2024/08/22/%E8%BD%AF%E4%BB%B6/Typora/Typora/image-20211105120251402.png" alt="image-20211105120251402"></p><ul><li><p>单位矩阵<br>$$\begin{bmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{bmatrix}<br>$$</p><p>横省略号：\cdots<br>竖省略号：\vdots<br>斜省略号：\ddots</p></li><li><p><em>m</em> X <em>n</em> 矩阵<br>$$A&#x3D;\begin{bmatrix}<br>{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\<br>{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\<br>{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\<br>{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\<br>\end{bmatrix}$$</p></li><li><p>行列式<br>$$D&#x3D;\begin{vmatrix}<br>{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\<br>{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\<br>{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\<br>{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\<br>\end{vmatrix}$$</p></li><li><p>表格</p><p>$$\begin{array}{c|lll}<br>{}&amp;{a}&amp;{b}&amp;{c}\<br>\hline<br>{R_1}&amp;{c}&amp;{b}&amp;{a}\<br>{R_2}&amp;{b}&amp;{c}&amp;{c}\<br>\end{array}$$</p></li><li><p>增广矩阵<br>$$<br>\left[  \begin{array}  {c c | c}<br>1 &amp; 2 &amp; 3 \<br>\hline %插入横线，如果去掉\hline就是增广矩阵<br>4 &amp; 5 &amp; 6<br>\end{array}  \right]<br>$$</p></li></ul><h2 id="3-6-极限"><a href="#3-6-极限" class="headerlink" title="3.6 极限"></a>3.6 极限</h2><p>$$<br>f(n)&#x3D;\lim_{n \rightarrow +\infty} \frac{1}{n(n+1)}$$<br>$$\frac{1}{\lim_{u \rightarrow \infty}}, \frac{1}{\lim\limits_{u \rightarrow \infty}}<br>$$</p><h2 id="3-7-其他"><a href="#3-7-其他" class="headerlink" title="3.7 其他"></a>3.7 其他</h2><table><thead><tr><th></th><th><strong>markdown语法（输入在两个$$之间）</strong></th><th><strong>显示</strong></th></tr></thead><tbody><tr><td>圆括号（小括号）</td><td>\left( \frac{a}{b} \right )</td><td>$\left(\frac{a}{b}\right)$</td></tr><tr><td>方括号（中括号）</td><td>\left[ \frac{a}{b} \right]</td><td>$\left[\frac{a}{b}\right]$</td></tr><tr><td>角括号</td><td>\left \langle \frac{a}{b} \right \rangle</td><td>$\left \langle \frac{a}{b} \right \rangle$</td></tr><tr><td>取整函数</td><td>\left \lfloor \frac{a}{b} \right \rfloor</td><td>$\left \lfloor \frac{a}{b} \right \rfloor$</td></tr><tr><td>取顶函数</td><td>\left \lceil \frac{c}{d} \right \rceil</td><td>$\left \lceil \frac{c}{d} \right \rceil$</td></tr><tr><td>斜线与反斜线</td><td>\left &#x2F; \frac{a}{b} \right \backslash</td><td>$\left &#x2F; \frac{a}{b} \right \backslash$</td></tr><tr><td>上下箭头</td><td>\left \uparrow \frac{a}{b} \right \downarrow</td><td>$\left \uparrow \frac{a}{b} \right \downarrow$</td></tr><tr><td>混合括号</td><td>\left [ 0,1 \right )</td><td>$\left [ 0,1 \right )$</td></tr><tr><td>空格</td><td><code>&amp;nbsp;&amp;ensp;&amp;emsp;&amp;thinsp;</code></td><td></td></tr><tr><td>左对齐</td><td><code>\begin&#123;array&#125;&#123;l&#125;    \end&#123;array&#125;</code></td><td></td></tr><tr><td>居中对齐</td><td><code>\begin&#123;array&#125;&#123;c&#125;    \end&#123;array&#125;</code></td><td></td></tr><tr><td>右对齐</td><td><code>\begin&#123;array&#125;&#123;r&#125;    \end&#123;array&#125;</code></td><td></td></tr></tbody></table><h2 id="3-8、空格"><a href="#3-8、空格" class="headerlink" title="3.8、空格"></a>3.8、空格</h2><table><thead><tr><th></th><th>markdown语法</th><th>显示</th></tr></thead><tbody><tr><td>两个quad空格</td><td>a \qquad b</td><td>$a \qquad b$</td></tr><tr><td>quad空格</td><td>a \quad b</td><td>$a \quad b$</td></tr><tr><td>大空格</td><td>a \ b</td><td>$ a\ b$</td></tr><tr><td>中等空格</td><td>a ;b</td><td>$a;b$</td></tr><tr><td>小空格</td><td>a , b</td><td>$a,b$</td></tr><tr><td>紧贴</td><td><code>a\! b</code></td><td>$a!b$</td></tr></tbody></table><h1 id="四、Typora优化"><a href="#四、Typora优化" class="headerlink" title="四、Typora优化"></a>四、Typora优化</h1><p><a href="https://zhuanlan.zhihu.com/p/361486179">Typora打造最适合编程笔记的精美主题（浅色版和修改后的深色版），可自行修改喜欢的样式。 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2024/08/22/Git/git/"/>
      <url>/2024/08/22/Git/git/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Git"><a href="#一、Git" class="headerlink" title="一、Git"></a>一、Git</h1><h2 id="1-1、版本控制器的方式"><a href="#1-1、版本控制器的方式" class="headerlink" title="1.1、版本控制器的方式"></a>1.1、版本控制器的方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">a、集中式版本控制工具</span><br><span class="line">集中式版本控制工具，版本库是集中存放在中央服务器的，team里每个人work时从中央服务器下载代码，是必须联网才能工作，局域网或互联网。个人修改后然后提交到中央版本库。</span><br><span class="line">svn因为每次存的都是差异 需要的硬盘空间会相对的小一点  可是回滚的速度会很慢</span><br><span class="line">举例：SVN和CVS</span><br><span class="line">优点: </span><br><span class="line">    代码存放在单一的服务器上 便于项目的管理</span><br><span class="line">缺点: </span><br><span class="line">    服务器宕机: 员工写的代码得不到保障</span><br><span class="line">    服务器炸了: 整个项目的历史记录都会丢失</span><br><span class="line">    </span><br><span class="line">b、分布式版本控制工具</span><br><span class="line">分布式版本控制系统没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样工作的时候，无需要联网了，因为版本库就在你自己的电脑上。多人协作只需要各自的修改推送给对方，就能互相看到对方的修改了。</span><br><span class="line">git每次存的都是项目的完整快照 需要的硬盘空间会相对大一点</span><br><span class="line">    (Git团队对代码做了极致的压缩 最终需要的实际空间比svn多不了太多 可是Git的回滚速度极快)</span><br><span class="line">举例：Git</span><br><span class="line">优点:</span><br><span class="line">    完全的分布式</span><br><span class="line">缺点:    </span><br><span class="line">    学习起来比SVN陡峭</span><br></pre></td></tr></table></figure><h2 id="1-2、SVN"><a href="#1-2、SVN" class="headerlink" title="1.2、SVN"></a>1.2、SVN</h2><p><img src="/2024/08/22/Git/git/SVN.png" alt="SVN"></p><h2 id="1-3、Git"><a href="#1-3、Git" class="headerlink" title="1.3、Git"></a>1.3、Git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Git是分布式的,Git不需要有中心服务器，我们每台电脑拥有的东西都是一样的。我们使用Git并且有个中心服务器，仅仅是为了方便交换大家的修改，但是这个服务器的地位和我们每个人的PC是一样的。我们可以把它当做一个开发者的pc就可以就是为了大家代码容易交流不关机用的。没有它大家一样可以工作，只不过“交换”修改不方便而已。</span><br><span class="line">git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git是Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</span><br><span class="line">同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</span><br><span class="line">到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 他们对新的系统制订了若干目标：</span><br><span class="line"> 速度</span><br><span class="line"> 简单的设计</span><br><span class="line"> 对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</span><br><span class="line"> 完全分布式</span><br><span class="line"> 有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</span><br></pre></td></tr></table></figure><p><img src="/2024/08/22/Git/git/Git.png" alt="Git"></p><h2 id="1-4、Git工作流程图"><a href="#1-4、Git工作流程图" class="headerlink" title="1.4、Git工作流程图"></a>1.4、Git工作流程图</h2><p><img src="/2024/08/22/Git/git/Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Git工作流程图"></p><p>命令如下：</p><ol><li>clone（克隆）: 从远程仓库中克隆代码到本地仓库</li><li>checkout （检出）:从本地仓库中检出一个仓库分支然后进行修订</li><li>add（添加）: 在提交前先将代码提交到暂存区</li><li>commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本</li><li>fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</li><li>pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于fetch+merge</li><li>push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</li></ol><h2 id="1-5、资源"><a href="#1-5、资源" class="headerlink" title="1.5、资源"></a>1.5、资源</h2><ul><li><a href="https://blog.csdn.net/TroyeSivanlp/article/details/121172010">git教程1–如何操作本地仓库（保姆级教程，好上手）_gitlab-ce 本地仓库操作-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_43142509/article/details/123134869#Git_4">使用Git上传项目到GitHub（详细版）-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_41621896/article/details/118569844">gitLab配置ssh-CSDN博客</a></li><li><a href="https://blog.csdn.net/zongzhankui/article/details/78888651">Git提交到多个远程仓库_git怎样提交两个仓库的修改-CSDN博客</a></li><li><a href="https://blog.csdn.net/u011870022/article/details/117883717">windows下git配置github和gitee SSH-Key密钥方便同时将本地分支推送到远程仓库_git ecdsa key-CSDN博客</a></li></ul><h1 id="二、Git环境配置"><a href="#二、Git环境配置" class="headerlink" title="二、Git环境配置"></a>二、Git环境配置</h1><p>常用命令：</p><ul><li><code>ls</code>&#x2F;<code>ll</code> 查看当前目录</li><li><code>cat</code> 查看文件内容</li><li><code>touch</code> 创建文件</li><li><code>vi</code> vi编辑器（使用vi编辑器是为了方便展示效果，学员可以记事本、EditPlus、NotePad++等其它编辑器）</li></ul><h2 id="2-1、下载与安装"><a href="#2-1、下载与安装" class="headerlink" title="2.1、下载与安装"></a>2.1、下载与安装</h2><p>下载地址： <a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p><img src="/2024/08/22/Git/git/Git%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85.png" alt="Git下载与安装"></p><p>下载完成后可以得到如下安装文件：</p><p><img src="/2024/08/22/Git/git/Git%E5%AE%89%E8%A3%85%E5%8C%85.png" alt="Git安装包"></p><p>双击下载的安装文件来安装Git。安装完成后在电脑桌面（也可以是其他目录)点击右键，如果能够看到如下两个菜单则说明Git安装成功。</p><p><img src="/2024/08/22/Git/git/Git%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95.png" alt="Git右键菜单"></p><p>备注：</p><p>Git GUI：Git提供的图形界面工具</p><p>Git Bash：Git提供的命令行工具</p><p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息</p><h2 id="2-2、基本配置"><a href="#2-2、基本配置" class="headerlink" title="2.2、基本配置"></a>2.2、基本配置</h2><ol><li><p>打开Git Bash</p></li><li><p>设置用户信息</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name “itcast”</span><br><span class="line">git config --global user.email “hello@itcast.cn”</span><br></pre></td></tr></table></figure></li></ol><p>查看配置信息<br><code>git config --global user.name</code><br><code>git config --global user.email</code></p><h2 id="2-3、为常用指令配置别名（可选）"><a href="#2-3、为常用指令配置别名（可选）" class="headerlink" title="2.3、为常用指令配置别名（可选）"></a>2.3、为常用指令配置别名（可选）</h2><p>有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名。</p><ol><li><p>打开用户目录，创建<code>.bashrc</code>文件<br> 部分windows系统不允许用户创建点号开头的文件，可以打开gitBash,执行<code>touch ~/.bashrc</code><br> <img src="/2024/08/22/Git/git/%E5%88%9B%E5%BB%BAbashrc.png" alt="创建bashrc"></p></li><li><p>在<code>.bashrc</code>文件中输入如下内容：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于输出git提交日志</span></span><br><span class="line">alias git-log=&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于输出当前目录所有文件及基本信息</span></span><br><span class="line">alias ll=&#x27;ls -al&#x27;</span><br></pre></td></tr></table></figure></li><li><p>打开gitBash，执行<code>source ~/.bashrc</code><br> <img src="/2024/08/22/Git/git/bashrc.png" alt="bashrc"></p></li></ol><h2 id="2-4、解决GitBash乱码问题"><a href="#2-4、解决GitBash乱码问题" class="headerlink" title="2.4、解决GitBash乱码问题"></a>2.4、解决GitBash乱码问题</h2><ol><li><p>打开GitBash执行下面命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure></li><li><p><code>$&#123;git_home&#125;/etc/bash.bashrc</code>文件最后加入下面两行</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">export LC_ALL=&quot;zh_CN.UTF-8&quot;</span><br></pre></td></tr></table></figure></li></ol><h1 id="三、获取本地仓库"><a href="#三、获取本地仓库" class="headerlink" title="三、获取本地仓库"></a>三、获取本地仓库</h1><p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库<br>1）在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库<br>2）进入这个目录中，点击右键打开Git bash窗口<br>3）执行命令<code>git init</code><br>4）如果创建成功后可在文件夹下看到隐藏的.git目录。</p><p><img src="/2024/08/22/Git/git/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png" alt="获取本地仓库"></p><h1 id="四、基础操作指令"><a href="#四、基础操作指令" class="headerlink" title="四、基础操作指令"></a>四、基础操作指令</h1><p>Git工作目录下对于文件的<strong>修改</strong>（增加、删除、更新）会存在几个状态，这些修改的状态会随着我们执行Git的命令而发生变化。</p><p><img src="/2024/08/22/Git/git/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4.png" alt="基础操作指令"></p><p>本章节主要讲解如何使用命令来控制这些状态之间的转换：</p><ol><li>git add (工作区 –&gt; 暂存区)</li><li>git commit (暂存区 –&gt; 本地仓库)</li></ol><h2 id="4-1、-查看修改的状态-status"><a href="#4-1、-查看修改的状态-status" class="headerlink" title="4.1、&#x3D;&#x3D;查看修改的状态(status)&#x3D;&#x3D;"></a>4.1、&#x3D;&#x3D;查看修改的状态(status)&#x3D;&#x3D;</h2><ul><li>作用：查看的修改的状态（暂存区、工作区）</li><li>命令形式：<code>git status</code></li></ul><h2 id="4-2、-添加工作区到暂存区-add"><a href="#4-2、-添加工作区到暂存区-add" class="headerlink" title="4.2、&#x3D;&#x3D;添加工作区到暂存区(add)&#x3D;&#x3D;"></a>4.2、&#x3D;&#x3D;添加工作区到暂存区(add)&#x3D;&#x3D;</h2><ul><li>作用：添加工作区一个或多个文件的修改到暂存区</li><li>命令形式：<code>git add 单个文件名|通配符</code><ul><li>将所有修改加入暂存区：<code>git add .</code></li></ul></li></ul><h2 id="4-3、-提交暂存区到本地仓库-commit"><a href="#4-3、-提交暂存区到本地仓库-commit" class="headerlink" title="4.3、&#x3D;&#x3D;提交暂存区到本地仓库(commit)&#x3D;&#x3D;"></a>4.3、&#x3D;&#x3D;提交暂存区到本地仓库(commit)&#x3D;&#x3D;</h2><ul><li>作用：提交暂存区内容到本地仓库的当前分支</li><li>命令形式：<code>git commit -m &#39;注释内容&#39;</code></li></ul><h2 id="4-4、-查看提交日志-log"><a href="#4-4、-查看提交日志-log" class="headerlink" title="4.4、&#x3D;&#x3D;查看提交日志(log)&#x3D;&#x3D;"></a>4.4、&#x3D;&#x3D;查看提交日志(log)&#x3D;&#x3D;</h2><p><strong>在2.3中配置的别名<code>git-log</code>就包含了这些参数，所以后续可以直接使用指令<code>git-log</code></strong></p><ul><li>作用:查看提交记录</li><li>命令形式：<code>git log [option]</code><ul><li>options<ul><li><code>--all</code> 显示所有分支</li><li><code>--pretty=oneline</code> 将提交信息显示为一行</li><li><code>--abbrev-commit</code> 使得输出的commitID更简短</li><li><code>--graph</code> 以图的形式显示</li></ul></li></ul></li></ul><h2 id="4-5、版本回退"><a href="#4-5、版本回退" class="headerlink" title="4.5、版本回退"></a>4.5、版本回退</h2><ul><li>作用：版本切换</li><li>命令形式：<code>git reset --hard commitID</code><ul><li>commitID 可以使用<code>git-log</code>或<code>git log</code>指令查看</li></ul></li><li>如何查看已经删除的记录？<ul><li><code>git reflog</code></li><li>这个指令可以看到已经删除的提交记录</li></ul></li></ul><h2 id="4-6、添加文件至忽略列表"><a href="#4-6、添加文件至忽略列表" class="headerlink" title="4.6、添加文件至忽略列表"></a>4.6、添加文件至忽略列表</h2><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为<code> .gitignore</code>的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">no .a files</span></span><br><span class="line">*.a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">but <span class="keyword">do</span> track lib.a, even though you<span class="string">&#x27;re ignoring .a files above</span></span></span><br><span class="line">!lib.a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">only ignore the &#x27;</span>TODO<span class="string">&#x27; file in the current directory, not subdir/TODO</span></span></span><br><span class="line">/TODO</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">ignore all files in the &#x27;</span>build/<span class="string">&#x27; directory</span></span></span><br><span class="line">build/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">ignore doc/notes.txt, but not doc/server/arch.txt</span></span></span><br><span class="line">doc/*.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">ignore all .pdf files in the doc/ directory</span></span></span><br><span class="line">doc/**/*.pdf</span><br></pre></td></tr></table></figure><h2 id="4-7、查询"><a href="#4-7、查询" class="headerlink" title="4.7、查询"></a>4.7、查询</h2><p>   git  status   :  查看工作目录中文件的状态(已跟踪(已提交 已暂存 已修改) 未跟踪)<br>   git  diff     :  查看未暂存的修改<br>   git  diff –cache : 查看未提交的暂存<br>   git  log –oneline : 查看提交记录</p><h2 id="练习-基础操作"><a href="#练习-基础操作" class="headerlink" title="练习:基础操作"></a>练习:基础操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################仓库初始化######################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录（git_test01）并在目录下打开gitbash</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化git仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################创建文件并提交#####################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">目录下创建文件 file01.txt</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将修改加入暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将修改提交到本地仓库，提交记录内容为：commit 001</span></span><br><span class="line">git commit -m &#x27;commit 001&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看日志</span></span><br><span class="line">git log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###################修改文件并提交######################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改file01的内容为：count=1</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将修改加入暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="comment"># 将修改提交到本地仓库，提交记录内容为：update file01</span></span></span><br><span class="line">git commit -m &#x27;update file01&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看日志</span></span><br><span class="line">git log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###################将最后一次修改还原##################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到倒数第2次提交的commitID</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">版本回退</span></span><br><span class="line">git reset commitID --hard</span><br></pre></td></tr></table></figure><hr><h1 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h1><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><h2 id="5-1、查看本地分支"><a href="#5-1、查看本地分支" class="headerlink" title="5.1、查看本地分支"></a>5.1、查看本地分支</h2><ul><li>命令：<code>git branch</code></li></ul><h2 id="5-2、创建本地分支"><a href="#5-2、创建本地分支" class="headerlink" title="5.2、创建本地分支"></a>5.2、创建本地分支</h2><ul><li>命令：<code>git branch 分支名</code></li></ul><h2 id="5-3、切换分支-checkout"><a href="#5-3、切换分支-checkout" class="headerlink" title="5.3、切换分支(checkout)"></a>5.3、切换分支(checkout)</h2><ul><li>命令：<code>git checkout 分支名</code></li></ul><p>我们还可以直接切换到一个不存在的分支（创建并切换）</p><ul><li>命令：<code>git checkout -b 分支名</code></li></ul><h2 id="5-4、合并分支-merge"><a href="#5-4、合并分支-merge" class="headerlink" title="5.4、合并分支(merge)"></a>5.4、合并分支(merge)</h2><p>一个分支（合并分支）上的提交可以合并到另一个分支（目标分支）</p><ul><li>需要先切换到目标分支：<code>git checkout 目标分支名</code></li><li>合并命令：<code>git merge 合并分支名</code></li></ul><h2 id="5-5、删除分支"><a href="#5-5、删除分支" class="headerlink" title="5.5、删除分支"></a>5.5、删除分支</h2><p><strong>不能删除当前分支，只能删除其他分支</strong></p><ul><li><code>git branch -d 分支名</code> 删除分支时，需要做各种检查</li><li><code>git branch -D 分支名</code> 不做任何检查，强制删除</li><li>E.g.<br>  <img src="/2024/08/22/Git/git/%E5%88%A0%E9%99%A4%E5%88%86%E6%94%AF.png" alt="删除分支"></li></ul><h2 id="5-6、解决冲突"><a href="#5-6、解决冲突" class="headerlink" title="5.6、解决冲突"></a>5.6、解决冲突</h2><p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解决冲突，解决冲突步骤如下：</p><ol><li>处理文件中冲突的地方</li><li>将解决完冲突的文件加入暂存区(add)</li><li>提交到仓库(commit)</li></ol><p>就是哪里合并有问题，你手动更改，再进行提交</p><p>冲突部分的内容处理如下所示：</p><p><img src="/2024/08/22/Git/git/%E5%86%B2%E7%AA%81%E5%A4%84%E7%90%86.png" alt="冲突处理.png"></p><h2 id="5-7、开发中分支使用原则与流程"><a href="#5-7、开发中分支使用原则与流程" class="headerlink" title="5.7、开发中分支使用原则与流程"></a>5.7、开发中分支使用原则与流程</h2><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><p>在开发中，一般有如下分支使用原则与流程：</p><ul><li>master （生产） 分支<br>  线上分支，主分支，中小规模项目作为线上运行的应用对应的分支。</li><li>develop（开发）分支<br>  是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。</li><li>feature&#x2F;xxxx分支<br>  从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后合并到develop分支。</li><li>hotfix&#x2F;xxxx分支，<br>  从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支。</li><li>还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</li><li><img src="/2024/08/22/Git/git/%E5%88%86%E6%94%AF.png" alt="分支"></li></ul><h2 id="练习-分支操作"><a href="#练习-分支操作" class="headerlink" title="练习:分支操作"></a>练习:分支操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################创建并切换到dev01分支，在dev01分支提交</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]创建分支dev01</span></span><br><span class="line">git branch dev01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]切换到dev01</span></span><br><span class="line">git checkout dev01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[dev01]创建文件file02.txt</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[dev01]将修改加入暂存区并提交到仓库,提交记录内容为：add file02 on dev</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;add file02 on dev&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[dev01]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################切换到master分支，将dev01合并到master分支</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[dev01]切换到master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]合并dev01到master分支</span></span><br><span class="line">git merge dev01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]查看文件变化(目录下也出现了file02.txt)</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#########################删除dev01分支</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]删除dev01分支</span></span><br><span class="line">git branch -d dev01</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[master]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br></pre></td></tr></table></figure><hr><h1 id="六、远程仓库"><a href="#六、远程仓库" class="headerlink" title="六、远程仓库"></a>六、远程仓库</h1><h2 id="6-1、-常用的托管服务-远程仓库"><a href="#6-1、-常用的托管服务-远程仓库" class="headerlink" title="6.1、 常用的托管服务[远程仓库]"></a>6.1、 常用的托管服务[远程仓库]</h2><p>​gitHub（ 地址：<a href="https://github.com/">https://github.com/</a> ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub<br>​码云（地址： <a href="https://gitee.com/">https://gitee.com/</a> ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快<br>​GitLab （地址： <a href="https://about.gitlab.com/">https://about.gitlab.com/</a> ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务,一般用于在企业、学校等内部网络搭建git私服。</p><h2 id="6-2、-注册码云"><a href="#6-2、-注册码云" class="headerlink" title="6.2、 注册码云"></a>6.2、 注册码云</h2><p>要想使用码云的相关服务，需要注册账号（地址： <a href="https://gitee.com/signup">https://gitee.com/signup</a> ）</p><p><img src="/2024/08/22/Git/git/%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91.png" alt="注册码云"></p><h2 id="6-3、创建远程仓库"><a href="#6-3、创建远程仓库" class="headerlink" title="6.3、创建远程仓库"></a>6.3、创建远程仓库</h2><p><img src="/2024/08/22/Git/git/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="创建远程仓库"></p><p>仓库创建完成后可以看到仓库地址，如下图所示:</p><p><img src="/2024/08/22/Git/git/%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80.png" alt="仓库地址"></p><h2 id="6-4、配置SSH公钥"><a href="#6-4、配置SSH公钥" class="headerlink" title="6.4、配置SSH公钥"></a>6.4、配置SSH公钥</h2><ul><li>生成SSH公钥<ul><li><code>ssh-keygen -t rsa</code></li><li>不断回车<ul><li>如果公钥已经存在，则自动覆盖</li></ul></li></ul></li><li>Gitee设置账户共公钥<ul><li>获取公钥<ul><li><code>cat ~/.ssh/id_rsa.pub</code></li></ul></li><li><img src="/2024/08/22/Git/git/SSH%E5%85%AC%E9%92%A5.png" alt="SSH公钥"></li><li>验证是否配置成功<ul><li><code>ssh -T git@gitee.com</code></li></ul></li></ul></li></ul><h2 id="6-5、操作远程仓库"><a href="#6-5、操作远程仓库" class="headerlink" title="6.5、操作远程仓库"></a>6.5、操作远程仓库</h2><h3 id="6-5-1、添加远程仓库"><a href="#6-5-1、添加远程仓库" class="headerlink" title="6.5.1、添加远程仓库"></a>6.5.1、添加远程仓库</h3><p><strong>此操作是先初始化本地库，然后与已创建的远程库进行对接。</strong></p><ul><li><p>命令： <code>git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</code></p><ul><li><p>远端名称，默认是origin，取决于远端服务器设置</p></li><li><p>仓库路径，从远端服务器获取此URL</p></li><li><p>例如：<br>  <code>git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git</code><br>  <code>git remote set-url --add origin https://github.com/zkzong/mongodb.git</code><br>  <code>git push origin --all</code></p><p>  <img src="/2024/08/22/Git/git/%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="添加远程仓库"></p></li></ul></li></ul><h3 id="6-5-2、查看远程仓库"><a href="#6-5-2、查看远程仓库" class="headerlink" title="6.5.2、查看远程仓库"></a>6.5.2、查看远程仓库</h3><ul><li>命令：<code>git remote</code><br>  <img src="/2024/08/22/Git/git/%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="查看远程仓库"></li><li>查看详细链接：<code>git remote -v</code></li></ul><h3 id="6-5-3、推送到远程仓库"><a href="#6-5-3、推送到远程仓库" class="headerlink" title="6.5.3、推送到远程仓库"></a>6.5.3、推送到远程仓库</h3><ul><li>命令：<code>git push[ -f][ --set-upstream][ 远端名称[ 本地分支名[:远端分支名]]]</code><ul><li>如果远程分支名和本地分支名称相同，则可以只写本地分支<ul><li><code>git push origin master</code>&#x3D;<code>git push origin master:master</code><br>  <img src="/2024/08/22/Git/git/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95.png" alt="推送到远程仓库-两种写法"></li></ul></li><li><code>-f</code> &#x3D; <code>--force</code> 表示强制覆盖</li><li><code>-u</code> &#x3D; <code>--set-upstream</code> 推送到远端的同时并且建立起和远端分支的关联关系。<ul><li><code>git push --set-upstream origin master</code></li></ul></li><li>如果<strong>当前分支已经和远端分支关联</strong>，则可以省略分支名和远端名。<ul><li><code>git push</code> 将master分支推送到已关联的远端分支。<br>  <img src="/2024/08/22/Git/git/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="推送到远程仓库"></li></ul></li></ul></li></ul><p>查询远程仓库</p><p><img src="/2024/08/22/Git/git/%E6%9F%A5%E8%AF%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="查询远程仓库"></p><h3 id="6-5-4、-本地分支与远程分支的关联关系"><a href="#6-5-4、-本地分支与远程分支的关联关系" class="headerlink" title="6.5.4、 本地分支与远程分支的关联关系"></a>6.5.4、 本地分支与远程分支的关联关系</h3><ul><li>查看关联关系我们可以使用 <code>git branch -vv</code> 命令</li></ul><p><img src="/2024/08/22/Git/git/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E5%92%8C%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E7%9A%84%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png" alt="查看本地分支和远程分支的关联关系"></p><h3 id="6-5-5、从远程仓库克隆"><a href="#6-5-5、从远程仓库克隆" class="headerlink" title="6.5.5、从远程仓库克隆"></a>6.5.5、从远程仓库克隆</h3><p>如果已经有一个远端仓库，我们可以直接clone到本地。</p><ul><li>命令: <code>git clone &lt;仓库路径&gt; [本地目录]</code><ul><li>本地目录可以省略，会自动生成一个目录</li></ul></li></ul><p><img src="/2024/08/22/Git/git/%E5%85%8B%E9%9A%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%88%B0%E6%9C%AC%E5%9C%B0.png" alt="克隆远程仓库到本地"></p><h3 id="6-5-6、从远程仓库中抓取和拉取"><a href="#6-5-6、从远程仓库中抓取和拉取" class="headerlink" title="6.5.6、从远程仓库中抓取和拉取"></a>6.5.6、从远程仓库中抓取和拉取</h3><p>远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作。</p><ul><li>抓取 命令：<code>git fetch [remote name] [branch name]</code><ul><li><strong>抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</strong></li><li>如果不指定远端名称和分支名，则抓取所有分支。</li></ul></li><li>拉取 命令：<code>git pull [remote name] [branch name]</code><ul><li><strong>拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge</strong></li><li>如果不指定远端名称和分支名，则抓取所有并更新当前分支。</li></ul></li></ul><ol><li>在test01这个本地仓库进行一次提交并推送到远程仓库<br> <img src="/2024/08/22/Git/git/%E5%9C%A8test01%E8%BF%99%E4%B8%AA%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E5%B9%B6%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt="在test01这个本地仓库进行一次提交并推送到远程仓库"></li><li>在另一个仓库将远程提交的代码拉取到本地仓库<br> <img src="/2024/08/22/Git/git/%E5%B0%86%E4%BB%93%E5%BA%93%E9%87%8C%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81%E6%8B%89%E5%8F%96%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png" alt="将仓库里远程提交的代码拉取到本地仓库"></li></ol><h3 id="6-5-7、解决合并冲突"><a href="#6-5-7、解决合并冲突" class="headerlink" title="6.5.7、解决合并冲突"></a>6.5.7、解决合并冲突</h3><p>在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突。</p><p>A用户在本地修改代码后优先推送到远程仓库，此时B用户在本地修订代码，提交到本地仓库后，也需要推送到远程仓库，此时B用户晚于A用户，<strong>故需要先拉取远程仓库的提交，经过合并后才能推送到远端分支</strong>，如下图所示。</p><p><img src="/2024/08/22/Git/git/%E8%A7%A3%E5%86%B3%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png" alt="解决远程仓库合并冲突"></p><p>在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突。</p><p><strong>远程分支也是分支，所以合并时冲突的解决方式也和解决本地分支冲突相同相同</strong>，在此不再赘述，需要学员自己练习。</p><h3 id="练习-远程仓库操作"><a href="#练习-远程仓库操作" class="headerlink" title="练习:远程仓库操作"></a>练习:远程仓库操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#########################1-将本地仓库推送到远程仓库</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test01]添加远程仓库</span></span><br><span class="line">git remote add origin git@gitee.com/**/**.git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test01]将master分支推送到远程仓库,并与远程仓库的master分支绑定关联关系</span></span><br><span class="line">git push --set-upstream origin master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################2-将远程仓库克隆到本地</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将远程仓库克隆到本地git_test02目录下</span></span><br><span class="line">git clone git@gitee.com/**/**.git git_test02</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test02]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################3-将本地修改推送到远程仓库</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test01]创建文件file03.txt</span></span><br><span class="line">略</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test01]将修改加入暂存区并提交到仓库,提交记录内容为：add file03</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;add file03&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test01]将master分支的修改推送到远程仓库</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################4-将远程仓库的修改更新到本地</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[git_test02]将远程仓库修改再拉取到本地</span></span><br><span class="line">git pull</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件变化(目录下也出现了file03.txt)</span></span><br><span class="line">略</span><br></pre></td></tr></table></figure><h1 id="附-几条铁令"><a href="#附-几条铁令" class="headerlink" title="附:几条铁令"></a>附:几条铁令</h1><ol><li><strong>切换分支前先提交本地的修改</strong></li><li>代码及时提交，提交过了就不会丢</li><li>遇到任何问题都不要删除文件目录，第1时间找老师</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/09/MFC/MFC(%E4%B8%80)/"/>
      <url>/2024/08/09/MFC/MFC(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="一、MFC概念和作用"><a href="#一、MFC概念和作用" class="headerlink" title="一、MFC概念和作用"></a>一、MFC概念和作用</h1><ul><li><p>MFC：微软基础类库 （Microsoft  Foundation Class Library），封装了windows应用程序的各种API和相关机制的C++类库</p></li><li><p>总结：</p><ol><li>MFC是一个大的类库</li><li>MFC是一个应用程序框架</li></ol></li><li><p>为什么使用MFC？</p><ul><li>应用提供的框架，可以快速开发</li></ul></li><li><p>MFC常用的头文件</p><ul><li>afx.h-将各种MFC头文件包含在内</li><li>afxwin.h-包含了各种MFC窗口类。包含afx.h和windows.h</li><li>afxext.h-提供了扩展窗口类的支持，例如工具栏</li></ul></li></ul><h1 id="二、空win32程序模板"><a href="#二、空win32程序模板" class="headerlink" title="二、空win32程序模板"></a>二、空win32程序模板</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 窗口过程函数声明</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用程序入口点</span></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, <span class="type">int</span> iCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 定义窗口类名</span></span><br><span class="line">    <span class="type">static</span> TCHAR szAppName[] = <span class="built_in">TEXT</span>(<span class="string">&quot;HelloWin&quot;</span>);</span><br><span class="line">    HWND hwnd;</span><br><span class="line">    MSG msg;</span><br><span class="line">    WNDCLASS wndclass;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置窗口类属性</span></span><br><span class="line">    wndclass.style = CS_HREDRAW | CS_VREDRAW; <span class="comment">// 水平和垂直重绘</span></span><br><span class="line">    wndclass.lpfnWndProc = WndProc; <span class="comment">// 指向窗口过程函数的指针</span></span><br><span class="line">    wndclass.cbClsExtra = <span class="number">0</span>; <span class="comment">// 类附加内存</span></span><br><span class="line">    wndclass.cbWndExtra = <span class="number">0</span>; <span class="comment">// 窗口附加内存</span></span><br><span class="line">    wndclass.hInstance = hInstance; <span class="comment">// 当前实例句柄</span></span><br><span class="line">    wndclass.hIcon = <span class="built_in">LoadIcon</span>(<span class="literal">NULL</span>, IDI_APPLICATION); <span class="comment">// 加载默认应用程序图标</span></span><br><span class="line">    wndclass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW); <span class="comment">// 加载箭头光标</span></span><br><span class="line">    wndclass.hbrBackground = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH); <span class="comment">// 设置背景颜色为白色</span></span><br><span class="line">    wndclass.lpszMenuName = <span class="literal">NULL</span>; <span class="comment">// 无菜单</span></span><br><span class="line">    wndclass.lpszClassName = szAppName; <span class="comment">// 窗口类名</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//--------------------- 以下为 窗口类的注册 --------------------------------------------</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">RegisterClass</span>(&amp;wndclass))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 注册失败，显示错误消息</span></span><br><span class="line">        <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;This program requires Windows NT!&quot;</span>), szAppName, MB_ICONERROR);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---------------------- 创建窗口 --------------------------</span></span><br><span class="line">    hwnd = <span class="built_in">CreateWindow</span>(szAppName, <span class="comment">// 窗口类名</span></span><br><span class="line">        <span class="built_in">TEXT</span>(<span class="string">&quot;The Hello Program&quot;</span>), <span class="comment">// 窗口标题</span></span><br><span class="line">        WS_OVERLAPPEDWINDOW, <span class="comment">// 窗口样式</span></span><br><span class="line">        CW_USEDEFAULT, <span class="comment">// 初始水平位置</span></span><br><span class="line">        CW_USEDEFAULT, <span class="comment">// 初始垂直位置</span></span><br><span class="line">        CW_USEDEFAULT, <span class="comment">// 初始宽度</span></span><br><span class="line">        CW_USEDEFAULT, <span class="comment">// 初始高度</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 父窗口句柄</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 菜单句柄</span></span><br><span class="line">        hInstance, <span class="comment">// 当前实例句柄</span></span><br><span class="line">        <span class="literal">NULL</span>); <span class="comment">// 窗口创建数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --------------------- 显示窗口 ------------------------</span></span><br><span class="line">    <span class="built_in">ShowWindow</span>(hwnd, iCmdShow);</span><br><span class="line">    <span class="comment">// ---------------------- 绘制用户区 ---------------------------</span></span><br><span class="line">    <span class="built_in">UpdateWindow</span>(hwnd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---------------------- 消息循环 -----------------------------------</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg); <span class="comment">// 翻译消息</span></span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg); <span class="comment">// 分发消息</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> msg.wParam; <span class="comment">// 返回消息的wParam值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------- 以下为窗口函数WndProc--------------------------------</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hdc;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    RECT rect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">        <span class="comment">// 创建窗口时播放声音</span></span><br><span class="line">        <span class="built_in">PlaySound</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;hellowin.wav&quot;</span>), <span class="literal">NULL</span>, SND_FILENAME | SND_ASYNC);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        <span class="comment">// 绘制窗口内容</span></span><br><span class="line">        hdc = <span class="built_in">BeginPaint</span>(hwnd, &amp;ps);</span><br><span class="line">        <span class="built_in">GetClientRect</span>(hwnd, &amp;rect); <span class="comment">// 获取客户区矩形</span></span><br><span class="line">        <span class="built_in">DrawText</span>(hdc, <span class="built_in">TEXT</span>(<span class="string">&quot;Hello, Windows 98!&quot;</span>), <span class="number">-1</span>, &amp;rect, DT_SINGLELINE | DT_CENTER | DT_VCENTER); <span class="comment">// 绘制文本</span></span><br><span class="line">        <span class="built_in">EndPaint</span>(hwnd, &amp;ps);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="comment">// 销毁窗口时退出消息循环</span></span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 默认窗口过程</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hwnd, message, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、加载bmp文件"><a href="#三、加载bmp文件" class="headerlink" title="三、加载bmp文件"></a>三、加载bmp文件</h1><p>bmp文件是MFC中使用的位图，用来显示图片</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数：LoadBitmapFromFile</span></span><br><span class="line"><span class="comment">// 说明：从文件加载一个位图，并返回该位图的句柄</span></span><br><span class="line"><span class="comment">// 参数：</span></span><br><span class="line"><span class="comment">//   - HINSTANCE hInstance: 当前应用程序实例的句柄</span></span><br><span class="line"><span class="comment">//   - LPCTSTR lpszName: 包含位图文件路径的字符串</span></span><br><span class="line"><span class="comment">// 返回值：</span></span><br><span class="line"><span class="comment">//   - 如果成功，返回加载的位图的句柄</span></span><br><span class="line"><span class="comment">//   - 如果失败，返回NULL</span></span><br><span class="line"><span class="function">HBITMAP <span class="title">LoadBitmapFromFile</span><span class="params">(HINSTANCE hInstance, LPCTSTR lpszName)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义一个变量 hBitmap 并初始化为 NULL，用于存储加载的位图句柄</span></span><br><span class="line">    HBITMAP hBitmap = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 LoadImage 函数从文件加载位图</span></span><br><span class="line">    hBitmap = (HBITMAP)<span class="built_in">LoadImage</span>(</span><br><span class="line">        hInstance,  <span class="comment">// 当前应用程序实例的句柄</span></span><br><span class="line">        lpszName,   <span class="comment">// 位图文件路径</span></span><br><span class="line">        IMAGE_BITMAP,  <span class="comment">// 指明要加载的是位图</span></span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>,  <span class="comment">// 位图的宽度和高度，0 表示使用文件的原始大小</span></span><br><span class="line">        LR_LOADFROMFILE | LR_CREATEDIBSECTION  <span class="comment">// 从文件加载图像并创建一个 DIB 节</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查 LoadImage 是否成功加载了位图</span></span><br><span class="line">    <span class="keyword">if</span> (hBitmap == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果 hBitmap 仍然是 NULL，表示加载失败</span></span><br><span class="line">        <span class="comment">// 在这里添加错误处理代码，例如：</span></span><br><span class="line">        <span class="comment">// MessageBox(NULL, TEXT(&quot;Failed to load bitmap&quot;), TEXT(&quot;Error&quot;), MB_ICONERROR);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回加载的位图句柄</span></span><br><span class="line">    <span class="keyword">return</span> hBitmap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、更改文本框数据"><a href="#四、更改文本框数据" class="headerlink" title="四、更改文本框数据"></a>四、更改文本框数据</h1><p>这是一个按钮控件，通过点击按钮，更改文本数据</p><ol><li>使用CString定义一个字符串</li><li>使用Format 设置格式和内容</li><li>使用SetDlgItemText将字符串和控件练习起来</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::OnBnClickedBtnTractionMax</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">m_iTractionMax = m_iControlMH;</span><br><span class="line"></span><br><span class="line">CString strTemp;</span><br><span class="line">strTemp.<span class="built_in">Format</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;电位值：%d&quot;</span>), m_iTractionMax);</span><br><span class="line"><span class="built_in">SetDlgItemText</span>(IDC_TRACTION_MAX, strTemp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、读取文件"><a href="#五、读取文件" class="headerlink" title="五、读取文件"></a>五、读取文件</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取司控器信息配置文件函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::ReadControllerInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 定义用于存储文件路径的缓冲区</span></span><br><span class="line">    TCHAR strFilePath[MAX_PATH];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取当前工作目录并存储到缓冲区中</span></span><br><span class="line">    <span class="built_in">GetCurrentDirectory</span>(MAX_PATH, strFilePath);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将文件名 &quot;controller.ini&quot; 拼接到当前工作目录路径后面</span></span><br><span class="line">    <span class="built_in">wcscat_s</span>(strFilePath, <span class="built_in">TEXT</span>(<span class="string">&quot;\\controller.ini&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从 &quot;controller.ini&quot; 文件的 &quot;Controller&quot; 节读取 &quot;TractionMax&quot; 键的值</span></span><br><span class="line">    <span class="comment">// 如果未找到该键，则返回默认值 0</span></span><br><span class="line">    m_iTractionMax = <span class="built_in">GetPrivateProfileInt</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Controller&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;TractionMax&quot;</span>), <span class="number">0</span>, strFilePath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义临时字符串变量用于格式化显示值</span></span><br><span class="line">    CString strTemp;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将读取到的 &quot;TractionMax&quot; 值格式化为字符串并存储在 strTemp 中</span></span><br><span class="line">    strTemp.<span class="built_in">Format</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;电位值：%d&quot;</span>), m_iTractionMax);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将格式化后的字符串显示在对话框控件上，控件的ID为 IDC_TRACTION_MAX</span></span><br><span class="line">    <span class="built_in">SetDlgItemText</span>(IDC_TRACTION_MAX, strTemp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六、写入文件"><a href="#六、写入文件" class="headerlink" title="六、写入文件"></a>六、写入文件</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::OnBnClickedBtnWrite</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">TCHAR strFilePath[MAX_PATH];</span><br><span class="line"><span class="built_in">GetCurrentDirectory</span>(MAX_PATH, strFilePath);</span><br><span class="line"><span class="built_in">wcscat_s</span>(strFilePath, <span class="built_in">TEXT</span>(<span class="string">&quot;\\controller.ini&quot;</span>));</span><br><span class="line"></span><br><span class="line">CString strTemp;</span><br><span class="line">strTemp.<span class="built_in">Format</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;%d&quot;</span>), m_iTractionMax);</span><br><span class="line"><span class="built_in">WritePrivateProfileString</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Controller&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;TractionMax&quot;</span>), strTemp, strFilePath);</span><br><span class="line">    <span class="comment">// 这里创建[Controller]，并在它下面创建TractionMax</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是为空情况下自动创建的</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Controller]</span><br><span class="line">TractionMax=0</span><br><span class="line">TractionMin=5</span><br><span class="line">BreakMin=2010</span><br><span class="line">BreakMax=4000</span><br></pre></td></tr></table></figure><p>这是节点之后，更新的</p><p>其中的 # 和 ；是注释，自动跳过，没有影响</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>司控器设置</span><br><span class="line"></span><br><span class="line">[Controller]</span><br><span class="line">TractionMax =0</span><br><span class="line">;司控器最大牵引位</span><br><span class="line">TractionMin =5</span><br><span class="line">;司控器最小牵引位</span><br><span class="line">BreakMin =2010</span><br><span class="line">;司控器最小制动位</span><br><span class="line">BreakMax =4000</span><br><span class="line">;司控器最大制动位</span><br></pre></td></tr></table></figure><h1 id="七、创建子窗口"><a href="#七、创建子窗口" class="headerlink" title="七、创建子窗口"></a>七、创建子窗口</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::OnBnClickedBtnViewSend</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span>  在此添加控件通知处理程序代码</span></span><br><span class="line">m_pDlgSend-&gt;<span class="built_in">ShowWindow</span>(SW_NORMAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>创建主窗口类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CMainDlg.h</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMainDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    CChildDialog* m_pChildDlg; <span class="comment">// 指向子窗口的指针</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CMainDlg.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMainDlg::OnBnClickedBtnCreateChild</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m_pChildDlg == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pChildDlg = <span class="keyword">new</span> <span class="built_in">CChildDialog</span>(<span class="keyword">this</span>); <span class="comment">// 创建子对话框对象</span></span><br><span class="line">        m_pChildDlg-&gt;<span class="built_in">Create</span>(IDD_CHILD_DIALOG, <span class="keyword">this</span>); <span class="comment">// 创建子对话框</span></span><br><span class="line">        m_pChildDlg-&gt;<span class="built_in">ShowWindow</span>(SW_SHOW); <span class="comment">// 显示子对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建子窗口类</p></li><li><p>添加对话框资源<br>确保在资源文件中添加了 <code>IDD_MAIN_DIALOG</code>（主对话框）和 <code>IDD_CHILD_DIALOG</code>（子对话框）的对话框资源，并在主对话框中添加一个按钮，其 ID 设置为 <code>IDC_BTN_CREATE_CHILD</code>，用来创建和显示子对话框。</p></li></ol><h1 id="八、添加列表控件"><a href="#八、添加列表控件" class="headerlink" title="八、添加列表控件"></a>八、添加列表控件</h1><h4 id="设置列表控件样式和列头"><a href="#设置列表控件样式和列头" class="headerlink" title="设置列表控件样式和列头"></a>设置列表控件样式和列头</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CDlgSend::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CDialog::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置列表控件的扩展样式，包括全行选中、网格线、头部拖放和单行选择</span></span><br><span class="line">    DWORD dwExListStyle = m_listSend.<span class="built_in">GetExtendedStyle</span>() | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES | LVS_EX_HEADERDRAGDROP | LVS_EX_SINGLEROW;</span><br><span class="line">    m_listSend.<span class="built_in">SetExtendedStyle</span>(dwExListStyle);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义列头的标题和宽度</span></span><br><span class="line">    CString strListHead[] = &#123; <span class="built_in">TEXT</span>(<span class="string">&quot;ID&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;Name&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;Value&quot;</span>) &#125;;</span><br><span class="line">    <span class="type">int</span> nListWidth[] = &#123; <span class="number">50</span>, <span class="number">580</span>, <span class="number">50</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加列头到列表控件</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(nListWidth) / <span class="built_in">sizeof</span>(<span class="type">int</span>); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        m_listSend.<span class="built_in">InsertColumn</span>(i, strListHead[i], LVCFMT_LEFT, nListWidth[i], <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 填充列表控件的数据</span></span><br><span class="line">    <span class="built_in">FillListSend</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置定时器，每隔100毫秒执行一次</span></span><br><span class="line">    <span class="built_in">SetTimer</span>(IDT_TIMER_SEND, <span class="number">100</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;  <span class="comment">// return TRUE unless you set the focus to a control</span></span><br><span class="line">    <span class="comment">// 异常:  OCX 属性页应返回 FALSE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CDlgSend::FillListSend</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_listSend.<span class="built_in">DeleteAllItems</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(strSend)/<span class="built_in">sizeof</span>(strSend[<span class="number">0</span>]); i++)</span><br><span class="line">&#123;</span><br><span class="line">m_listSend.<span class="built_in">InsertItem</span>(i, <span class="built_in">TEXT</span>(<span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">CString strTemp;</span><br><span class="line">strTemp.<span class="built_in">Format</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;%d&quot;</span>), i + <span class="number">1</span>);</span><br><span class="line">m_listSend.<span class="built_in">SetItemText</span>(i, <span class="number">0</span>, strTemp);</span><br><span class="line">m_listSend.<span class="built_in">SetItemText</span>(i, <span class="number">1</span>, strSend[i]);</span><br><span class="line">m_listSend.<span class="built_in">SetItemText</span>(i, <span class="number">2</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;0&quot;</span>));</span><br><span class="line"></span><br><span class="line">m_listSend.<span class="built_in">SetItemData</span>(i, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="详细解释"><a href="#详细解释" class="headerlink" title="详细解释"></a>详细解释</h4><ol><li><p>**设置列表控件样式 (<code>LVS_EX_</code> 开头的扩展样式)**：</p><ul><li><code>LVS_EX_FULLROWSELECT</code>：允许整行选择。</li><li><code>LVS_EX_GRIDLINES</code>：显示网格线。</li><li><code>LVS_EX_HEADERDRAGDROP</code>：允许头部拖放。</li><li><code>LVS_EX_SINGLEROW</code>：只允许选择单行。</li><li>这些样式通过按位或运算符 <code>|</code> 结合到 <code>dwExListStyle</code> 中，然后通过 <code>m_listSend.SetExtendedStyle(dwExListStyle);</code> 应用到列表控件。</li></ul></li><li><p><strong>定义和添加列头</strong>：</p><ul><li><code>CString strListHead[]</code> 定义了列头的标题。</li><li><code>int nListWidth[]</code> 定义了每列的宽度。</li><li>通过 <code>m_listSend.InsertColumn(i, strListHead[i], LVCFMT_LEFT, nListWidth[i], -1);</code> 将每个标题和对应的宽度添加到列表控件中。</li></ul></li><li><p><strong>填充列表控件数据</strong>：</p><ul><li><code>FillListSend();</code> 函数用于填充列表控件的数据。这个函数可能会从数据源获取数据，并将数据插入到列表控件的行中。</li></ul></li><li><p><strong>设置定时器</strong>：</p><ul><li><code>SetTimer(IDT_TIMER_SEND, 100, NULL);</code> 设置了一个定时器，每隔100毫秒触发一次定时器消息。这通常用于执行定时任务，如周期性地更新列表数据或其他界面操作。</li></ul></li><li><p><strong>返回值</strong>：</p><ul><li>函数最后返回 <code>TRUE</code>，除非将焦点设置到某个控件，否则应该返回 <code>TRUE</code>。在 MFC 对话框中，通常是 <code>TRUE</code>，除非你有特定的需求返回 <code>FALSE</code>。</li></ul></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在 <code>CDlgSend::OnInitDialog()</code> 函数中，你初始化了 <code>m_listSend</code> 列表控件的样式、列头和数据。这些操作确保了列表控件的外观和行为符合预期，并且设置了定时器以便于定时执行任务。如果需要进一步的解释或有其他问题，请随时告诉我！</p><h1 id="九、套接字"><a href="#九、套接字" class="headerlink" title="九、套接字"></a>九、套接字</h1><p>这个套接字通讯是在你的程序，与电路板之间进行服务的，发送给电路板使用的是sendto()函数，需要注意，发送信息的DO数据，需要nMsg和nID都定义好，才可以发送给对方</p><p>你的代码展示了一个在 MFC 应用程序中初始化和关闭服务器端套接字的过程。以下是对这段代码的详细解释：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::InitSocket</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WORD wVersionRequested;<span class="comment">// 存储请求的Winsock版本</span></span><br><span class="line">WSADATA wsaData;<span class="comment">// 接受Winsock的详细信息</span></span><br><span class="line"><span class="type">int</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载套接字库 1.1版本</span></span><br><span class="line">wVersionRequested = <span class="built_in">MAKEWORD</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化库，获取的信息保存到wsaData中</span></span><br><span class="line">err = <span class="built_in">WSAStartup</span>(wVersionRequested, &amp;wsaData);</span><br><span class="line"><span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Load winsock failed!\n&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">LOBYTE</span>(wsaData.wVersion) != <span class="number">1</span> || <span class="built_in">HIBYTE</span>(wsaData.wVersion) != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WSACleanup</span>();<span class="comment">// 清理资源</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 创建套接字 </span></span><br><span class="line"><span class="comment">// AF_INET IPv4协议</span></span><br><span class="line"><span class="comment">// SOCK_DGRAM: 使用数据报套接字UDP</span></span><br><span class="line"><span class="comment">// 0:使用默认协议UDP</span></span><br><span class="line"><span class="comment">// 返回套接字描述符</span></span><br><span class="line">m_sockServer[i] = <span class="built_in">socket</span>(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (m_sockServer[i] == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Create socket failed!\n&quot;</span>));</span><br><span class="line"><span class="built_in">WSACleanup</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> strPcIP[MAX_PATH];</span><br><span class="line">hostent* pHost;</span><br><span class="line"><span class="built_in">gethostname</span>(strPcIP, MAX_PATH); <span class="comment">//获得主机名</span></span><br><span class="line">pHost = <span class="built_in">gethostbyname</span>(strPcIP); <span class="comment">//获得主机结构</span></span><br><span class="line"></span><br><span class="line">m_addrServer[i].sin_addr.S_un.S_addr = (*(<span class="keyword">struct</span> in_addr *)pHost-&gt;h_addr_list[<span class="number">0</span>]).S_un.S_addr; <span class="comment">//本地IP地址</span></span><br><span class="line">m_addrServer[i].sin_family = AF_INET;</span><br><span class="line">m_addrServer[i].sin_port = <span class="built_in">htons</span>(m_myModuleInfo[i].nModulePcPort); <span class="comment">//本地端口号</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> strIP[MAX_PATH];</span><br><span class="line"><span class="built_in">WideCharToMultiByte</span>(CP_ACP, <span class="number">0</span>, m_myModuleInfo[i].strModuleIP, <span class="number">-1</span>, strIP, MAX_PATH, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">m_addrClient[i].sin_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(strIP); <span class="comment">//模块IP地址</span></span><br><span class="line">m_addrClient[i].sin_family = AF_INET;</span><br><span class="line">m_addrClient[i].sin_port = <span class="built_in">htons</span>(m_myModuleInfo[i].nModulePort); <span class="comment">//模块端口号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定套接字</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">bind</span>(m_sockServer[i], (SOCKADDR*)&amp;m_addrServer[i], <span class="built_in">sizeof</span>(SOCKADDR)) == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Bind socket failed!\n&quot;</span>));</span><br><span class="line"><span class="built_in">closesocket</span>(m_sockServer[i]);</span><br><span class="line"><span class="built_in">WSACleanup</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步套接字</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">WSAAsyncSelect</span>(m_sockServer[i], <span class="keyword">this</span>-&gt;m_hWnd, WM_SOCKET, FD_READ | FD_WRITE) == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;WSAAsyncSelect failed!\n&quot;</span>));</span><br><span class="line"><span class="built_in">closesocket</span>(m_sockServer[i]);</span><br><span class="line"><span class="built_in">WSACleanup</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结束服务器端套接字函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::DestroySocket</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//关闭套接字</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_iModuleNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">closesocket</span>(m_sockServer[i]);</span><br><span class="line"><span class="built_in">WSACleanup</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了更清晰地理解这个过程，我们可以看看UDP套接字通信的基本步骤：</p><ol><li><p><strong>创建套接字</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_sockSrv[<span class="number">0</span>] = <span class="built_in">socket</span>(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>设置客户端地址</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m_addrClient[<span class="number">0</span>].sin_family = AF_INET;</span><br><span class="line">m_addrClient[<span class="number">0</span>].sin_port = <span class="built_in">htons</span>(port);</span><br><span class="line">m_addrClient[<span class="number">0</span>].sin_addr.s_addr = <span class="built_in">inet_addr</span>(<span class="string">&quot;client_ip_address&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>发送数据</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sendto</span>(m_sockSrv[<span class="number">0</span>], (<span class="type">char</span>*)&amp;data, <span class="built_in">sizeof</span>(data), <span class="number">0</span>, (SOCKADDR*)&amp;m_addrClient[<span class="number">0</span>], <span class="built_in">sizeof</span>(SOCK</span><br></pre></td></tr></table></figure></li></ol><p>在这个套接字消息响应函数中，处理了来自套接字的不同消息类型。让我们逐步分析这个函数的具体作用和逻辑：</p><h3 id="套接字接收代码详细解释："><a href="#套接字接收代码详细解释：" class="headerlink" title="套接字接收代码详细解释："></a>套接字接收代码详细解释：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT <span class="title">CInterfaceDlg::OnSocket</span><span class="params">(WPARAM wParam, LPARAM lParam)</span> <span class="comment">// 套接字响应，获取DI信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MYDATA mdRecv[<span class="number">2</span>];<span class="comment">//每次接收两次数据 长度为0x0D*2</span></span><br><span class="line">SOCKADDR_IN addrTemp;</span><br><span class="line"><span class="type">int</span> nLen = <span class="built_in">sizeof</span>(SOCKADDR);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">WSAGETSELECTEVENT</span>(lParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> FD_READ:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(mdRecv, <span class="number">0</span>, <span class="built_in">sizeof</span>(mdRecv));</span><br><span class="line"><span class="built_in">recvfrom</span>((SOCKET)wParam, (<span class="type">char</span>*)mdRecv, <span class="built_in">sizeof</span>(mdRecv), <span class="number">0</span>, (SOCKADDR*)&amp;addrTemp, &amp;nLen);</span><br><span class="line"><span class="comment">// 获取远程IP地址和端口号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 获取远程IP地址和端口号</span></span><br><span class="line"><span class="comment">//CString strIP;</span></span><br><span class="line"><span class="comment">//strIP.Format(_T(&quot;%d.%d.%d.%d&quot;),</span></span><br><span class="line"><span class="comment">//addrTemp.sin_addr.S_un.S_un_b.s_b1,</span></span><br><span class="line"><span class="comment">//addrTemp.sin_addr.S_un.S_un_b.s_b2,</span></span><br><span class="line"><span class="comment">//addrTemp.sin_addr.S_un.S_un_b.s_b3,</span></span><br><span class="line"><span class="comment">//addrTemp.sin_addr.S_un.S_un_b.s_b4);</span></span><br><span class="line"><span class="comment">//UINT nPort = ntohs(addrTemp.sin_port);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 显示远程IP地址和端口号</span></span><br><span class="line"><span class="comment">//CString strMsg;</span></span><br><span class="line"><span class="comment">//strMsg.Format(_T(&quot;远程IP: %s\n远程端口: %d&quot;), strIP, nPort);</span></span><br><span class="line"><span class="comment">//AfxMessageBox(strMsg);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_iModuleNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_sockServer[i] == (SOCKET)wParam)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nMsg = mdRecv[j].myByteData.nMsg &amp; <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nID = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; COM_ID_NUM; k++)</span><br><span class="line">&#123;</span><br><span class="line">nID = nID &lt;&lt; <span class="number">8</span>;</span><br><span class="line">nID = nID + (mdRecv[j].myByteData.nID[k] &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (nMsg == COM_MSG &amp;&amp; nID == COM_DI)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(&amp;m_mdModuleDI[i], &amp;mdRecv[j], <span class="built_in">sizeof</span>(MYDATA));</span><br><span class="line"><span class="comment">// 检查和调试信息</span></span><br><span class="line"><span class="comment">//CString strDebug;</span></span><br><span class="line"><span class="comment">//strDebug.Format(_T(&quot;匹配的DI数据: nMsg = %d, nID = %d, bt_00 = %d, bt_01 = %d&quot;),</span></span><br><span class="line"><span class="comment">//nMsg, nID,</span></span><br><span class="line"><span class="comment">//m_mdModuleDI[i].myBitData.bt_00,</span></span><br><span class="line"><span class="comment">//m_mdModuleDI[i].myBitData.bt_01);</span></span><br><span class="line"><span class="comment">//AfxMessageBox(strDebug);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> FD_WRITE:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码逻辑："><a href="#代码逻辑：" class="headerlink" title="代码逻辑："></a>代码逻辑：</h3><ol><li><p><strong>FD_READ</strong>: 当接收到FD_READ事件时，表示有数据可以读取。</p><ul><li>使用<code>recvfrom</code>从套接字读取数据到<code>chRecv</code>数组中。</li><li>检查数据前缀是否为<code>0x88</code>，如果是则解析ID，并根据ID检查是否为<code>0x00000060</code>。</li><li>如果ID匹配，从数据中提取按钮状态到<code>nBtn</code>数组中。</li><li>再次检查数据中的另一段（从索引13开始），重复上述步骤。</li></ul></li><li><p><strong>数据处理</strong>:</p><ul><li>遍历所有模块的套接字，找到与当前套接字匹配的模块。</li><li>对接收到的两段数据（<code>mdRecv</code>数组中的数据）进行处理：<ul><li>提取消息和ID。</li><li>根据消息和ID，决定将数据复制到<code>m_mdModuleDI</code>或<code>m_mdModuleAI</code>中，或处理其他类型的数据。</li></ul></li></ul></li><li><p><strong>FD_WRITE</strong>: 当接收到FD_WRITE事件时，表示套接字可以写入数据。此处未进行任何操作。</p></li><li><p><strong>默认处理</strong>: 对于其他未处理的事件类型，未进行任何操作。</p></li></ol><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><ol><li><p><strong>ID的计算</strong>：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> nID = (chRecv[<span class="number">1</span>] &lt;&lt; <span class="number">24</span>) + (chRecv[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (chRecv[<span class="number">3</span>] &lt;&lt; <span class="number">8</span>) + chRecv[<span class="number">4</span>];</span><br></pre></td></tr></table></figure><p> ID的计算方式需要使用括号确保操作顺序正确，否则可能导致计算结果不正确。</p></li><li><p><strong>消息类型的处理</strong>：</p><ul><li>确保对每种消息类型和ID的处理逻辑正确。</li><li>对于未知消息类型或ID，可以考虑增加日志记录或错误处理。</li></ul></li><li><p><strong>内存操作</strong>：</p><ul><li>使用<code>memcpy</code>时，确保源和目标内存区域大小匹配，防止缓冲区溢出或内存损坏。</li></ul></li></ol><p>这个函数主要用于处理从套接字接收到的数据，并将解析后的数据存储到相应的模块结构中。</p><h2 id="程序发送数据到电路板"><a href="#程序发送数据到电路板" class="headerlink" title="程序发送数据到电路板"></a>程序发送数据到电路板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CInterfaceDlg::UpdateDataRecv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m_mdModuleDO[0].myBitData.bt_00 = m_dataRecv.bRisepanto; //升弓</span></span><br><span class="line">m_mdModuleDO[<span class="number">0</span>].myBitData.bt_00 = <span class="number">0</span>; <span class="comment">//升弓</span></span><br><span class="line">m_mdModuleDO[<span class="number">0</span>].myBitData.bt_01 = m_dataRecv.bDNPanto;<span class="comment">//降弓</span></span><br><span class="line">m_mdModuleDO[<span class="number">0</span>].myBitData.bt_02 = m_dataRecv.bRiseMode;<span class="comment">//升级模式</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印目标 IP 和端口号</span></span><br><span class="line"><span class="comment">//CString ipAddr(inet_ntoa(m_addrClient[0].sin_addr));</span></span><br><span class="line"><span class="comment">//CString port;</span></span><br><span class="line"><span class="comment">//port.Format(TEXT(&quot;%d&quot;), ntohs(m_addrClient[0].sin_port));</span></span><br><span class="line"><span class="comment">//CString msg;</span></span><br><span class="line"><span class="comment">//msg.Format(TEXT(&quot;Sending to IP: %s, Port: %s&quot;), ipAddr, port);</span></span><br><span class="line"><span class="comment">//AfxMessageBox(msg);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送数据</span></span><br><span class="line"><span class="built_in">sendto</span>(m_sockServer[<span class="number">0</span>], (<span class="type">char</span>*)&amp;m_mdModuleDO[<span class="number">0</span>], <span class="built_in">sizeof</span>(MYDATA), <span class="number">0</span>, (SOCKADDR*)&amp;m_addrClient[<span class="number">0</span>], <span class="built_in">sizeof</span>(SOCKADDR));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意，DO数据需要设置标志字段，直接发送是没办法收到的</p><h1 id="十、编辑框和按钮"><a href="#十、编辑框和按钮" class="headerlink" title="十、编辑框和按钮"></a>十、编辑框和按钮</h1><p>1、添加编辑框控件和按钮，然后更改ID和Caption</p><p><img src="/2024/08/09/MFC/MFC(%E4%B8%80)/image-20240716135319855.png" alt="image-20240716135319855"></p><p>2、编辑框添加成员变量，用来保存输入的编辑框信息<br><img src="/2024/08/09/MFC/MFC(%E4%B8%80)/image-20240716135443062.png" alt="image-20240716135443062"></p><p>添加之后，Dlg.h会多出变量定义，Dlg.cpp会将变量和控件绑定</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dlg.h</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDlg</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">CEdit m_edtText;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dlg.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CTextToSpeechDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line"><span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_TEXT, m_edtText);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、设置编辑框默认文本，在OnInitDialog()中设置初始文本或水印文字</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CTextToSpeechDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//m_edtText.SetWindowTextW(_T(&quot;请输入&quot;));</span></span><br><span class="line">m_edtText.<span class="built_in">SetCueBanner</span>(_T(<span class="string">&quot;请输入&quot;</span>));<span class="comment">// 设置水印文字，点击时自动消失</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、双击按钮，系统会自动初始化按钮触发的函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CTextToSpeechDlg::OnBnClickedTranfer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CString strText;</span><br><span class="line">m_edtText.<span class="built_in">GetWindowText</span>(strText);<span class="comment">// 获取编辑框的输入</span></span><br><span class="line">m_edtText.<span class="built_in">SetCueBanner</span>(_T(<span class="string">&quot;请再次输入&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 CString 格式化字符串，检测是否得到编辑框信息</span></span><br><span class="line">CString message;</span><br><span class="line">message.<span class="built_in">Format</span>(_T(<span class="string">&quot;%s&quot;</span>), strText);</span><br><span class="line"><span class="built_in">MessageBox</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT_基础(一)</title>
      <link href="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/"/>
      <url>/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="一、QT概述"><a href="#一、QT概述" class="headerlink" title="一、QT概述"></a>一、QT概述</h1><h2 id="1-1、介绍"><a href="#1-1、介绍" class="headerlink" title="1.1、介绍"></a>1.1、介绍</h2><ul><li>跨平台的图形用户界面应用程序框架</li><li>面向对象</li><li>可以扩展</li></ul><h2 id="1-2、优点"><a href="#1-2、优点" class="headerlink" title="1.2、优点"></a>1.2、优点</h2><ol><li>跨平台</li><li>接口简单，容易上手</li><li>简化了内存回收</li></ol><h2 id="1-3、版本"><a href="#1-3、版本" class="headerlink" title="1.3、版本"></a>1.3、版本</h2><ul><li>商业版</li><li>开源版</li></ul><h2 id="1-4、历史"><a href="#1-4、历史" class="headerlink" title="1.4、历史"></a>1.4、历史</h2><ul><li>1991年，奇趣科技</li><li>1996年，进入商业领域， 成功案例：Linux的桌面环境</li></ul><h2 id="1-5、下载"><a href="#1-5、下载" class="headerlink" title="1.5、下载"></a>1.5、下载</h2><p>官方下载地址：<a href="http://download.qt.io/archive/qt/">http://download.qt.io/archive/qt/</a> </p><p>清华大学镜像站：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/development_releases/online_installers/">Index of &#x2F;qt&#x2F;development_releases&#x2F;online_installers&#x2F; | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p>下载教程（先在powershell输入第11条命令）：<a href="https://blog.csdn.net/qq_40296728/article/details/131917751">QT下载安装教程_qt安装教程-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_40296728/category_12531577.html">QT_在巴厘岛冲浪的阿k的博客-CSDN博客</a></p><h2 id="1-6、成功案例"><a href="#1-6、成功案例" class="headerlink" title="1.6、成功案例"></a>1.6、成功案例</h2><ul><li>Linux桌面环境KDE</li><li>WPS Office办公软件</li></ul><h2 id="1-7、问题汇总"><a href="#1-7、问题汇总" class="headerlink" title="1.7、问题汇总"></a>1.7、问题汇总</h2><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240822141901547.png" alt="image-20240822141901547"></p><h1 id="二、新建项目"><a href="#二、新建项目" class="headerlink" title="二、新建项目"></a>二、新建项目</h1><h2 id="2-1、新建"><a href="#2-1、新建" class="headerlink" title="2.1、新建"></a>2.1、新建</h2><p>点击新建项目(open project)，选择Qt Widgets Application，它会提供一个包含主窗口的项目</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805101610765.png" alt="image-20240805101610765"></p><h2 id="2-2、Location"><a href="#2-2、Location" class="headerlink" title="2.2、Location"></a>2.2、Location</h2><p>选择项目名称和保存路径，注意都不可以包含中文和空格</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805102541909.png" alt="image-20240805102541909"></p><h2 id="2-3、构建系统"><a href="#2-3、构建系统" class="headerlink" title="2.3、构建系统"></a>2.3、构建系统</h2><p><a href="https://blog.csdn.net/secondtonone1/article/details/137644031">QT系列教程(2) 创建项目和编译_qt构建系统选哪个-CSDN博客</a></p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805103945902.png" alt="image-20240805103945902"></p><h2 id="2-4、Details"><a href="#2-4、Details" class="headerlink" title="2.4、Details"></a>2.4、Details</h2><p>QWidget是父类，空窗口，可以直接使用ui拖动进行设计</p><p>QMainWindow（窗口）,QDialog都是子类。QDialog是对话框。</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805104342958.png" alt="image-20240805104342958"></p><h2 id="2-5、Translation"><a href="#2-5、Translation" class="headerlink" title="2.5、Translation"></a>2.5、Translation</h2><p>翻译语言选择：无</p><h2 id="2-6、构建套件"><a href="#2-6、构建套件" class="headerlink" title="2.6、构建套件"></a>2.6、构建套件</h2><p>构建套件：</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805104619462.png" alt="image-20240805104619462"></p><h2 id="2-7、汇总"><a href="#2-7、汇总" class="headerlink" title="2.7、汇总"></a>2.7、汇总</h2><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805104639477.png" alt="image-20240805104639477"></p><p>.pro 工程文件，类似VS中的.sln，可以双击打开文件</p><p>main.cpp 程序入口</p><p>mywidget.cpp,mywidget.h是窗口文件</p><h2 id="2-8、结果"><a href="#2-8、结果" class="headerlink" title="2.8、结果"></a>2.8、结果</h2><p>点击完成之后，获得项目</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240805105338326.png" alt="image-20240805105338326"></p><p>main.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QApplication&gt;</span> <span class="comment">// 包含一个应用程序类的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// main程序入口</span></span><br><span class="line"><span class="comment">// argc命令行变量的数量</span></span><br><span class="line"><span class="comment">// argv 命令行变量的数组</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// a 应用程序对象，在Qt中，应用程序对象，有且仅有一个</span></span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">// 窗口对象 myWidget父类 -&gt; QWidget</span></span><br><span class="line">    myWidget w;</span><br><span class="line">    <span class="comment">// 窗口对象，默认不会显示，必须要调用show方法显示窗口</span></span><br><span class="line">    w.<span class="built_in">show</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 让应用程序对象进入消息循环</span></span><br><span class="line">    <span class="comment">// 让代码阻塞到这行</span></span><br><span class="line">    <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、项目文件"><a href="#三、项目文件" class="headerlink" title="三、项目文件"></a>三、项目文件</h1><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/image-20240822141620385.png" alt="image-20240822141620385"></p><h2 id="3-1、-pro文件"><a href="#3-1、-pro文件" class="headerlink" title="3.1、.pro文件"></a>3.1、.pro文件</h2><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80)/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%80" alt="Qt5 模块">&#x2F;Qt5 模块.png)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">QT       += core guiQt包含的模块</span><br><span class="line"></span><br><span class="line"><span class="built_in">greaterThan</span>(QT_MAJOR_VERSION, <span class="number">4</span>): QT += widgets<span class="comment">// 大于4版本以上，包含Qt的widgets模块</span></span><br><span class="line"></span><br><span class="line">CONFIG += c+<span class="number">+17</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以通过取消注释来禁用所有在QT6.0之前已弃用的API</span></span><br><span class="line"># You can make your code fail to compile <span class="keyword">if</span> it uses deprecated APIs.</span><br><span class="line"># In order to <span class="keyword">do</span> so, uncomment the following line.</span><br><span class="line">#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=<span class="number">0x060000</span>    <span class="meta"># disables all the APIs deprecated before Qt 6.0.0</span></span><br><span class="line"></span><br><span class="line">SOURCES += \<span class="comment">// 源文件</span></span><br><span class="line">    main.cpp \</span><br><span class="line">    mywidget.cpp</span><br><span class="line"></span><br><span class="line">HEADERS += \<span class="comment">// 头文件</span></span><br><span class="line">    mywidget.h</span><br><span class="line"></span><br><span class="line"># Default rules <span class="keyword">for</span> deployment.</span><br><span class="line">qnx: target.path = /tmp/$$&#123;TARGET&#125;/bin</span><br><span class="line"><span class="keyword">else</span>: unix:!android: target.path = /opt/$$&#123;TARGET&#125;/bin</span><br><span class="line">!<span class="built_in">isEmpty</span>(target.path): INSTALLS += target</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-2、main-cpp"><a href="#3-2、main-cpp" class="headerlink" title="3.2、main.cpp"></a>3.2、main.cpp</h2><p>项目的开始文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QApplication&gt;</span> <span class="comment">// 包含一个应用程序类的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// main程序入口</span></span><br><span class="line"><span class="comment">// argc命令行变量的数量</span></span><br><span class="line"><span class="comment">// argv 命令行变量的数组</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// a 应用程序对象，在Qt中，应用程序对象，有且仅有一个</span></span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">// 窗口对象 myWidget父类 -&gt; QWidget</span></span><br><span class="line">    myWidget w;</span><br><span class="line">    <span class="comment">// 窗口对象，默认不会显示，必须要调用show方法显示窗口</span></span><br><span class="line">    w.<span class="built_in">show</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 让应用程序对象进入消息循环</span></span><br><span class="line">    <span class="comment">// 让代码阻塞到这行</span></span><br><span class="line">    <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-3、-h文件"><a href="#3-3、-h文件" class="headerlink" title="3.3、.h文件"></a>3.3、.h文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span>  <span class="comment">// 包含头文件 QWidget 窗口类</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myWidget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT    <span class="comment">// Q_OBJECT宏，允许类中使用信号和槽的机制</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">myWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);    <span class="comment">// 构造函数</span></span><br><span class="line">    ~<span class="built_in">myWidget</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-4、-cpp文件"><a href="#3-4、-cpp文件" class="headerlink" title="3.4、.cpp文件"></a>3.4、.cpp文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 帮助文档</span></span><br><span class="line"><span class="comment">// 第一种方式 F1</span></span><br><span class="line"><span class="comment">// 第二种 左侧按钮</span></span><br><span class="line"><span class="comment">// 第三种 assistant.exe E:\Qt\6.6.3\mingw_64\bin</span></span><br><span class="line"></span><br><span class="line">myWidget::<span class="built_in">myWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myWidget::~<span class="built_in">myWidget</span>() &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-5、快捷键"><a href="#3-5、快捷键" class="headerlink" title="3.5、快捷键"></a>3.5、快捷键</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 快捷键</span></span><br><span class="line"><span class="comment">// 注释 Ctrl + /</span></span><br><span class="line"><span class="comment">// 运行 ctrl + r</span></span><br><span class="line"><span class="comment">// 编译 ctrl + b</span></span><br><span class="line"><span class="comment">// 字体缩放 ctrl + 鼠标滚轮</span></span><br><span class="line"><span class="comment">// 查找 ctrl + f</span></span><br><span class="line"><span class="comment">// 整行移动 ctrl + shift + ↑或者↓</span></span><br><span class="line"><span class="comment">// 帮助文档 F1</span></span><br><span class="line"><span class="comment">// 自动对齐 ctrl + i</span></span><br><span class="line"><span class="comment">// 同名之间的.h 和 .cpp切换 F4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_基础(三)-窗口与布局</title>
      <link href="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/"/>
      <url>/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1 id="七、QMainWindow"><a href="#七、QMainWindow" class="headerlink" title="七、QMainWindow"></a>七、QMainWindow</h1><p>​QMainWindow是一个为用户提供主窗口程序的类，包含一个菜单栏（menu bar）、多个工具栏(tool bars)、多个锚接部件(dock widgets)、一个状态栏(status bar)及一个中心部件(central widget)，是许多应用程序的基础，如文本编辑器，图片编辑器等。</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/wps1-1722905784198.jpg" alt="img"></p><h2 id="7-1-菜单栏"><a href="#7-1-菜单栏" class="headerlink" title="7.1 菜单栏"></a>7.1 菜单栏</h2><p>最多有一个</p><p>引入头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenuBar&gt;</span></span></span><br></pre></td></tr></table></figure><ol><li>QMenuBar * bar &#x3D; MenuBar();</li><li>setMenuBar( bar ) </li><li>QMenu * fileMenu &#x3D; bar -&gt; addMenu(“文件”)  创建菜单</li><li>QAction * newAction &#x3D;  fileMenu -&gt;addAction(“新建”); 创建菜单项</li><li>添加分割线 fileMenu-&gt;addSeparator();</li></ol><h2 id="7-2-工具栏"><a href="#7-2-工具栏" class="headerlink" title="7.2 工具栏"></a>7.2 工具栏</h2><p>可以有多个</p><ol><li>QToolBar * toolbar &#x3D; new QToolBar(this);</li><li>addToolBar( 默认停靠区域， toolbar );  Qt::LeftToolBarArea</li><li>设置  后期停靠区域，设置浮动，设置移动</li><li>添加菜单项 或者添加 小控件</li></ol><h2 id="7-3-状态栏"><a href="#7-3-状态栏" class="headerlink" title="7.3 状态栏"></a>7.3 状态栏</h2><p>最多一个</p><p>1.3.1 QStatusBar * stBar &#x3D; statusBar();</p><p>1.3.2 设置到窗口中 setStatusBar(stBar);</p><p>1.3.3  stBar-&gt;addWidget(label);放左侧信息</p><p>1.3.4  stBar-&gt;addPermanentWidget(label2); 放右侧信息</p><h2 id="7-4-铆接部件"><a href="#7-4-铆接部件" class="headerlink" title="7.4 铆接部件"></a>7.4 铆接部件</h2><p>浮动窗口  可以多个</p><ol><li>QDockWidget </li><li>addDockWidget( 默认停靠区域，浮动窗口指针)</li><li>设置后期停靠区域</li></ol><h2 id="7-5-设置核心部件"><a href="#7-5-设置核心部件" class="headerlink" title="7.5 设置核心部件"></a>7.5 设置核心部件</h2><p>  只能一个</p><ol><li>setCentralWidget(edit);</li></ol><h2 id="7-6、资源文件"><a href="#7-6、资源文件" class="headerlink" title="7.6、资源文件"></a>7.6、资源文件</h2><p>1.1 将图片文件 拷贝到项目位置下</p><p>1.2 右键项目-&gt;添加新文件 –&gt;  Qt - &gt; Qt recourse File  - &gt;给资源文件起名</p><p>1.3 res 生成  res.qrc  </p><p>1.4 open in editor  编辑资源</p><p>1.5 添加前缀  添加文件</p><p>1.6 使用  “ : + 前缀名 + 文件名 ”</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/image-20240806100528590.png" alt="image-20240806100528590"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ui-&gt;actionnew-&gt;setIcon(QIcon(&quot;F:\\QT\\05_QtSource\\Image\\Luffy.png&quot;));</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用添加Qt资源 &quot;: +前缀名 +文件名&quot;</span></span><br><span class="line">    ui-&gt;actionnew-&gt;<span class="built_in">setIcon</span>(<span class="built_in">QIcon</span>(<span class="string">&quot;:/Image/Luffy.png&quot;</span>));</span><br><span class="line">    ui-&gt;actionopen-&gt;<span class="built_in">setIcon</span>(<span class="built_in">QIcon</span>(<span class="string">&quot;:/Image/LuffyQ.png&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、对话框"><a href="#八、对话框" class="headerlink" title="八、对话框"></a>八、对话框</h1><h2 id="8-1-分类-："><a href="#8-1-分类-：" class="headerlink" title="8.1 分类 ："></a>8.1 分类 ：</h2><ol><li>模态对话框  不可以对其他窗口进行操作 阻塞<ol><li>QDialog  dlg(this)</li><li>dlg.exec();</li></ol></li><li>非模态对话框  可以对其他窗口进行操作<ol><li>防止一闪而过 创建到堆区</li><li>QDialog * dlg &#x3D; new QDialog(this)</li><li>dlg-&gt;show();</li><li>dlg2-&gt;setAttribute(Qt::WA_DeleteOnClose); &#x2F;&#x2F;55号 属性</li></ol></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击新建按钮，弹出一个对话框</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;actionnew, &amp;QAction::triggered,[=]()&#123;</span><br><span class="line">    <span class="comment">// 对话框 两种分类</span></span><br><span class="line">    <span class="comment">// 模态对话框（不可以对其他窗口进行操作）阻塞</span></span><br><span class="line">    <span class="comment">// 非模态对话框（可以对其他窗口进行操作）</span></span><br><span class="line">    <span class="comment">// QDialog dlg(this);</span></span><br><span class="line">    <span class="comment">// dlg.resize(200, 100);</span></span><br><span class="line">    <span class="comment">// dlg.exec();</span></span><br><span class="line">    <span class="comment">// qDebug() &lt;&lt; &quot;模态对话框弹出了&quot;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非模态对话框</span></span><br><span class="line">    QDialog * dlg2 = <span class="keyword">new</span> <span class="built_in">QDialog</span>(<span class="keyword">this</span>);</span><br><span class="line">    dlg2-&gt;<span class="built_in">resize</span>(<span class="number">200</span>, <span class="number">100</span>);</span><br><span class="line">    dlg2-&gt;<span class="built_in">show</span>();</span><br><span class="line">    dlg2-&gt;<span class="built_in">setAttribute</span>(Qt::WA_DeleteOnClose);   <span class="comment">// 55号属性</span></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;非模态对话框弹出了&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="8-2-标准对话框-–-消息对话框"><a href="#8-2-标准对话框-–-消息对话框" class="headerlink" title="8.2 标准对话框 –  消息对话框"></a>8.2 标准对话框 –  消息对话框</h2><p>1.2.1 QMessageBox 静态成员函数  创建对话框</p><p>1.2.2 错误、信息、提问、警告</p><p>1.2.3 参数1  父亲 参数2  标题  参数3  显示内容 参数4  按键类型  参数5 默认关联回车按键</p><p>1.2.4 返回值 也是StandardButton类型，利用返回值判断用户的输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击新建按钮，弹出一个对话框</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;actionnew, &amp;QAction::triggered,[=]()&#123;</span><br><span class="line">        <span class="comment">// 消息对话框</span></span><br><span class="line">        <span class="comment">// 错误对话框</span></span><br><span class="line">        <span class="comment">//QMessageBox::critical(this, &quot;critical&quot;, &quot;错误&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 信息对话框</span></span><br><span class="line">        <span class="comment">//QMessageBox::information(this, &quot;info&quot;, &quot;信息&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提问对话框</span></span><br><span class="line">        <span class="comment">// 参数1：父亲</span></span><br><span class="line">        <span class="comment">// 参数2：标题</span></span><br><span class="line">        <span class="comment">// 参数3：提示内容</span></span><br><span class="line">        <span class="comment">// 参数4：按键类型</span></span><br><span class="line">        <span class="comment">// 参数5：默认关联回车按键</span></span><br><span class="line">        <span class="comment">// if (QMessageBox::Save == QMessageBox::question(this, &quot;ques&quot;,&quot;提问&quot;, QMessageBox::Save | QMessageBox::Cancel))</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     qDebug() &lt;&lt; &quot;选择的是保存&quot;;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// else</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     qDebug() &lt;&lt; &quot;选择的是取消&quot;;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 警告对话框</span></span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="keyword">this</span>, <span class="string">&quot;warning&quot;</span>, <span class="string">&quot;警告&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-3-其他标准对话框"><a href="#8-3-其他标准对话框" class="headerlink" title="8.3 其他标准对话框"></a>8.3 其他标准对话框</h2><ul><li>颜色对话框  QColorDialog：：getColor </li><li>文件对话框  QFileDialog：：getOpenFileName(父亲，标题，默认路径，过滤文件)</li><li>字体对话框  QFontDialog：：getFont</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QColorDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFileDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFontDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击新建按钮，弹出一个对话框</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;actionnew, &amp;QAction::triggered,[=]()&#123;</span><br><span class="line">      </span><br><span class="line">        <span class="comment">// 其他标准对话框</span></span><br><span class="line">        <span class="comment">// 颜色对话框</span></span><br><span class="line">        <span class="comment">// QColor color = QColorDialog::getColor(QColor(255, 0, 0));</span></span><br><span class="line">        <span class="comment">// qDebug() &lt;&lt; &quot;r = &quot; &lt;&lt; color.red() &lt;&lt; &quot; g = &quot; &lt;&lt; color.green() &lt;&lt; &quot; b = &quot; &lt;&lt; color.blue();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件对话框</span></span><br><span class="line">        <span class="comment">// 参数1 父亲</span></span><br><span class="line">        <span class="comment">// 参数2 标题</span></span><br><span class="line">        <span class="comment">// 参数3 默认打开路径</span></span><br><span class="line">        <span class="comment">// 参数4 过滤文件格式</span></span><br><span class="line">        <span class="comment">// 返回值是 选取的路径</span></span><br><span class="line">        <span class="comment">// QString str = QFileDialog::getOpenFileName(this, &quot;打开&quot;, &quot;C:\\Users\\Administrator\\Desktop&quot;, &quot;(*.txt)&quot;);</span></span><br><span class="line">        <span class="comment">// qDebug() &lt;&lt; str;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字体对话框</span></span><br><span class="line">        <span class="type">bool</span> flag;</span><br><span class="line">        QFont font = QFontDialog::<span class="built_in">getFont</span>(&amp;flag, <span class="built_in">QFont</span>(<span class="string">&quot;华文彩云&quot;</span>, <span class="number">36</span>));</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;字体：&quot;</span> &lt;&lt; font.<span class="built_in">family</span>().<span class="built_in">toUtf8</span>().<span class="built_in">data</span>() &lt;&lt; <span class="string">&quot; 字号：&quot;</span> &lt;&lt; font.<span class="built_in">pointSize</span>() &lt;&lt; <span class="string">&quot; 是否加粗：&quot;</span> &lt;&lt; font.<span class="built_in">bold</span>() &lt;&lt; <span class="string">&quot; 是否倾斜：&quot;</span> &lt;&lt; font.<span class="built_in">italic</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="九、布局管理器"><a href="#九、布局管理器" class="headerlink" title="九、布局管理器"></a>九、布局管理器</h1><p>​所谓 GUI 界面，归根结底，就是一堆组件的叠加。我们创建一个窗口，把按钮放上面，把图标放上面，这样就成了一个界面。在放置时，组件的位置尤其重要。我们必须要指定组件放在哪里，以便窗口能够按照我们需要的方式进行渲染。这就涉及到组件定位的机制。</p><p><strong>Qt 提供了两种组件定位机制：绝对定位和布局定位。</strong></p><p>​绝对定位就是一种最原始的定位方法：给出这个组件的坐标和长宽值。</p><p>​这样，Qt 就知道该把组件放在哪里以及如何设置组件的大小。但是这样做带来的一个问题是，如果用户改变了窗口大小，比如点击最大化按钮或者使用鼠标拖动窗口边缘，采用绝对定位的组件是不会有任何响应的。这也很自然，因为你并没有告诉 Qt，在窗口变化时，组件是否要更新自己以及如何更新。或者，还有更简单的方法：禁止用户改变窗口大小。但这总不是长远之计。</p><p>​布局定位：你只要把组件放入某一种布局，布局由专门的布局管理器进行管理。当需要调整大小或者位置的时候，Qt 使用对应的布局管理器进行调整。</p><p>布局定位完美的解决了使用绝对定位的缺陷。</p><p>Qt 提供的布局中以下三种是我们最常用的：</p><ul><li>QHBoxLayout：按照水平方向从左到右布局；</li><li>QVBoxLayout：按照竖直方向从上到下布局；</li><li>QGridLayout：在一个网格中进行布局，类似于 HTML 的 table；</li></ul><h2 id="9-1-系统提供的布局控件"><a href="#9-1-系统提供的布局控件" class="headerlink" title="9.1 系统提供的布局控件"></a><strong>9.1 系统提供的布局控件</strong></h2><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/wps2.jpg" alt="img"> </p><p>这4个为系统给我们提供的布局的控件，但是使用起来不是非常的灵活，这里就不详细介绍了。</p><h2 id="9-2-利用widget做布局"><a href="#9-2-利用widget做布局" class="headerlink" title="9.2 利用widget做布局"></a><strong>9.2 利用widget做布局</strong></h2><p>第二种布局方式是利用控件里的widget来做布局，在Containers中</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/wps3.jpg" alt="img"> </p><p>在widget中的控件可以进行水平、垂直、栅格布局等操作，比较灵活。</p><p>再布局的同时我们需要灵活运用弹簧的特性让我们的布局更加的美观，下面是一个登陆窗口，利用widget可以搭建出如下登陆界面：</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%B8%89)/wps4.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_基础(二)-控件、信号量和槽</title>
      <link href="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/"/>
      <url>/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="四、基本控件"><a href="#四、基本控件" class="headerlink" title="四、基本控件"></a>四、基本控件</h1><p><strong>窗口操作</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重置窗口的大小</span></span><br><span class="line"><span class="built_in">resize</span>(<span class="number">600</span>, <span class="number">400</span>);</span><br><span class="line"><span class="comment">// 设置固定的窗口大小</span></span><br><span class="line"><span class="built_in">setFixedSize</span>(<span class="number">600</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置窗口标题</span></span><br><span class="line"><span class="built_in">setWindowTitle</span>(<span class="string">&quot;第一个窗口&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="4-1、按钮控件"><a href="#4-1、按钮控件" class="headerlink" title="4.1、按钮控件"></a>4.1、按钮控件</h2><p>​一个按钮其实就是一个QPushButton类下的对象，如果只是创建出对象，是无法显示到窗口中的，所以我们需要依赖一个父窗口，也就是指定一个父亲利用setParent函数即可，如果想设置按钮上显示的文字利用setText，移动按钮位置用move</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span>  <span class="comment">// 按钮控件的头文件</span></span></span><br><span class="line"></span><br><span class="line">myWidget::<span class="built_in">myWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建一个按钮</span></span><br><span class="line">    QPushButton * btn = <span class="keyword">new</span> QPushButton;</span><br><span class="line">    <span class="comment">// btn-&gt;show();    // show以顶层方式弹出窗口控件</span></span><br><span class="line">    btn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);<span class="comment">// 让btn 依赖在myWidget窗口中</span></span><br><span class="line"></span><br><span class="line">    btn-&gt;<span class="built_in">setText</span>(<span class="string">&quot;第一个按钮&quot;</span>);<span class="comment">// 显示文本</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建第二个按钮，并指定父类 按照控件的大小创建窗口</span></span><br><span class="line">    QPushButton * btn2 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;第二个按钮&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动btn2按钮</span></span><br><span class="line">    btn2-&gt;<span class="built_in">move</span>(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// 按钮也可以设置大小</span></span><br><span class="line">    btn2-&gt;<span class="built_in">resize</span>(<span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Qt中的坐标系</p><ul><li>左上角为 0 ， 0 点</li><li>x以右为正方向</li><li>y以下为正方向</li></ul><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/wps1.jpg" alt="img"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btn-&gt;<span class="built_in">move</span>(<span class="number">100</span>, <span class="number">100</span>);<span class="comment">// 设置坐标为（100， 100）</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-2、QLabel控件"><a href="#4-2、QLabel控件" class="headerlink" title="4.2、QLabel控件"></a><strong>4.2、QLabel控件</strong></h2><p>QLabel是我们最常用的控件之一，其功能很强大，我们可以用来显示文本，图片和动画等。</p><h3 id="4-2-1、显示文字"><a href="#4-2-1、显示文字" class="headerlink" title="4.2.1、显示文字"></a>4.2.1、显示文字</h3><p>通过QLabel类的setText函数设置显示的内容:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span><span class="title">setText</span><span class="params">(<span class="type">const</span> QString &amp;)</span></span></span><br></pre></td></tr></table></figure><ul><li>可以显示普通文本字符串</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QLable *label = <span class="keyword">new</span> QLable;</span><br><span class="line"></span><br><span class="line">label-&gt;<span class="built_in">setText</span>(“Hello, World!”);</span><br></pre></td></tr></table></figure><ul><li><p>显示中文</p><ul><li><p>避免中文乱码，可以使用QStringLiteral</p></li><li><pre><code class="cpp">QString str = QStringLiteral(&quot;正在发送信息.......&quot;);label-&gt;setText(str);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 中文字体也可以进行丰富，使用`QFont`设置格式，也可以使用 `setStyleSheet` 设置格式</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  QFont font;</span><br><span class="line">  font.setFamily(&quot;Microsoft YaHei UI&quot;);  // 设置字体为宋体</span><br><span class="line">  font.setPointSize(20);     // 设置字体大小</span><br><span class="line">  </span><br><span class="line">  QLabel * safeInfo = new QLable;</span><br><span class="line">  safeInfo-&gt;setText(str);</span><br><span class="line">  safeInfo-&gt;setFont(font);</span><br><span class="line">  safeInfo-&gt;setStyleSheet(&quot;color: red;&quot;);// 字体为中文</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>可以显示HTML格式的字符串</p><ul><li>比如显示一个链接:</li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">QLabel * label = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">label-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Hello, World&quot;</span>);</span><br><span class="line"></span><br><span class="line">label-&gt;<span class="built_in">setText</span>(<span class="string">&quot;&lt;h1&gt;&lt;a href=\&quot;https://www.baidu.com\&quot;&gt;百度一下&lt;/a&gt;&lt;/h1&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">label-&gt;<span class="built_in">setOpenExternalLinks</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>​其中setOpenExternalLinks()函数是用来设置用户点击链接之后是否自动打开链接，如果参数指定为true则会自动打开。</p><h3 id="4-2-2、显示图片"><a href="#4-2-2、显示图片" class="headerlink" title="4.2.2、显示图片"></a>4.2.2、显示图片</h3><ul><li><p>可以使用QLabel的成员函数setPixmap设置图片</p><ul><li><pre><code class="cpp">voidsetPixmap(const QPixmap &amp;)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 流程为：</span><br><span class="line"></span><br><span class="line">  - ```cpp</span><br><span class="line">    // 首先定义QPixmap对象</span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    </span><br><span class="line">    // 然后加载图片</span><br><span class="line">    pixmap.load(&quot;:/Image/boat.jpg&quot;);</span><br><span class="line">    </span><br><span class="line">    // 最后将图片设置到QLabel中</span><br><span class="line">    QLabel *label = new QLabel;</span><br><span class="line">    label.setPixmap(pixmap);</span><br></pre></td></tr></table></figure>-</code></pre></li></ul></li><li><p>也可以使用setStyleSheet的方式设置图片</p><ul><li><pre><code class="cpp">QLabel * label = new QLabel;label-&gt;setStyleSheet(&quot;background-image: url(:/image/warningRed.png);&quot;);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.2.3、显示动画</span><br><span class="line"></span><br><span class="line">可以使用QLabel 的成员函数setMovie加载动画，可以播放gif格式的文件</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">voidsetMovie(QMovie * movie)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>首先定义QMovied对象，并初始化:</p><ul><li><pre><code class="cpp">QMovie *movie = new QMovie(&quot;:/Mario.gif&quot;);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 播放加载的动画：</span><br><span class="line"></span><br><span class="line">  - ```cpp</span><br><span class="line">    movie-&gt;start();</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>将动画设置到QLabel中：</p><ul><li><pre><code class="cpp">QLabel *label = new QLabel；label-&gt;setMovie(movie);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">## **4.3 QLineEdit**</span><br><span class="line"></span><br><span class="line">Qt提供的单行文本编辑框。</span><br><span class="line"></span><br><span class="line">### 4.3.1、设置/获取内容</span><br><span class="line"></span><br><span class="line">-   获取编辑框内容使用text（），函数声明如下：</span><br><span class="line">    -   `QStringtext() const`</span><br><span class="line">-   设置编辑框内容</span><br><span class="line">    -   `voidsetText(const QString &amp;)`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.3.2、设置显示模式</span><br><span class="line"></span><br><span class="line">使用QLineEdit类的setEchoMode () 函数设置文本的显示模式,</span><br><span class="line"></span><br><span class="line">函数声明:`voidsetEchoMode(EchoMode mode)`</span><br><span class="line"></span><br><span class="line">EchoMode是一个枚举类型,一共定义了四种显示模式:</span><br><span class="line"></span><br><span class="line">1.  QLineEdit::Normal 模式显示方式，按照输入的内容显示。</span><br><span class="line">2.  QLineEdit::NoEcho不显示任何内容，此模式下无法看到用户的输入。</span><br><span class="line">3.  QLineEdit::Password密码模式，输入的字符会根据平台转换为特殊字符。</span><br><span class="line">4.  QLineEdit::PasswordEchoOnEdit编辑时显示字符否则显示字符作为密码。</span><br><span class="line"></span><br><span class="line">另外，我们再使用QLineEdit显示文本的时候，希望在左侧留出一段空白的区域，那么，就可以使用QLineEdit给我们提供的setTextMargins函数：</span><br><span class="line"></span><br><span class="line">`void setTextMargins(int left, int top, int right, int bottom)`</span><br><span class="line"></span><br><span class="line">用此函数可以指定显示的文本与输入框上下左右边界的间隔的像素数。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## **4.4 自定义控件**</span><br><span class="line"></span><br><span class="line">自定义一个控件SmallWidget，可以作为独立的窗口显示,也可以作为一个控件来使用：</span><br><span class="line"></span><br><span class="line">![img](Qt_基础(二)/wps5.jpg) </span><br><span class="line"></span><br><span class="line">打开Qt的.ui文件,因为SmallWidget是派生自Qwidget类,所以需要在ui文件中先放入一个QWidget控件, 然后再上边鼠标右键</span><br><span class="line"></span><br><span class="line">![img](Qt_基础(二)/wps6.jpg) </span><br><span class="line"></span><br><span class="line">弹出提升窗口部件对话框</span><br><span class="line"></span><br><span class="line">![img](Qt_基础(二)/wps7.jpg) </span><br><span class="line"></span><br><span class="line">添加要提升的类的名字,然后选择 添加 </span><br><span class="line"></span><br><span class="line">![img](Qt_基础(二)/wps8.jpg) </span><br><span class="line"></span><br><span class="line">添加之后,类名会显示到上边的列表框中,然后单击提升按钮,完成操作.</span><br><span class="line"></span><br><span class="line">我们可以看到, 这个窗口对应的类从原来的QWidget变成了SmallWidget</span><br><span class="line"></span><br><span class="line">![img](Qt_基础(二)/wps9.jpg) </span><br><span class="line"></span><br><span class="line">再次运行程序,这个widget_3中就能显示出我们自定义的窗口了.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**操作流程：**</span><br><span class="line"></span><br><span class="line">1.  添加新文件 Qt-&gt;设计师界面类 ，得到（.h，.cpp，.ui）</span><br><span class="line">2.  .ui中设计QSpinBox和QSlider两个控件</span><br><span class="line">3.  Widget中使用自定义控件，拖拽一个Widget，点击”提升为“，点击“提升”</span><br><span class="line">4.  实现功能，改变数字，滑动条跟着移动</span><br><span class="line"></span><br><span class="line">在使用Qt的ui文件搭建界面的时候，工具栏栏中只为我们提供了标准的窗口控件，如果我们想使用自定义控件怎么办？</span><br><span class="line"></span><br><span class="line">例如：我们从QWidget派生出一个类SmallWidget，实现了一个自定义窗口，可以在自定义窗口使用ui设计界面，然后通过信号量和槽进行设置相关的逻辑</span><br><span class="line"></span><br><span class="line"> ```cpp</span><br><span class="line">#include &lt;QWidget&gt;</span><br><span class="line"></span><br><span class="line">namespace Ui &#123;</span><br><span class="line">class smallWidget;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class smallWidget : public QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    explicit smallWidget(QWidget *parent = nullptr);</span><br><span class="line">    ~smallWidget();</span><br><span class="line"></span><br><span class="line">    // 设置数字</span><br><span class="line">    void setNum(int num);</span><br><span class="line">    // 获取数字</span><br><span class="line">    int getNum();</span><br><span class="line">private:</span><br><span class="line">    Ui::smallWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endif // SMALLWIDGET_H</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;smallwidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_smallwidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">smallWidget::<span class="built_in">smallWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::smallWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// QSpinBox移动，QSlider跟着移动</span></span><br><span class="line">    <span class="comment">// 定义一个函数指针，指向QSpinBox::valueChanged(int)信号</span></span><br><span class="line">    <span class="comment">// 这样做是为了处理函数重载，因为valueChanged有int和QString两个版本</span></span><br><span class="line">    <span class="built_in">void</span> (QSpinBox:: * spSignal)(<span class="type">int</span>) = &amp;QSpinBox::valueChanged;</span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;spinBox, spSignal, ui-&gt;horizontalSlider, &amp;QSlider::setValue);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// QSlider滑动 QSpinxBox跟着改变</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;horizontalSlider, &amp;QSlider::valueChanged, ui-&gt;spinBox, &amp;QSpinBox::setValue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">smallWidget::~<span class="built_in">smallWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置数字</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">smallWidget::setNum</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;spinBox-&gt;<span class="built_in">setValue</span>(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数字</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">smallWidget::getNum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ui-&gt;spinBox-&gt;<span class="built_in">value</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后在widget类中使用这个自定义控件，可以通过ui指向对应的自定义控件的槽函数</p><p>注意：使用ui绘图时，不要使用widget嵌入widget，因为可能控制不了内部widget的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击获取 获取控件当前的值</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;btn_get, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; ui-&gt;widget_2-&gt;<span class="built_in">getNum</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置到一半</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;btn_set, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line">        ui-&gt;widget_2-&gt;<span class="built_in">setNum</span>(<span class="number">50</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-5、常用控件"><a href="#4-5、常用控件" class="headerlink" title="4.5、常用控件"></a>4.5、常用控件</h2><h3 id="4-5-1、按钮组"><a href="#4-5-1、按钮组" class="headerlink" title="4.5.1、按钮组"></a>4.5.1、按钮组</h3><ul><li><p>QPushButton  常用按钮 </p></li><li><p>QToolButton  工具按钮  用于显示图片，如图想显示文字，修改风格：toolButtonStyle ， 凸起风格autoRaise</p><ul><li><pre><code class="cpp">QToolButton *toolButton = new QToolButton(this);toolButton-&gt;setText(&quot;Tool Button&quot;);toolButton-&gt;setIcon(QIcon(&quot;:/icons/tool.png&quot;));  // 设置图标toolButton-&gt;setToolButtonStyle(Qt::ToolButtonTextUnderIcon);  // 显示文字在图标下方toolButton-&gt;setAutoRaise(true);  // 设置凸起风格// 连接信号与槽connect(toolButton, &amp;QToolButton::clicked, this, &amp;MainWindow::handleToolButtonClick);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- radioButton  单选按钮，设置默认 ui-&gt;rBtnMan-&gt;setChecked(true); </span><br><span class="line"></span><br><span class="line">  - ```cpp</span><br><span class="line">    QRadioButton *rBtnMan = new QRadioButton(&quot;Man&quot;, this);</span><br><span class="line">    QRadioButton *rBtnWoman = new QRadioButton(&quot;Woman&quot;, this);</span><br><span class="line">    rBtnMan-&gt;setChecked(true);  // 设置默认选中</span><br><span class="line">    </span><br><span class="line">    // 连接信号与槽</span><br><span class="line">    connect(rBtnMan, &amp;QRadioButton::toggled, this, &amp;MainWindow::handleRadioButtonToggled);</span><br><span class="line">    </span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>checkbox多选按钮，监听状态，2 选中  1 半选 0 未选中</p><ul><li><pre><code class="cpp">QCheckBox *checkBox = new QCheckBox(&quot;Option&quot;, this);// 设置默认状态（可选）checkBox-&gt;setCheckState(Qt::PartiallyChecked);// 连接信号与槽connect(checkBox, &amp;QCheckBox::stateChanged, this, &amp;MainWindow::handleCheckBoxStateChanged);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.5.2、QListWidget 列表容器</span><br><span class="line"></span><br><span class="line">- QListWidgetItem * item 一行内容 </span><br><span class="line"></span><br><span class="line">- ui-&gt;listWidget -&gt;addItem ( item )</span><br><span class="line"></span><br><span class="line">- 设置居中方式item-&gt;setTextAlignment(Qt::AlignHCenter);</span><br><span class="line"></span><br><span class="line">- 可以利用addItems一次性添加整个诗内容</span><br><span class="line"></span><br><span class="line">- 两种方式添加语句</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  Widget::Widget(QWidget *parent)</span><br><span class="line">      : QWidget(parent)</span><br><span class="line">      , ui(new Ui::Widget)</span><br><span class="line">  &#123;</span><br><span class="line">      ui-&gt;setupUi(this);</span><br><span class="line">  </span><br><span class="line">      // 利用listWidget写诗</span><br><span class="line">      QListWidgetItem * item = new QListWidgetItem(&quot;锄禾日当午&quot;);</span><br><span class="line">      item-&gt;setTextAlignment(Qt::AlignCenter);</span><br><span class="line">      // 将一行诗放入到listWidget控件中</span><br><span class="line">      ui-&gt;listWidget-&gt;addItem(item);</span><br><span class="line">  </span><br><span class="line">      // QStringList List&lt;String&gt;</span><br><span class="line">      QStringList list;</span><br><span class="line">      list &lt;&lt; &quot;锄禾日当午&quot; &lt;&lt; &quot;汗滴禾下土&quot; &lt;&lt; &quot;谁知盘中餐&quot; &lt;&lt; &quot;粒粒皆辛苦&quot;;</span><br><span class="line">      ui-&gt;listWidget-&gt;addItems(list);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="4-5-3、QTreeWidget-树控件"><a href="#4-5-3、QTreeWidget-树控件" class="headerlink" title="4.5.3、QTreeWidget 树控件"></a>4.5.3、QTreeWidget 树控件</h3><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/image-20240806142429779.png" alt="image-20240806142429779"></p><ul><li><p>设置头  </p><ul><li>ui-&gt;treeWidget-&gt;setHeaderLabels(QStringList()&lt;&lt; “英雄”&lt;&lt; “英雄介绍”);</li></ul></li><li><p>创建根节点</p><ul><li>QTreeWidgetItem * liItem &#x3D; new QTreeWidgetItem(QStringList()&lt;&lt; “力量”);</li></ul></li><li><p>添加根节点 到 树控件上</p><ul><li>ui-&gt;treeWidget-&gt;addTopLevelItem(liItem);</li></ul></li><li><p>添加子节点</p></li><li><p>liItem-&gt;addChild(l1);</p></li><li><pre><code class="cpp">Widget::Widget(QWidget *parent)    : QWidget(parent)    , ui(new Ui::Widget)&#123;    ui-&gt;setupUi(this);    // treeWidget树控件的使用    // 设置水平头    ui-&gt;treeWidget-&gt;setHeaderLabels(QStringList() &lt;&lt; &quot;英雄&quot; &lt;&lt; &quot;英雄简介&quot;);    QTreeWidgetItem * liItem = new QTreeWidgetItem(QStringList() &lt;&lt; &quot;力量&quot;);    QTreeWidgetItem * minItem = new QTreeWidgetItem(QStringList() &lt;&lt; &quot;敏捷&quot;);    QTreeWidgetItem * zhiItem = new QTreeWidgetItem(QStringList() &lt;&lt; &quot;智慧&quot;);    // 加载顶层节点    ui-&gt;treeWidget-&gt;addTopLevelItem(liItem);    ui-&gt;treeWidget-&gt;addTopLevelItem(minItem);    ui-&gt;treeWidget-&gt;addTopLevelItem(zhiItem);    // 追加子节点    QStringList heroL1;    heroL1 &lt;&lt; &quot;钢背猪&quot; &lt;&lt; &quot;前排坦克能在吸收伤害的同时造成可观的范围输出&quot;;    QTreeWidgetItem * li = new QTreeWidgetItem(heroL1);    liItem-&gt;addChild(li);&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.5.4、QTableWidget 表格控件</span><br><span class="line"></span><br><span class="line">![image-20240806144019566](Qt_基础(二)/image-20240806144019566.png)</span><br><span class="line"></span><br><span class="line">- 设置列数 </span><br><span class="line"></span><br><span class="line">  -   ui-&gt;tableWidget-&gt;setColumnCount(3);</span><br><span class="line"></span><br><span class="line">- 设置水平表头</span><br><span class="line"></span><br><span class="line">  -   ui-&gt;tableWidget-&gt;setHorizontalHeaderLabels(QStringList()&lt;&lt;&quot;姓名&quot;&lt;&lt; &quot;性别&quot;&lt;&lt; &quot;年龄&quot;);</span><br><span class="line"></span><br><span class="line">- 设置行数 </span><br><span class="line"></span><br><span class="line">  -   ui-&gt;tableWidget-&gt;setRowCount(5);</span><br><span class="line"></span><br><span class="line">- 设置正文</span><br><span class="line"></span><br><span class="line">  -   ui-&gt;tableWidget-&gt;setItem(0,0, new QTableWidgetItem(&quot;亚瑟&quot;));</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  Widget::Widget(QWidget *parent)</span><br><span class="line">      : QWidget(parent)</span><br><span class="line">      , ui(new Ui::Widget)</span><br><span class="line">  &#123;</span><br><span class="line">      ui-&gt;setupUi(this);</span><br><span class="line">  </span><br><span class="line">      // TableWidget控件</span><br><span class="line">      // 设置列数</span><br><span class="line">      ui-&gt;tableWidget-&gt;setColumnCount(3);</span><br><span class="line">      // 设置水平表头</span><br><span class="line">      ui-&gt;tableWidget-&gt;setHorizontalHeaderLabels(QStringList() &lt;&lt;&quot;姓名&quot; &lt;&lt; &quot;性别&quot; &lt;&lt; &quot;年龄&quot;);</span><br><span class="line">      // 设置行数</span><br><span class="line">      ui-&gt;tableWidget-&gt;setRowCount(5);</span><br><span class="line">  </span><br><span class="line">      // 设置正文</span><br><span class="line">      // ui-&gt;tableWidget-&gt;setItem(0, 0, new QTableWidgetItem(&quot;亚瑟&quot;));</span><br><span class="line">      QStringList nameList;</span><br><span class="line">      nameList &lt;&lt; &quot;亚瑟&quot; &lt;&lt; &quot;赵云&quot; &lt;&lt; &quot;张飞&quot; &lt;&lt; &quot;关羽&quot; &lt;&lt; &quot;花木兰&quot;;</span><br><span class="line">  </span><br><span class="line">      QList&lt;QString&gt; sexList;</span><br><span class="line">      sexList &lt;&lt; &quot;男&quot; &lt;&lt; &quot;男&quot; &lt;&lt; &quot;男&quot; &lt;&lt; &quot;男&quot; &lt;&lt; &quot;女&quot; ;</span><br><span class="line">      for (int i = 0; i &lt; 5; i++)</span><br><span class="line">      &#123;</span><br><span class="line">          int col = 0;</span><br><span class="line">          ui-&gt;tableWidget-&gt;setItem(i, col++, new QTableWidgetItem(nameList[i]));</span><br><span class="line">          ui-&gt;tableWidget-&gt;setItem(i, col++, new QTableWidgetItem(sexList.at(i)));</span><br><span class="line">          // int 转    QString</span><br><span class="line">          ui-&gt;tableWidget-&gt;setItem(i, col++, new QTableWidgetItem(QString::number(i+18)));</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h3 id="4-5-5、其他控件介绍"><a href="#4-5-5、其他控件介绍" class="headerlink" title="4.5.5、其他控件介绍"></a>4.5.5、其他控件介绍</h3><ul><li><p>stackedWidget  栈控件</p><ul><li>ui-&gt;stackedWidget-&gt;setCurrentIndex(1);</li></ul></li><li><p>下拉框</p><ul><li>ui-&gt;comboBox-&gt;addItem(“奔驰”);</li></ul></li></ul><h1 id="五、对象树"><a href="#五、对象树" class="headerlink" title="五、对象树"></a>五、对象树</h1><p>当创建的对象在堆区时候，如果指定的父类是QObject派生下来的类或者QObject子类派生下来的类，可以不用管理释放的操作，系统会自动将对象放入对象树中。</p><p>一定程度上简化了内存回收机制</p><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/Qt%E5%AF%B9%E8%B1%A1%E6%A0%91.png" alt="Qt对象树"></p><p>这个MyPushButton是myWidget的子类，它得到了myWidget的this指针，构造是从父类一直向子类来构造，析构是子类析构，然后向父类析构，但是。这个结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我的按钮类构造调用</span><br><span class="line">~myWidget的析构调用</span><br><span class="line">我的按钮类析构</span><br></pre></td></tr></table></figure><p>也没有错，它是从上往下开始调用，到mywidget的析构时，它是先执行里面的操作，然后查看是否有它的子类，再跑到MyPushButton的析构，直到确定没有子类了，才开始释放资源</p><p>也就是说执行操作和释放资源不是同步的，它是先从上往下执行操作，再从下往上释放资源</p><p><strong>父类</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span>  <span class="comment">// 按钮控件的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mypushbutton.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">myWidget::<span class="built_in">myWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建一个按钮</span></span><br><span class="line">    QPushButton * btn = <span class="keyword">new</span> QPushButton;</span><br><span class="line">    <span class="comment">// 让btn 对依赖在myWidget窗口中</span></span><br><span class="line">    btn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个自己的按钮对象</span></span><br><span class="line">    MyPushButton * myBtn = <span class="keyword">new</span> MyPushButton;</span><br><span class="line">    myBtn-&gt;<span class="built_in">setText</span>(<span class="string">&quot;我自己的按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line">    myBtn-&gt;<span class="built_in">move</span>(<span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line">    myBtn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>); <span class="comment">// 设置到对象树中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myWidget::~<span class="built_in">myWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;~myWidget的析构调用&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>派生类</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYPUSHBUTTON_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYPUSHBUTTON_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPushButton</span> : <span class="keyword">public</span> QPushButton</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">MyPushButton</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    ~<span class="built_in">MyPushButton</span>();</span><br><span class="line">signals:</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYPUSHBUTTON_H</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mypushbutton.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">MyPushButton::<span class="built_in">MyPushButton</span>(QWidget *parent)</span><br><span class="line">    : QPushButton&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;我的按钮类构造调用&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyPushButton::~<span class="built_in">MyPushButton</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;我的按钮类析构&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六、信号量和槽"><a href="#六、信号量和槽" class="headerlink" title="六、信号量和槽"></a>六、信号量和槽</h1><h2 id="6-1、系统提供的信号和槽"><a href="#6-1、系统提供的信号和槽" class="headerlink" title="6.1、系统提供的信号和槽"></a>6.1、系统提供的信号和槽</h2><p>连接函数 connect</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需求：点击按钮，关闭窗口</span></span><br><span class="line"><span class="comment">// 参数1：信号的发送者</span></span><br><span class="line"><span class="comment">// 参数2：发送的信号(函数的地址）</span></span><br><span class="line"><span class="comment">// 参数3：信号的接收者</span></span><br><span class="line"><span class="comment">// 参数4：处理的槽函数，信号的槽（函数的地址）</span></span><br><span class="line"><span class="comment">// connect(myBtn, &amp;MyPushButton::clicked, this, &amp;myWidget::close);</span></span><br><span class="line"><span class="built_in">connect</span>(myBtn, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;QWidget::close);</span><br></pre></td></tr></table></figure><p>实现了松散耦合，信号和实现没有固定的关系，是connect联系起来的</p><h2 id="6-2、自定义信号和槽"><a href="#6-2、自定义信号和槽" class="headerlink" title="6.2、自定义信号和槽"></a>6.2、自定义信号和槽</h2><ul><li><p>自定义信号和槽</p><ul><li>自定义信号<ul><li>写到 signals下</li><li>返回 void</li><li>需要声明，不需要实现</li><li>可以有参数，可以重载</li></ul></li><li>自定义槽函数<ul><li>返回void</li><li>需要声明 ，也需要实现</li><li>可以有参数 ，可以重载</li><li>写到 public slot下 或者public 或者全局函数</li></ul></li></ul></li><li><p>触发自定义的信号</p><ul><li>emit 自定义信号</li></ul></li></ul><p><strong>案例</strong>-下课后，老师触发饿了信号，学生响应信号，请客吃饭</p><p><strong>老师类，定义信号</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">signals:</span><br><span class="line">    <span class="comment">// 自定义信号 写到signals下</span></span><br><span class="line">    <span class="comment">// 返回值是void，只需要声明，不需要实现</span></span><br><span class="line">    <span class="comment">// 可以有参数，可以重载</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Hungry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>学生类，定义槽函数和实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="comment">// 早期Qt版本，必须要写道public slots，高级版本可以写道public或者全局下</span></span><br><span class="line">    <span class="comment">// 返回值void， 需要声明，也需要实现</span></span><br><span class="line">    <span class="comment">// 可以有参数，可以发生重载</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">treat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::treat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;请老师吃饭&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>widget窗口类，连接信号和槽，调用</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Widget *ui;</span><br><span class="line">    Teacher * zt;</span><br><span class="line">    Student * st;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">classIsOver</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Teacher 类 老师类</span></span><br><span class="line"><span class="comment">// Student 类 学生类</span></span><br><span class="line"><span class="comment">// 下课后，老师会触发一个信号，饿了，学生响应信号，请客吃饭</span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个老师对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;zt = <span class="keyword">new</span> <span class="built_in">Teacher</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个学生对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;st = <span class="keyword">new</span> <span class="built_in">Student</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 老师饿了 学生请客的连接</span></span><br><span class="line">    <span class="built_in">connect</span>(zt, &amp;Teacher::Hungry, st, &amp;Student::treat);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用下课函数</span></span><br><span class="line">    <span class="built_in">classIsOver</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::classIsOver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 下课函数，调用后 触发老师饿了的信号</span></span><br><span class="line">    emit zt-&gt;<span class="built_in">Hungry</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3、自定义信号和槽出现重载"><a href="#6-3、自定义信号和槽出现重载" class="headerlink" title="6.3、自定义信号和槽出现重载"></a>6.3、自定义信号和槽出现重载</h2><ol><li>需要利用函数指针 明确指向函数的地址</li><li>void( Teacher:: * tSignal )( QString ) &#x3D; &amp;Teacher::hungry;</li><li>QString 转成  char *   <ol><li>.toUtf8() 转为 QByteArray</li><li>.data() 转为 Char *信号可以连接信号</li></ol></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Teacher 类 老师类</span></span><br><span class="line"><span class="comment">// Student 类 学生类</span></span><br><span class="line"><span class="comment">// 下课后，老师会触发一个信号，饿了，学生响应信号，请客吃饭</span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个老师对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;zt = <span class="keyword">new</span> <span class="built_in">Teacher</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个学生对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;st = <span class="keyword">new</span> <span class="built_in">Student</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 老师饿了 学生请客的连接</span></span><br><span class="line">    <span class="comment">// connect(zt, &amp;Teacher::Hungry, st, &amp;Student::treat);</span></span><br><span class="line">    <span class="comment">// 连接带参数的信号和槽</span></span><br><span class="line">    <span class="comment">// 函数 -》 地址</span></span><br><span class="line">    <span class="comment">// 函数指针 -》 函数地址</span></span><br><span class="line">    <span class="built_in">void</span> (Teacher:: *teacherSignal)(QString) = &amp;Teacher::Hungry;</span><br><span class="line">    <span class="built_in">void</span> (Student:: *studentSlot)(QString) = &amp;Student::treat;</span><br><span class="line">    <span class="built_in">connect</span>(zt, teacherSignal, st, studentSlot);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用下课函数</span></span><br><span class="line">    <span class="built_in">classIsOver</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::classIsOver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 下课函数，调用后 触发老师饿了的信号</span></span><br><span class="line">    <span class="comment">// emit zt-&gt;Hungry();</span></span><br><span class="line">    emit zt-&gt;<span class="built_in">Hungry</span>(<span class="string">&quot;宫保鸡丁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="comment">// 早期Qt版本，必须要写道public slots，高级版本可以写道public或者全局下</span></span><br><span class="line">    <span class="comment">// 返回值void， 需要声明，也需要实现</span></span><br><span class="line">    <span class="comment">// 可以有参数，可以发生重载</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">treat</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">treat</span><span class="params">(QString foodName)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::treat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;请老师吃饭&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::treat</span><span class="params">(QString foodName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// QString -&gt; char*</span></span><br><span class="line">    <span class="comment">// 先转成QByteArray (.toUtf8) 再转char *（.data）</span></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;请老师吃饭，老师要吃：&quot;</span> &lt;&lt; foodName.<span class="built_in">toUtf8</span>().<span class="built_in">data</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">signals:</span><br><span class="line">    <span class="comment">// 自定义信号 写到signals下</span></span><br><span class="line">    <span class="comment">// 返回值是void，只需要声明，不需要实现</span></span><br><span class="line">    <span class="comment">// 可以有参数，可以重载</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Hungry</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Hungry</span><span class="params">(QString foodName)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6-4、扩展"><a href="#6-4、扩展" class="headerlink" title="6.4、扩展"></a>6.4、扩展</h2><ol><li>信号可以连接信号</li><li>一个信号可以连接多个槽函数</li><li>多个信号 可以连接 同一个槽函数</li><li>信号和槽函数的参数类型 必须一一对应</li><li>信号和槽的参数个数 是不是要一致？ 信号的参数个数 可以多于槽函数的参数个数</li></ol><p>断开信号  disconnect</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个老师对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;zt = <span class="keyword">new</span> <span class="built_in">Teacher</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个学生对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;st = <span class="keyword">new</span> <span class="built_in">Student</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 老师饿了 学生请客的连接</span></span><br><span class="line">    <span class="comment">// connect(zt, &amp;Teacher::Hungry, st, &amp;Student::treat);</span></span><br><span class="line">    <span class="comment">// 连接带参数的信号和槽</span></span><br><span class="line">    <span class="comment">// 函数 -》 地址</span></span><br><span class="line">    <span class="comment">// 函数指针 -》 函数地址</span></span><br><span class="line">    <span class="built_in">void</span> (Teacher:: *teacherSignal)(QString) = &amp;Teacher::Hungry;</span><br><span class="line">    <span class="built_in">void</span> (Student:: *studentSlot)(QString) = &amp;Student::treat;</span><br><span class="line">    <span class="built_in">connect</span>(zt, teacherSignal, st, studentSlot);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用下课函数</span></span><br><span class="line">    <span class="built_in">classIsOver</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击一个 下课的按钮，再触发下课</span></span><br><span class="line">    QPushButton * btn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;下课&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 充值窗口大小</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">resize</span>(<span class="number">600</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击按钮，触发下课</span></span><br><span class="line">    <span class="comment">// connect(btn, &amp;QPushButton::clicked, this, &amp;Widget::classIsOver);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参信号和槽连接</span></span><br><span class="line">    <span class="built_in">void</span> (Teacher:: *teacherSignal2)(<span class="type">void</span>) = &amp;Teacher::Hungry;</span><br><span class="line">    <span class="built_in">void</span> (Student:: *studentSlot2)(<span class="type">void</span>) = &amp;Student::treat;</span><br><span class="line">    <span class="built_in">connect</span>(zt, teacherSignal2, st, studentSlot2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 信号连接信号</span></span><br><span class="line">    <span class="built_in">connect</span>(btn, &amp;QPushButton::clicked, zt, teacherSignal2);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 断开信号</span></span><br><span class="line">    <span class="built_in">disconnect</span>(zt, teacherSignal2, st, studentSlot2);</span><br></pre></td></tr></table></figure><h2 id="6-5、Qt4版本以前的信号和槽连接方式"><a href="#6-5、Qt4版本以前的信号和槽连接方式" class="headerlink" title="6.5、Qt4版本以前的信号和槽连接方式"></a>6.5、Qt4版本以前的信号和槽连接方式</h2><p>发送的信号SIGNAL（信号）</p><p>槽函数SLOT(槽函数)</p><p>缺点：类型不做检测</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无参信号和槽连接</span></span><br><span class="line"><span class="built_in">void</span> (Teacher:: *teacherSignal2)(<span class="type">void</span>) = &amp;Teacher::Hungry;</span><br><span class="line"><span class="comment">//void (Student:: *studentSlot2)(void) = &amp;Student::treat;</span></span><br><span class="line"><span class="comment">//connect(zt, teacherSignal2, st, studentSlot2);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 信号连接信号</span></span><br><span class="line"><span class="built_in">connect</span>(btn, &amp;QPushButton::clicked, zt, teacherSignal2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开信号</span></span><br><span class="line"><span class="comment">//disconnect(zt, teacherSignal2, st, studentSlot2);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Qt4版本以前的信号和槽连接方式</span></span><br><span class="line"><span class="comment">// 利用Qt4信号槽 连接无参版本</span></span><br><span class="line"><span class="comment">// Qt4版本 底层SIGNAL(&quot;Hungry&quot;)，是根据字符串匹配的，所以不需要看参数</span></span><br><span class="line"><span class="built_in">connect</span>(zt, <span class="built_in">SIGNAL</span>(<span class="built_in">Hungry</span>()), st, <span class="built_in">SLOT</span>(<span class="built_in">treat</span>()));</span><br><span class="line"><span class="comment">// Qt4版本有点：参数直观 缺点：类型不做检测</span></span><br><span class="line"><span class="comment">// Qt5以上 支持Qt4的版本写法，反之不支持</span></span><br></pre></td></tr></table></figure><h2 id="6-6、Lambda表达式"><a href="#6-6、Lambda表达式" class="headerlink" title="6.6、Lambda表达式"></a>6.6、Lambda表达式</h2><p>QT5.4之后支持lambda表达式</p><p>QT5.4之前需要在.pro中添加<code>CONFIG += C++11</code></p><ul><li><p>Lambda表达式</p><ul><li>[]标识符  匿名函数 </li><li>&#x3D; 值传递</li><li>&amp; 引用传递</li></ul></li><li><p>() 参数 </p></li><li><p>{} 实现体</p></li><li><p>mutable 修饰 值传递变量 ，可以修改拷贝出的数据，改变不了本体</p></li><li><p>返回值<code> []() -&gt;int &#123;&#125;</code></p></li></ul><p>lambda表达式 最常用<code>[=]()&#123;&#125;</code></p><h2 id="6-7、Notes"><a href="#6-7、Notes" class="headerlink" title="6.7、Notes"></a>6.7、Notes</h2><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C)/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%8C" alt="Qt信号和槽 ">&#x2F;Qt信号和槽 .png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_基础(五)-绘图和文件操作</title>
      <link href="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%94)/"/>
      <url>/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<h1 id="十一、绘图和绘图设备"><a href="#十一、绘图和绘图设备" class="headerlink" title="十一、绘图和绘图设备"></a>十一、绘图和绘图设备</h1><h2 id="11-1、QPainter-绘图"><a href="#11-1、QPainter-绘图" class="headerlink" title="11.1、QPainter 绘图"></a>11.1、QPainter 绘图</h2><p>1.1 绘图事件  void paintEvent()</p><p>1.2 声明一个画家对象  QPainter  painter(this)  this指定绘图设备</p><p>1.3 画线、画圆、画矩形、画文字</p><p>1.4 设置画笔 QPen  设置画笔宽度 、风格</p><p>1.5 设置画刷 QBrush 设置画刷 风格</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘图事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 实例化画家对象 this指定的是绘图的设备</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置画笔</span></span><br><span class="line">    <span class="function">QPen <span class="title">pen</span><span class="params">(QColor(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="comment">// 设置画笔的宽度</span></span><br><span class="line">    pen.<span class="built_in">setWidth</span>(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">// 设置画笔的风格</span></span><br><span class="line">    pen.<span class="built_in">setStyle</span>(Qt::DotLine);</span><br><span class="line">    <span class="comment">// 让画家使用这个笔</span></span><br><span class="line">    painter.<span class="built_in">setPen</span>(pen);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置画刷</span></span><br><span class="line">    <span class="function">QBrush <span class="title">brush</span><span class="params">(Qt::cyan)</span></span>;</span><br><span class="line">    <span class="comment">// 设置画刷风格</span></span><br><span class="line">    brush.<span class="built_in">setStyle</span>(Qt::Dense7Pattern);</span><br><span class="line">    <span class="comment">// 让画家使用画刷</span></span><br><span class="line">    painter.<span class="built_in">setBrush</span>(brush);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线</span></span><br><span class="line">    painter.<span class="built_in">drawLine</span>(<span class="built_in">QPoint</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">QPoint</span>(<span class="number">100</span>, <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画圆 椭圆</span></span><br><span class="line">    painter.<span class="built_in">drawEllipse</span>(<span class="built_in">QPoint</span>(<span class="number">100</span>, <span class="number">100</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画矩形</span></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="built_in">QPoint</span>(<span class="number">40</span>, <span class="number">40</span>), <span class="built_in">QPoint</span>(<span class="number">80</span>, <span class="number">80</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画文字</span></span><br><span class="line">    painter.<span class="built_in">drawText</span>(<span class="built_in">QRect</span>(<span class="number">10</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">50</span>), <span class="string">&quot;好好学习天天向上&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E4%BA%94)/image-20240807101324349.png" alt="image-20240807101324349"></p><h2 id="11-2、-QPainter高级设置"><a href="#11-2、-QPainter高级设置" class="headerlink" title="11.2、 QPainter高级设置"></a>11.2、 QPainter高级设置</h2><ul><li><p>抗锯齿 效率低</p><ul><li>painter.setRenderHint(QPainter::Antialiasing);</li></ul></li><li><p>对画家进行移动</p><ul><li>painter.translate(100,0);</li><li>保存状态 save</li><li>还原状态 restore</li></ul></li><li><p>如果想手动调用绘图事件 利用update</p></li><li><p>利用画家画图片 painter.drawPixmap( x，y，QPixmap(  路飞) )</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘图事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-------------------------高级设置-----------------------------</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="comment">// painter.drawEllipse(QPoint(100, 50), 50, 50);</span></span><br><span class="line">    <span class="comment">// // 设置 抗锯齿能力</span></span><br><span class="line">    <span class="comment">// painter.setRenderHint(QPainter::Antialiasing);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// painter.drawEllipse(QPoint(200, 50), 50, 50);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画矩形</span></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动画家</span></span><br><span class="line">    painter.<span class="built_in">translate</span>(<span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存画家状态</span></span><br><span class="line">    painter.<span class="built_in">save</span>();</span><br><span class="line"></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">    painter.<span class="built_in">translate</span>(<span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 还原画家保存状态</span></span><br><span class="line">    painter.<span class="built_in">restore</span>();</span><br><span class="line"></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击移动按钮，移动图片</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;pushButton, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line">        <span class="comment">// 如果要手动调用绘图事件， 用update更新</span></span><br><span class="line">        <span class="built_in">update</span>();</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘图事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//----------------------利用画家 画资源图片------------------</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    posX += <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果超出屏幕，从0开始</span></span><br><span class="line">    <span class="keyword">if</span> (posX &gt; <span class="keyword">this</span>-&gt;<span class="built_in">width</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        posX = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(posX, <span class="number">0</span>, <span class="built_in">QPixmap</span>(<span class="string">&quot;:/Image/Luffy.png&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="11-3、-QPaintDevice绘图设备"><a href="#11-3、-QPaintDevice绘图设备" class="headerlink" title="11.3、 QPaintDevice绘图设备"></a>11.3、 QPaintDevice绘图设备</h2><ul><li><p>QPixmap QImage  QBitmap(黑白色) QPicture  QWidget</p></li><li><p>QPixmap 对不同平台做了显示的优化</p><ul><li><p>QPixmap pix( 300,300)</p></li><li><p>pix.fill( 填充颜色 )</p></li><li><p>利用画家 往pix上画画  QPainter painter( &amp; pix)</p></li><li><p>保存  pix.save( “路径”)</p></li><li><pre><code class="cpp">#include &lt;QPixmap&gt;#include &lt;QPainter&gt;#include &lt;QImage&gt;#include &lt;QPicture&gt;Widget::Widget(QWidget *parent)    : QWidget(parent)    , ui(new Ui::Widget)&#123;    ui-&gt;setupUi(this);    // // Pixmap绘图设备 专门为平台做了显示的优化    // QPixmap pix(300, 300);    // // 填充颜色    // pix.fill(Qt::white);    // // 声明画家    // QPainter painter(&amp;pix);    // painter.setPen(QPen(Qt::green));    // painter.drawEllipse(QPoint(150,150), 100, 100);    // // 保存    // pix.save(&quot;F:\\pix.png&quot;);&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - </span><br><span class="line"></span><br><span class="line">- Qimage 可以对像素进行访问</span><br><span class="line"></span><br><span class="line">  - 使用和QPixmap差不多 QImage img(300,300,**QImage::Format_RGB32**);</span><br><span class="line"></span><br><span class="line">  - 其他流程和QPixmap一样</span><br><span class="line"></span><br><span class="line">  - 可以对像素进行修改 img.setPixel(i,j,value);</span><br><span class="line"></span><br><span class="line">  - ```cpp</span><br><span class="line">    #include &quot;widget.h&quot;</span><br><span class="line">    #include &quot;ui_widget.h&quot;</span><br><span class="line">    #include &lt;QPixmap&gt;</span><br><span class="line">    #include &lt;QPainter&gt;</span><br><span class="line">    #include &lt;QImage&gt;</span><br><span class="line">    #include &lt;QPicture&gt;</span><br><span class="line">    </span><br><span class="line">    Widget::Widget(QWidget *parent)</span><br><span class="line">        : QWidget(parent)</span><br><span class="line">        , ui(new Ui::Widget)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;setupUi(this);</span><br><span class="line">    </span><br><span class="line">        // QImage 绘图设备 可以对像素进行访问</span><br><span class="line">        QImage img(300, 300, QImage::Format_RGB32);</span><br><span class="line">        img.fill(Qt::white);</span><br><span class="line">    </span><br><span class="line">        QPainter painter(&amp;img);</span><br><span class="line">        painter.setPen(QPen(Qt::blue));</span><br><span class="line">        painter.drawEllipse(QPoint(150,150), 100, 100);</span><br><span class="line">    </span><br><span class="line">        // 保存</span><br><span class="line">        img.save(&quot;F:\\img.png&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Widget::~Widget()</span><br><span class="line">    &#123;</span><br><span class="line">        delete ui;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 绘图事件</span><br><span class="line">    void Widget::paintEvent(QPaintEvent *)</span><br><span class="line">    &#123;</span><br><span class="line">        QPainter painter(this);</span><br><span class="line">    </span><br><span class="line">        // 利用QImage 对像素进行修改</span><br><span class="line">        QImage img;</span><br><span class="line">        img.load(&quot;:/Image/Luffy.png&quot;);</span><br><span class="line">    </span><br><span class="line">        // 修改像素点</span><br><span class="line">        for (int i = 50; i &lt; 100; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int j = 50; j &lt; 100; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                QRgb value = qRgb(255, 0, 0);</span><br><span class="line">                img.setPixel(i, j, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        painter.drawImage(0, 0, img);</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></code></pre></li><li></li></ul></li><li><p>QPicture  记录和重现 绘图指令</p><ul><li><p>QPicture pic</p></li><li><p>painter.begin(&amp;pic);</p></li><li><p>保存 pic.save( 任意后缀名 )</p></li><li><p>重现 利用画家可以重现painter.drawPicture(0,0,pic);</p></li><li><pre><code class="cpp">#include &quot;widget.h&quot;#include &quot;ui_widget.h&quot;#include &lt;QPixmap&gt;#include &lt;QPainter&gt;#include &lt;QImage&gt;#include &lt;QPicture&gt;Widget::Widget(QWidget *parent)    : QWidget(parent)    , ui(new Ui::Widget)&#123;    ui-&gt;setupUi(this);    // QPicture 绘图设备 可以记录和重现绘图指令    QPicture pic;    QPainter painter;    painter.begin(&amp;pic);    // 开始往pic上画    painter.setPen(QPen(Qt::cyan));    painter.drawEllipse(QPoint(150, 150), 100, 150);    painter.end();  // 结束画画    // 保存到磁盘    pic.save(&quot;F:\\pic.zt&quot;);&#125;Widget::~Widget()&#123;    delete ui;&#125;// 绘图事件void Widget::paintEvent(QPaintEvent *)&#123;    // 重现QPicture的绘图指令    QPainter painter(this);    QPicture pic;    pic.load(&quot;F:\\pic.zt&quot;);    painter.drawPicture(0, 0, pic);&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 十二、文件系统</span><br><span class="line"></span><br><span class="line">## 12.1、 QFile 对文件进行读写操作</span><br><span class="line"></span><br><span class="line">-   QFile进行读写操作</span><br><span class="line">    -   QFile file( path 文件路径)</span><br><span class="line">    -   读</span><br><span class="line">        -   file.open(打开方式) QIODevice::readOnly</span><br><span class="line">        -   全部读取  file.readAll()  按行读  file.readLine()  atend()判断是否读到文件尾</span><br><span class="line">        -   默认支持编码格式 utf-8</span><br><span class="line">        -   利用编码格式类 指定格式 QTextCodeC </span><br><span class="line">            -   [QT6中QTextcodec头文件找不到的解决方法_C 语言_脚本之家 (jb51.net)](https://www.jb51.net/article/275365.htm)</span><br><span class="line">            -   QTextCodec * codec = QTextCodec::codecForName(&quot;gbk&quot;);</span><br><span class="line">            -   //ui-&gt;textEdit-&gt;setText( codec-&gt;toUnicode(array)  );</span><br><span class="line">        -   文件对象关闭 close</span><br><span class="line">    -   写</span><br><span class="line">        -   file.open( QIODevice::writeOnly  / Append)</span><br><span class="line">        -   file.write(内容)</span><br><span class="line">        -   file.close 关闭</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &quot;widget.h&quot;</span><br><span class="line">#include &quot;ui_widget.h&quot;</span><br><span class="line">#include &lt;QFileDialog&gt;</span><br><span class="line">#include &lt;QFile&gt;</span><br><span class="line">#include &lt;QTextCodec&gt;</span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">    , ui(new Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(this);</span><br><span class="line"></span><br><span class="line">    // 点击选取文件的按钮，弹出对话框</span><br><span class="line">    connect(ui-&gt;pushButton, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line"></span><br><span class="line">        QString path = QFileDialog::getOpenFileName(this, &quot;打开文件&quot;, &quot;C:\\Users\\Administrator\\Desktop&quot;);</span><br><span class="line">        // 将路径放入到lineEdit中</span><br><span class="line">        ui-&gt;lineEdit-&gt;setText(path);</span><br><span class="line"></span><br><span class="line">        // 编码格式类</span><br><span class="line">        //QTextCodec * codec = QTextCodec::codecForName(&quot;gbk&quot;);</span><br><span class="line"></span><br><span class="line">        // 读取内容 放入到textEdit中</span><br><span class="line">        // QFile默认支持的格式是utf-8</span><br><span class="line">        QFile file(path);   // 参数就是读取文件的路径</span><br><span class="line">        // 设置打开方式</span><br><span class="line">        file.open(QIODevice::ReadOnly);</span><br><span class="line"></span><br><span class="line">        // QByteArray array = file.readAll();</span><br><span class="line"></span><br><span class="line">        QByteArray array;</span><br><span class="line">        while (!file.atEnd())</span><br><span class="line">        &#123;</span><br><span class="line">            array += file.readLine();     // 按行读</span><br><span class="line">        &#125;</span><br><span class="line">        // 将读取到的数据 放入到textEdit中</span><br><span class="line">        ui-&gt;textEdit-&gt;setText(array);</span><br><span class="line">        // ui-&gt;textEdit-&gt;setText(codec-&gt;toUnicode((array)));</span><br><span class="line"></span><br><span class="line">        // 对文件对象进行关闭</span><br><span class="line">        file.close();</span><br><span class="line"></span><br><span class="line">        // 进行写入</span><br><span class="line">        file.open(QIODevice::Append);   // 用追加的方式进行写</span><br><span class="line">        file.write(&quot;aaaaaaa&quot;);</span><br><span class="line">        file.close();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h2 id="12-2、QFileInfo-读取文件信息"><a href="#12-2、QFileInfo-读取文件信息" class="headerlink" title="12.2、QFileInfo 读取文件信息"></a>12.2、QFileInfo 读取文件信息</h2><ul><li>QFileInfo info(路径)</li><li>qDebug() &lt;&lt; “大小：” &lt;&lt; info.size() &lt;&lt; “ 后缀名：” &lt;&lt; <strong>info.suffix()</strong> &lt;&lt; “ 文件名称：”&lt;&lt;info.fileName() &lt;&lt; “ 文件路径：”&lt;&lt; info.filePath();</li><li>qDebug() &lt;&lt; “创建日期：” &lt;&lt; info.created().toString(“yyyy&#x2F;MM&#x2F;dd hh:mm:ss”);</li><li>qDebug() &lt;&lt; “最后修改日期：”&lt;&lt;info.lastModified().toString(“yyyy-MM-dd hh:mm:ss”);</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFileDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QTextCodec&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFileInfo&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击选取文件的按钮，弹出对话框</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;pushButton, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line"></span><br><span class="line">        QString path = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>, <span class="string">&quot;打开文件&quot;</span>, <span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>);</span><br><span class="line">        <span class="comment">// 将路径放入到lineEdit中</span></span><br><span class="line">        ui-&gt;lineEdit-&gt;<span class="built_in">setText</span>(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// QFileInfo 文件消息类</span></span><br><span class="line">        QFileInfo <span class="built_in">info</span>(path);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;大小：&quot;</span> &lt;&lt; info.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; 后缀名：&quot;</span> &lt;&lt; info.<span class="built_in">suffix</span>() &lt;&lt; <span class="string">&quot; 文件名称:&quot;</span> &lt;&lt; info.<span class="built_in">fileName</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十三、资源"><a href="#十三、资源" class="headerlink" title="十三、资源"></a>十三、资源</h1><ul><li>视频：<a href="https://www.bilibili.com/video/BV1g4411H78N">传智播客《QT从入门到实战完整版》</a></li><li>官方文档：<a href="https://doc.qt.io/">QT官方文档</a>，可以说是十分齐全，可以从<a href="https://doc.qt.io/qt-6/gettingstarted.html">Get Started</a>开始了解一下基本概念，然后按模块看<a href="https://doc.qt.io/all-topics.html">All Topics</a>中的内容，还可以看一下具体的<a href="https://doc.qt.io/qt-6/reference-overview.html">编程API</a>，这样学习相对系统。</li><li>文件代码：<a href="https://github.com/lxq-02/qt_learn">https://github.com/lxq-02/qt_learn</a></li><li><a href="https://www.xinbaoku.com/qt/">Qt教程，Qt5编程入门教程（非常详细） (xinbaoku.com)</a></li><li><a href="https://www.w3cschool.cn/learnroadqt/tufx1j3q.html">Qt 学习之路_w3cschool</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_基础(四)</title>
      <link href="/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E5%9B%9B)/"/>
      <url>/2024/08/08/Qt/Qt_%E5%9F%BA%E7%A1%80(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="十、Qt消息机制和事件"><a href="#十、Qt消息机制和事件" class="headerlink" title="十、Qt消息机制和事件"></a>十、Qt消息机制和事件</h1><h2 id="10-1、Qt中的事件"><a href="#10-1、Qt中的事件" class="headerlink" title="10.1、Qt中的事件"></a>10.1、Qt中的事件</h2><ul><li><p>鼠标事件</p><ul><li>鼠标进入事件  enterEvent</li><li>鼠标离开事件  leaveEvent</li><li>鼠标按下  mousePressEvent ( QMouseEvent  ev)</li><li>鼠标释放  mouseReleaseEvent</li><li>鼠标移动  mouseMoveEvent<ul><li>ev-&gt;x() x坐标  ev-&gt;y() y坐标</li><li>ev-&gt;button() 可以判断所有按键 Qt::LeftButton  Qt::RightButton</li><li>ev-&gt;buttons()判断组合按键  判断move时候的左右键  结合 &amp; 操作符</li></ul></li></ul></li><li><p>格式化字符串  QString( “ %1  %2 ” ).arg( 111 ).arg(222)</p></li><li><p>设置鼠标追踪  setMouseTracking(true);</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mylabel.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">myLabel::<span class="built_in">myLabel</span>(QWidget *parent)</span><br><span class="line">    : QLabel&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置鼠标追踪状态</span></span><br><span class="line">    <span class="built_in">setMouseTracking</span>(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标进入事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::enterEvent</span><span class="params">(QEnterEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//qDebug() &lt;&lt; &quot;鼠标进入了&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标离开事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::leaveEvent</span><span class="params">(QEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//qDebug() &lt;&lt; &quot;鼠标离开了&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标移动</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mouseMoveEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当鼠标左键按下 提示信息</span></span><br><span class="line">    <span class="comment">//if (ev-&gt;buttons() &amp; Qt::LeftButton)</span></span><br><span class="line">    &#123;</span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标移动了x = %1 y = %2 globalx = %3 globaly = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标按下</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mousePressEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 当鼠标左键按下 提示信息</span></span><br><span class="line">    <span class="comment">//if (ev-&gt;button() == Qt::LeftButton)</span></span><br><span class="line">    &#123;</span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标按下了x = %1 y = %2 globalx = %3 globaly = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标释放</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mouseReleaseEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当鼠标左键按下 提示信息</span></span><br><span class="line">    <span class="comment">//if (ev-&gt;button() == Qt::LeftButton)</span></span><br><span class="line">    &#123;</span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标释放了x = %1 y = %2 globalx = %3 globaly = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-2、-定时器1"><a href="#10-2、-定时器1" class="headerlink" title="10.2、 定时器1"></a>10.2、 定时器1</h2><p>2.1 利用事件 void  timerEvent ( QTimerEvent * ev)</p><p>2.2 启动定时器 startTimer( 1000) 毫秒单位</p><p>2.3 timerEvent 的返回值是定时器的唯一标示  可以和ev-&gt;timerId 做比较</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动定时器</span></span><br><span class="line">    id1 = <span class="built_in">startTimer</span>(<span class="number">1000</span>);    <span class="comment">// 参数1 间隔 单位 间隔</span></span><br><span class="line"></span><br><span class="line">    id2 = <span class="built_in">startTimer</span>(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写定时器事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::timerEvent</span><span class="params">(QTimerEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev-&gt;<span class="built_in">timerId</span>() == id1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// label_2每隔1秒+1</span></span><br><span class="line">        ui-&gt;label_2-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num++));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ev-&gt;<span class="built_in">timerId</span>() == id2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// label3 每隔2秒 + 1</span></span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> num2 = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// label_3每隔1秒+1</span></span><br><span class="line">        ui-&gt;label_3-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num2++));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-3、-定时器2"><a href="#10-3、-定时器2" class="headerlink" title="10.3、 定时器2"></a>10.3、 定时器2</h2><p>3.1 利用定时器类 QTimer</p><p>3.2 创建定时器对象 QTimer * timer &#x3D; new QTimer(this)</p><p>3.3 启动定时器  timer-&gt;start(毫秒)</p><p>3.4 每隔一定毫秒，发送信号  timeout  ,进行监听</p><p>3.5 暂停  timer-&gt;stop</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QTimer&gt;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定时器第二种方式</span></span><br><span class="line">    QTimer * timer = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 启动定时器</span></span><br><span class="line">    timer-&gt;<span class="built_in">start</span>(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(timer, &amp;QTimer::timeout, [=]()&#123;</span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// label_4每隔0.5秒+1</span></span><br><span class="line">        ui-&gt;label_4-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num++));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击暂停按钮，实现定时器停止</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;btn, &amp;QPushButton::clicked, [=]()&#123;</span><br><span class="line">        timer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-4、-event事件"><a href="#10-4、-event事件" class="headerlink" title="10.4、 event事件"></a>10.4、 event事件</h2><p>4.1 用途：用于事件的分发</p><p>4.2 也可以做拦截操作，不建议</p><p>4.3 bool event( QEvent * e); </p><p>4.4 返回值 如果是true 代表用户处理这个事件，不向下分发了</p><p>4.5 e-&gt;type() &#x3D;&#x3D; 鼠标按下 …</p><p>这个代码似乎有问题，没拦截成功</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过event事件分发器 拦截 鼠标按下事件</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">myLabel::event</span><span class="params">(QEvent * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 如果是鼠标按下，在event事件分发中做拦截操作</span></span><br><span class="line">    <span class="keyword">if</span> (e-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonPress || e-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonDblClick)</span><br><span class="line">    &#123;</span><br><span class="line">        QMouseEvent * ev = <span class="built_in">static_cast</span>&lt;QMouseEvent*&gt;(e);</span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标   按下了x = %1 y = %2 globalx = %3 globaly = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他事件 交给父类处理 默认处理</span></span><br><span class="line">    <span class="keyword">return</span> QLabel::<span class="built_in">event</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-5、-事件过滤器"><a href="#10-5、-事件过滤器" class="headerlink" title="10.5、 事件过滤器"></a>10.5、 事件过滤器</h2><ol><li>在程序将时间分发到事件分发器前，可以利用过滤器做拦截</li><li>步骤<ol><li>给控件安装事件过滤器</li><li>重写 eventFilter函数 （obj ， ev）</li></ol></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给label1安装事件过滤器</span></span><br><span class="line">    <span class="comment">// 步骤1,安装事件过滤器</span></span><br><span class="line">    ui-&gt;label-&gt;<span class="built_in">installEventFilter</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 步骤2 重写 eventfilter事件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写事件过滤器的事件</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Widget::eventFilter</span><span class="params">(QObject * obj, QEvent * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == ui-&gt;label)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (e-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonPress)</span><br><span class="line">        &#123;</span><br><span class="line">            QMouseEvent * ev = <span class="built_in">static_cast</span>&lt;QMouseEvent*&gt;(e);</span><br><span class="line">            QString str = <span class="built_in">QString</span>(<span class="string">&quot;事件过滤器中，鼠标按下了x = %1 y = %2 globalx = %3 globaly = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他默认处理</span></span><br><span class="line">    <span class="keyword">return</span> QWidget::<span class="built_in">eventFilter</span>(obj, e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_项目(七)-WBoard</title>
      <link href="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/"/>
      <url>/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/</url>
      
        <content type="html"><![CDATA[<h1 id="WBoard"><a href="#WBoard" class="headerlink" title="WBoard"></a>WBoard</h1><p>WBoard 是一款在 Windows 平台基于 VS+Qt 开发的一款开放源码的白板教学软件，主要用于学校和大学的交互式电子白板。 它既</p><p>可以与交互式白板一起使用，也可以在双屏幕场景中通过笔、平板显示器和光束进行使用。 主要有演示板、网页、文档和桌面四大界</p><p>面。</p><h2 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a><strong>编译环境</strong></h2><h3 id="编译器安装"><a href="#编译器安装" class="headerlink" title="编译器安装"></a><strong>编译器安装</strong></h3><p>1.安装 Visual Studio: VS2017 及以上 Qt: Qt5</p><p>2.Visual Studio 官网下载地址：<a href="https://visualstudio.microsoft.com/zh-hans/downloads/">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p><p>3.Qt5.15.2 下载地址:<a href="https://download.qt.io/official_releases/online_installers/">https://download.qt.io/official_releases/online_installers/</a></p><p>4.Visual Studio 配置 Qt 教程博客:<a href="https://blog.csdn.net/u014552102/article/details/118346113">vs2019 + Qt5.15.2 开发环境搭建_vsaddin-msvc2019-2.7.0.vsix 下载-CSDN 博客</a></p><p>我使用的是VS2022和Qt5.15.2（最好不要用Qt6，很多组件没有了）</p><h3 id="配置项目"><a href="#配置项目" class="headerlink" title="配置项目"></a><strong>配置项目</strong></h3><p>1.下载项目并打开项目工程文件（.sln）,并配置 Qt 编译环境</p><p>开源项目地址：<a href="https://github.com/sining1989/WBoard">https://github.com/sining1989/WBoard</a></p><p>项目文档借鉴B站UP主“程序员老秦”，可以在B站中练习Up主获得更多资料：<a href="https://www.bilibili.com/video/BV1dz421q7ER/?vd_source=695686cb62584e20424f907662063474">C++Qt项目推荐，简历黄金项目_哔哩哔哩_bilibili</a></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812141303403.png" alt="image-20240812141303403"></p><p>2.选择 Qt 构建项目并选择 Qt 项目设置</p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812141350200.png" alt="image-20240812141350200"></p><ol start="3"><li>查看 Qt 模块，是否含有以下模块，如没有去 Qt 安装目录找到 MaintenanceTool.exe 安装缺失模块并安装，详细安装步骤参考</li></ol><p>文献：<a href="https://www.cnblogs.com/lisongzzx/p/13861430.html">解决 “Project ERROR: Unknown module(s) in QT: webengine”以及“Your MaintenanceTool appears to be older than 3.0.2. .” 的办法 - The_Reborn - 博客园 (cnblogs.com)</a></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812141624695.png" alt="image-20240812141624695"></p><p>4.检查 Qt Version 配置与项目属性是否一致。</p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812141644864.png" alt="image-20240812141644864"></p><p>5.编译程序完成之后配置依赖，找到项目文件中的三方库 ThirdParty 文件夹，找到依赖动态库 quazipd.dll，再将 quazipd.dll 放在可执行程序下（.exe目录中）。</p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812141741174.png" alt="image-20240812141741174"></p><p>6、程序完成</p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/68747470733a2f2f692e6c6f6c692e6e65742f323032312f30392f30392f4a6a544f634572514c7332473739662e706e67.png" alt="演示版.jpg"></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/68747470733a2f2f692e6c6f6c692e6e65742f323032312f30392f30392f4b705a6a77504a62335872554579392e706e67.png" alt="网页.jpg"></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/68747470733a2f2f692e6c6f6c692e6e65742f323032312f30392f30392f4a627670595545424963586f694f682e706e67.png" alt="文档.jpg"></p><h1 id="项目模块解读"><a href="#项目模块解读" class="headerlink" title="项目模块解读"></a>项目模块解读</h1><h2 id="图形管理模块"><a href="#图形管理模块" class="headerlink" title="图形管理模块"></a>图形管理模块</h2><p>图形管理模由图形动作、图形场景、图形形状、操作委托组成。</p><p>1.图形动作管理：负责管理和控制图形对象的各种动作，例如图形的创建、移动、缩放、旋转、删除等基本操作，以及更复杂的动画效果、交互动作的设置与执行</p><p>2.图形场景管理：主要对写字板项目中的图形展示场景进行管理。包括场景的布局设置、背景颜色与样式的定义、不同图形元素在场景中的层次与排列顺序管理，以及对场景视图的缩放、平移、旋转等操作的控制。</p><p>3.图形形状管理：专注于对图形的形状进行创建、编辑和管理。涵盖了基本图形（如矩形、圆形、三角形等）的绘制与参数设置，自定义图形的绘制工具与功能，对已绘制图形的形状修改（如顶点编辑、曲线调整等），以及图形的填充、描边样式的设置与管理。</p><p>4.图形操作委托(代理)：用于处理图形操作的任务分配与权限管理。当用户发起图形操作请求时，操作委托机制会根据预设的规则和权限，将操作任务分配给相应的处理模块或组件。同时，还负责监控和管理操作的执行过程，处理可能出现的错误与异常情况，确保图形操作的安全性和稳定性。</p><h3 id="图形动作管理"><a href="#图形动作管理" class="headerlink" title="图形动作管理"></a>图形动作管理</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812163201141.png" alt="image-20240812163201141"></p><p>WBGraphicsItemActions:改基类主要用于处理图形项的各种操作和动作,定义了图形项操作的基本接口,声明了纯虚函数play用于执行操作、save用于保存操作相关的数据、actionRemoved用于处理操作被移除的情况,对应代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">WBGraphicsItemAction</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">WBGraphicsItemAction</span>(eWBGraphicsItemLinkType linkType,QObject* parent = <span class="number">0</span>);</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">play</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> QStringList <span class="title">save</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">actionRemoved</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> QString <span class="title">path</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    <span class="function">eWBGraphicsItemLinkType <span class="title">linkType</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> mLinkType;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    eWBGraphicsItemLinkType mLinkType;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>WBGraphicsItemPlayAudioAction</code>:是用于播放音频的图形项操作类,存储了音频文件的路径、媒体播放器对象等,实现了<code>play</code>方法来播放音频,实现了<code>save</code>方法来保存相关数据,定义了<code>onSourceHide</code>槽函数，可能用于处理音频源隐藏的情况。</p><p><code>WBGraphicsItemMoveToPageAction</code>:是用于移动到特定页面的图形项操作类。包含了移动页面的操作类型（如移动到首页、末页、上一页、下一页或指定页）和目标页面的索引,实现了<code>play</code>方法来执行移动操作,实现了<code>save</code>方法来保存相关信息。</p><p><code>WBGraphicsItemLinkToWebPageAction</code>:是用于链接到网页的图形项操作类。</p><p>存储了链接的网页URL。实现了<code>play</code>方法来执行打开网页的操作。实现了<code>save</code>方法来保存链接相关的数据。</p><h3 id="图形场景管理"><a href="#图形场景管理" class="headerlink" title="图形场景管理"></a>图形场景管理</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812164917169.png" alt="image-20240812164917169"></p><p>WBCoreGraphicsScene:该类是对<code>QGraphicsScene</code>的扩展,在QGraphicsScene的基础上增加接口来&#96;对图形项进行添加删除管</p><p>理和场景修改状态的跟踪功能&#96;，接口如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">WBCoreGraphicsScene</span> : <span class="keyword">public</span> QGraphicsScene</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">WBCoreGraphicsScene</span>(QObject * parent = <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">virtual</span> ~<span class="built_in">WBCoreGraphicsScene</span>();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">addItem</span><span class="params">(QGraphicsItem* item)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">removeItem</span><span class="params">(QGraphicsItem* item, <span class="type">bool</span> forceDelete = <span class="literal">false</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">deleteItem</span><span class="params">(QGraphicsItem* item)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">removeItemFromDeletion</span><span class="params">(QGraphicsItem* item)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">addItemToDeletion</span><span class="params">(QGraphicsItem *item)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">bool</span> <span class="title">isModified</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mIsModified;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">setModified</span><span class="params">(<span class="type">bool</span> pModified)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            mIsModified = pModified;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        QSet&lt;QGraphicsItem*&gt; mItemsToDelete;</span><br><span class="line"></span><br><span class="line">        <span class="type">bool</span> mIsModified;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>WBGraphicsScene:是一个自定义的图形场景类，具有丰富的功能用于<code>管理图形项</code>、<code>处理输入事件、执行绘制操作</code>等。</p><p>1.提供了多种方法用于管理<code>撤销/重做栈的状态,清除场景内容（如项目、注释等）</code>、处理输入设备的操作（按下、移动、释放。</p><p>2.添加和移除图形项等方法,<code>能够创建和添加各种类型的图形项</code>，如小部件、媒体、SVG图像、文本、组等,并且提供了一些方法用于</p><p>处理背景对象的设置和获取，以及对<code>图形项进行缩放、适应文档大小</code>等操作。</p><p>3.包含一些与绘制相关的方法，如<code>画线、画弧、画曲线</code>等，并能<code>处理橡皮擦、指针、标记圆</code>等的绘制,还能支持获取场景的视图状态、</p><p>设置渲染质量、获取依赖项、处理选择框的更新等。</p><h3 id="图形形状管理"><a href="#图形形状管理" class="headerlink" title="图形形状管理"></a>图形形状管理</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812165347876.png" alt="image-20240812165347876"></p><p>WBAbstractDrawRuler:这个抽象类为具体的绘制尺子类提供了基本的框架和一些通用的操作，子类需要实现特定于场景和旋转等操</p><p>作的细节。定义了一些虚函数，如<code>StartLine</code>、<code>DrawLine</code>、<code>EndLine</code>，用于开始、绘制和结束线条。<code>paint</code>方法用于绘制</p><p>操作。包含一些纯虚函数，如<code>scene</code>、<code>rotateAroundCenter</code>等，需要子类具体实现。有一些保护成员变量用于控制显示、存储</p><p>SVG项、比例等信息。定义了一系列的辅助函数用于获取不同的光标、颜色、字体等。包含一些静态常量用于颜色、边距、角度单位</p><p>等的定义，具体定义如下图。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">WBAbstractDrawRuler</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">WBAbstractDrawRuler</span>();</span><br><span class="line">    ~<span class="built_in">WBAbstractDrawRuler</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">create</span><span class="params">(QGraphicsItem&amp; item)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">StartLine</span><span class="params">(<span class="type">const</span> QPointF&amp; position, qreal width)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DrawLine</span><span class="params">(<span class="type">const</span> QPointF&amp; position, qreal width)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">EndLine</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">paint</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> WBGraphicsScene* <span class="title">scene</span><span class="params">()</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">rotateAroundCenter</span><span class="params">(qreal angle)</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> QPointF <span class="title">rotationCenter</span><span class="params">()</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> QRectF <span class="title">closeButtonRect</span><span class="params">()</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">paintGraduations</span><span class="params">(QPainter *painter)</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> mShowButtons;</span><br><span class="line">    QGraphicsSvgItem* mCloseSvgItem;</span><br><span class="line">    qreal mAntiScaleRatio;</span><br><span class="line"></span><br><span class="line">    QPointF startDrawPosition;</span><br><span class="line"></span><br><span class="line">    <span class="function">QCursor <span class="title">moveCursor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QCursor <span class="title">rotateCursor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QCursor <span class="title">closeCursor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QCursor <span class="title">drawRulerLineCursor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">QColor  <span class="title">drawColor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QColor  <span class="title">middleFillColor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QColor  <span class="title">edgeFillColor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function">QFont   <span class="title">font</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sLightBackgroundEdgeFillColor;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sLightBackgroundMiddleFillColor;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sLightBackgroundDrawColor;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sDarkBackgroundEdgeFillColor;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sDarkBackgroundMiddleFillColor;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> QColor sDarkBackgroundDrawColor;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sLeftEdgeMargin;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sDegreeToQtAngleUnit;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sRotationRadius;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sFillTransparency;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sDrawTransparency;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> sRoundingRadius;</span><br><span class="line">    qreal sPixelsPerCentimeter;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>WBGraphicsTriangle:用于在图形场景中创建和操作三角形图形项，能够处理各种交互操作、方向设置、绘制细节等，并具有复制和</p><p>自定义属性的功能。</p><p>1.重写了一系列图形项相关的方法，如绘制（<code>paint</code>）、形状计算（<code>shape</code>）、鼠标事件处理（<code>mousePressEvent</code>等）、旋转相</p><p>关方法等。</p><p>2.包含了一些私有方法用于计算内部的点、变换、游标更新、边界框等。定义了一些私有成员变量来存储状态、方向、SVG项、点的</p><p>坐标等。定义了一些常量用于控制图形的默认值和一些尺寸限制。</p><p>WBGraphicsRuler:用于在图形场景中创建和操作一个尺子图形项，能够响应各种交互事件并进行相应的绘制和状态更新。</p><p>1.重写了一些方法来<code>处理线条的起始、绘制和结束</code>，以及各种图形项相关的<code>事件处理方法（如鼠标事件、悬停事件）和绘制方法</code>。</p><p>2.包含一些私有成员变量来表示状态（如是否正在调整大小、旋转）和一些SVG项、游标等。定义了一些私有方法用于内部的绘制</p><p>和操作，如填充背景、绘制旋转中心、更新调整大小的游标等。</p><p>3.定义了一些常量用于控制默认矩形和一些长度限制。</p><p>WBGraphicsProtractor:用在图形场景中创建和操作一个量角器图形项，能够处理各种交互操作并进行相应的绘制和状态更新。</p><p>重写了多种图形项相关的方法，包括绘制（<code>paint</code>）、处理图形项变化（<code>itemChange</code>）、鼠标事（<code>mousePressEvent</code>、</p><p><code>mouseMoveEvent</code>、<code>mouseReleaseEvent</code>等）以及形状计算（<code>shape</code>、<code>boundingRect</code>）等。</p><p>2.包含一些私有方法用于处理内部的绘制细节（如绘制按钮、角度标记）、确定工具类型、计算反缩放等。</p><p>3.定义了一些私有成员变量来存储工具状态、角度值、缩放因子、SVG项等。包含一些常量用于控制绘制的透明度和默认的矩形范围。</p><h3 id="图形操作委托"><a href="#图形操作委托" class="headerlink" title="图形操作委托"></a>图形操作委托</h3><h4 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h4><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170412309.png" alt="image-20240812170412309" style="zoom:200%;"><p>WBGraphicsItemDelegate:主要用于处理图形项的委托操作和相关控制,充当了图形项的代理，负责处理与图形项相关的各种交互操</p><p>作、状态管理和控制元素的显示与操作。</p><p>1.提供了一系列方法用于创建、释放和显示控制元素，处理各种鼠标、键盘和悬停事件，处理图形项的变化，执行撤销操作，以及处</p><p>理图形项的锁定、显示隐藏、复制、顺序调整等操作。</p><p>2.包含了一些信号，用于通知显示状态和锁定状态的改变。公共槽函数用于执行移除、显示菜单、显示隐藏、锁定、复制、调整顺序、</p><p>处理缩放变化等操作。</p><p>3.保护方法用于构建和释放按钮、装饰菜单、更新菜单动作状态，以及处理递归的显示隐藏和锁定操作。私有方法用于更新框架、按</p><p>钮和相关数据。</p><p>3.成员变量用于存储被委托的图形项、各种按钮、菜单、框架、变换信息、标志、拖放相关的数据等。</p><p>WBGraphicsWidgetItemDelegate:是<code>WBGraphicsItemDelegate</code>的派生类，专门用于处理<code>WBGraphicsWidgetItem</code>的委托</p><p>操作,<code>WBGraphicsWidgetItem</code>提供了特定的委托操作，包括菜单装饰、操作状态更新、移除处理以及特定的操作响应。</p><p><code>decorateMenu</code>：用于为相关菜单添加特定于小部件的操作选项。</p><p>2.<code>updateMenuActionState</code>：用于更新菜单中操作的状态（例如是否可用、是否选中等）。</p><p>3.<code>remove</code>：处理小部件的移除操作，可能考虑是否支持撤销。</p><p>WBGraphicsTextItemDelegate:是<code>WBGraphicsItemDelegate</code>的派生类，专门用于处理<code>WBGraphicsTextItem</code>的委托操作。</p><p><code>WBGraphicsTextItem</code>提供了更具体和定制化的委托操作，包括与文本编辑相关的各种功能和交互处理。</p><p>1.提供了判断文本是否可编辑、缩放文本大小、重新着色等方法。</p><p>2.重写了<code>itemChange</code>方法以处理图形项的变化。实现了创建控件、处理槽函数（如内容改变、设置可编辑性、移除等）。</p><p>3.保护方法用于装饰菜单、更新菜单动作状态、释放按钮以及处理鼠标和键盘事件。&gt;3.私有方法和成员变量用于处理字体选择、颜色</p><p>选择、文本大小调整、对齐按钮状态更新、处理选择数据、创建默认字体等操作。</p><p>WBGraphicsMediaItemDelegate:是<code>WBGraphicsItemDelegate</code>的派生类，用于处理<code>WBGraphicsMediaItem</code>的委托操作。</p><p><code>WBGraphicsMediaItem</code>提供了委托操作，包括处理鼠标事件、媒体状态变化、操作按钮的构建和响应，以及工具栏的显示和隐藏</p><p>控制。</p><p>1.公共槽函数：<code>toggleMute</code>：用于切换静音状态。<code>updateTicker</code>：可能用于更新时间显示。<code>showHide</code>：显示或隐藏相关</p><p>元素。<code>mediaStatusChanged</code>和<code>mediaStateChanged</code>：用于响应媒体的状态变化。</p><p>2.保护槽函数：<code>remove</code>：执行移除操作。<code>togglePlayPause</code>：切换播放&#x2F;暂停状态。<code>updatePlayPauseState</code>：更新播放&#x2F;暂停</p><p>的状态显示。<code>totalTimeChanged</code>：当总时间改变时进行处理。<code>hideToolBar</code>：隐藏工具栏。</p><p>3.保护方法<code>buildButtons</code>用于构建相关的按钮。</p><p>4.成员变量：<code>mPlayPauseButton</code>、<code>mStopButton</code>、<code>mMuteButton</code>：与播放&#x2F;暂停、停止、静音操作相关的按钮。</p><p><code>mMediaControl</code>：可能用于媒体控制的相关组件。</p><p><code>m_iToolBarShowingInterval</code>：工具栏显示的时间间隔。</p><p><code>mToolBarShowTimer</code>：工具栏显示的定时器。</p><p>5.私有槽函数：<code>freeze</code>：处理小部件的冻结操作。<code>pin</code>：可能用于执行将小部件固定或类似的操作。</p><p>WBGraphicsGroupContainerItemDelegate:类是WBGraphicsItemDelegate的派生类，用于处理<code>WBGraphicsGroupContainerItem</code>的委托操作。<code>WBGraphicsGroupContainerItem</code>提供了特定的委托操作，包括菜单装饰、按</p><p>钮管理和鼠标事件处理，以及实现了销毁分组的功能。</p><p><code>decorateMenu</code>用于装饰相关的菜单。<code>buildButtons</code>用于构建特定的按钮。<code>freeButtons</code>用于释放按钮相关的资源。重写了鼠标事件处理方法，用于处理在分组容器上的鼠标操作。destroyGroup<code>可能用于执行销毁分组的操作。</code>mDestroyGroupButton&#96;用于存储与销毁分组操作相关的按钮</p><p>WBGraphicsCurtainItemDelegate:用于为<code>WBGraphicsCurtainItem</code>提供特定的事件处理和操作逻辑。</p><h4 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h4><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170549132.png" alt="image-20240812170549132"></p><h4 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h4><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170625634.png" alt="image-20240812170625634"></p><h2 id="窗口管理模块"><a href="#窗口管理模块" class="headerlink" title="窗口管理模块"></a>窗口管理模块</h2><h3 id="窗口面板"><a href="#窗口面板" class="headerlink" title="窗口面板"></a>窗口面板</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170702827.png" alt="image-20240812170702827"></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170718954.png" alt="image-20240812170718954"></p><h3 id="窗口调色板"><a href="#窗口调色板" class="headerlink" title="窗口调色板"></a>窗口调色板</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170730187.png" alt="image-20240812170730187"></p><h3 id="编辑控件"><a href="#编辑控件" class="headerlink" title="编辑控件"></a>编辑控件</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170740043.png" alt="image-20240812170740043"></p><h2 id="文档管理模块"><a href="#文档管理模块" class="headerlink" title="文档管理模块"></a>文档管理模块</h2><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170807700.png" alt="image-20240812170807700"></p><h3 id="文档导出"><a href="#文档导出" class="headerlink" title="文档导出"></a>文档导出</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170823986.png" alt="image-20240812170823986"></p><h3 id="文档加载"><a href="#文档加载" class="headerlink" title="文档加载"></a>文档加载</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170840915.png" alt="image-20240812170840915"></p><h2 id="动作响应管理"><a href="#动作响应管理" class="headerlink" title="动作响应管理"></a>动作响应管理</h2><h3 id="撤回操作"><a href="#撤回操作" class="headerlink" title="撤回操作"></a>撤回操作</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170916443.png" alt="image-20240812170916443"></p><h3 id="键盘操作"><a href="#键盘操作" class="headerlink" title="键盘操作"></a>键盘操作</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170926642.png" alt="image-20240812170926642"></p><h2 id="偏好设置与文档操作接口"><a href="#偏好设置与文档操作接口" class="headerlink" title="偏好设置与文档操作接口"></a>偏好设置与文档操作接口</h2><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170936707.png" alt="image-20240812170936707"></p><h2 id="网络模块"><a href="#网络模块" class="headerlink" title="网络模块"></a>网络模块</h2><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812170945386.png" alt="image-20240812170945386"></p><hr><h1 id="项目流程"><a href="#项目流程" class="headerlink" title="项目流程"></a>项目流程</h1><p>WBoard项目使用典型的<code>MVC设计模式</code>作为软件开发中的架构模式。</p><ul><li><p>Model（模型）：</p><ul><li>负责处理数据和业务逻辑。</li><li>包含数据的存储、检索、更新和验证等操作。</li></ul></li><li><p>View（视图）：</p><ul><li>负责数据的展示和用户交互界面。</li><li>它以用户友好的方式呈现Model中的数据。</li></ul></li><li><p>Controller（控制器）：</p><ul><li>作为Model和View之间的桥梁。</li><li>接收用户的输入请求，处理请求并调用相应的Model方法进行数据操作，然后选择合适的View来呈现结果。</li></ul></li></ul><h2 id="程序运行流程"><a href="#程序运行流程" class="headerlink" title="程序运行流程"></a>程序运行流程</h2><ol><li>项目入口点，从 main函数 进入之后，创建 <code>WBApplication</code> 实例，通过<code>WBApplication</code>实例对象初始化主程序。</li><li><code>WBApplication</code>初始化期间会创建<code>WBMainWindow</code>主窗口开始进行子窗口布局，初始化视图(View)层，再依次创建控制层对象(Controller)<code>WBBoardController</code>、<code>WBWebController</code>、<code>WBPreferencesController</code>、<code>WBApplicationController</code>、<code>WBDocumentController</code>分别控制程序面板、网页面板、偏好设置面板、应用主程序、文档管理。</li><li>创建完成之后，会在<code>控制层中创建模型层(Model)来进行数据管理</code>，处理模型数据<code>通过代理模式更新视图</code>。如下图所示。</li></ol><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812143121539.png" alt="image-20240812143121539"></p><h2 id="程序主控制器及数据模型"><a href="#程序主控制器及数据模型" class="headerlink" title="程序主控制器及数据模型"></a>程序主控制器及数据模型</h2><h3 id="一、白板控制器"><a href="#一、白板控制器" class="headerlink" title="一、白板控制器"></a>一、白板控制器</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812145353312.png" alt="image-20240812145353312"></p><h3 id="二、网页控制器"><a href="#二、网页控制器" class="headerlink" title="二、网页控制器"></a>二、网页控制器</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812145403310.png" alt="image-20240812145403310"></p><h3 id="三、偏好设置控制器"><a href="#三、偏好设置控制器" class="headerlink" title="三、偏好设置控制器"></a>三、偏好设置控制器</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812145413031.png" alt="image-20240812145413031"></p><h3 id="四、文档管理器"><a href="#四、文档管理器" class="headerlink" title="四、文档管理器"></a>四、文档管理器</h3><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812145423135.png" alt="image-20240812145423135"></p><h2 id="项目亮点"><a href="#项目亮点" class="headerlink" title="项目亮点"></a>项目亮点</h2><p><strong>MVC架构</strong></p><p><img src="/2024/08/08/Qt/Qt_%E9%A1%B9%E7%9B%AE(%E4%B8%83)/image-20240812145502334.png" alt="image-20240812145502334"></p><p>程序怎么更新数据模型，直接调用？回调函数？观察者模式？消息队列？</p><p>答案是：WBoard通过代理模型进行模型数据更新。通过代理更新数据模型具有以下几个显著的好处：</p><ul><li><p><strong>解耦和封装</strong>：</p><ul><li>代理将数据更新的逻辑与数据模型的核心逻辑分离，减少了直接对模型的依赖，增强了系统的封装性。</li></ul></li><li><p><strong>增强安全性</strong>：</p><ul><li>代理可以对更新操作进行额外的权限检查和访问控制，防止未经授权的访问和修改。</li></ul></li><li><p><strong>统一的更新接口</strong>：</p><ul><li>为不同的数据源或更新方式提供了统一的接口，便于管理和维护。</li></ul></li><li><p><strong>可扩展性</strong>：</p><ul><li>当需要添加新的更新规则、处理逻辑或支持新的数据来源时，只需修改代理的实现，而无需改动数据模型本身。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT_案例(六)-翻金币</title>
      <link href="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/"/>
      <url>/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h1><p>​翻金币项目是一款经典的益智类游戏，我们需要将金币都翻成同色，才视为胜利。首先，开始界面如下：</p><p>​<img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps1.jpg" alt="img"></p><p>点击start按钮，进入下层界面，选择关卡：</p><p>​<img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps2.jpg" alt="img"></p><p>在这里我们设立了20个关卡供玩家选择，假设我们点击了第1关，界面如下：</p><p>​<img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps3.jpg" alt="img"></p><p>如果想要赢取胜利，我们需要点击上图中红色方框选取的区域，翻动其上下左右的金币，然后当所有金币都变为金色，视为胜利，胜利界面如下：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps4.jpg" alt="img"> </p><h1 id="二、项目基本配置"><a href="#二、项目基本配置" class="headerlink" title="二、项目基本配置"></a>二、项目基本配置</h1><h2 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h2><p>打开Qt-Creator，创建项目：注意名称不要包含空格和回车，路径不要有中文</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps5.jpg" alt="img"> </p><p>类信息中，选择基类为QMainWindow，类名称为 MainScene，代表着主场景。</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps6.jpg" alt="img"> </p><p>点击完成，创建出项目：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps7.jpg" alt="img"> </p><p>创建的项目结构如下：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps8.jpg" alt="img"> </p><h2 id="2-2-添加资源"><a href="#2-2-添加资源" class="headerlink" title="2.2 添加资源"></a>2.2 添加资源</h2><p>将资源添加到当前项目下</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240807142308380.png" alt="image-20240807142308380"></p><p>然后创建.qrc文件</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps10.jpg" alt="img"> </p><p>进入编辑模式，添加前缀 “&#x2F;” ，添加文件</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps11.jpg" alt="img"> </p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps12.jpg" alt="img"> </p><p>将所有资源文件进行添加</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps13.jpg" alt="img"> </p><p>至此将所有需要的资源添加到了本项目中。</p><h1 id="三、主场景"><a href="#三、主场景" class="headerlink" title="三、主场景"></a>三、主场景</h1><h2 id="3-1-设置游戏主场景配置"><a href="#3-1-设置游戏主场景配置" class="headerlink" title="3.1 设置游戏主场景配置"></a>3.1 设置游戏主场景配置</h2><p>点击mainscene.ui文件，设计其菜单栏如下：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps14.jpg" alt="img"> </p><p>设计“退出”菜单项，objectName为 actionQuit，  text 为 退出；</p><p>移除自带的工具栏与状态栏</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps15.jpg" alt="img"> </p><p>回到MainScene.cpp文件，进入构造函数中，进行场景的基本配置，代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MainScene::<span class="built_in">MainScene</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainScene)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置固定的大小</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(<span class="number">320</span>, <span class="number">588</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置应用图片</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowIcon</span>(<span class="built_in">QPixmap</span>(<span class="string">&quot;:/res/Coin0001.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置窗口标题</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;老帮主带你翻金币&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps16.jpg" alt="img"> </p><p>实现点击开始，退出游戏功能，代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MainScene::<span class="built_in">MainScene</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainScene)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击退出，退出程序</span></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;actionQuit, &amp;QAction::triggered, [=]()&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">close</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-设置背景图片"><a href="#3-2-设置背景图片" class="headerlink" title="3.2 设置背景图片"></a>3.2 设置背景图片</h2><p>重写MainScene的PaintEvent事件，并添加一下代码，绘制背景图片</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPixmap&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainScene::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 创建画家，指定绘图设备</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建QPixmap对象</span></span><br><span class="line">    QPixmap pix;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载图片</span></span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/PlayLevelSceneBg.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制背景图</span></span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>(), pix);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载标题</span></span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/Title.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缩放照片</span></span><br><span class="line">    pix = pix.<span class="built_in">scaled</span>(pix.<span class="built_in">width</span>() * <span class="number">0.5</span>, pix.<span class="built_in">height</span>() * <span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制标题</span></span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="number">10</span>, <span class="number">30</span>, pix.<span class="built_in">width</span>(), pix.<span class="built_in">height</span>(), pix);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行效果如图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps17.jpg" alt="img"> </p><h2 id="3-3-创建开始按钮"><a href="#3-3-创建开始按钮" class="headerlink" title="3.3 创建开始按钮"></a>3.3 创建开始按钮</h2><p>开始按钮点击后有弹跳效果，这个效果是我们利用自定义控件实现的（QPushButton不会自带这类特效），我们可以自己封装出一个按钮控件，来实现这些效果。</p><p>​创建MyPushButton，继承与QPushButton</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps18.jpg" alt="img"> </p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps19.jpg" alt="img"> </p><p>点击完成。</p><p>修改MyPushButton的父类</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps20.jpg" alt="img"> </p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240807144645840.png" alt="image-20240807144645840"></p><p>提供MyPushButton的构造的重载版本，可以让MyPushButton提供正常显示的图片以及按下后显示的图片</p><p>代码如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYPUSHBUTTON_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYPUSHBUTTON_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPushButton</span> : <span class="keyword">public</span> QPushButton</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">MyPushButton</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// normalImg 正常显示的图片</span></span><br><span class="line">    <span class="comment">// pressImg 按下后显示的图片，默认为空</span></span><br><span class="line">    <span class="built_in">MyPushButton</span>(QString normalImg, QString pressImg = <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QString normalImgPath;  <span class="comment">// 默认显示图片路径</span></span><br><span class="line">    QString pressedImgPath; <span class="comment">// 按下后显示图片路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYPUSHBUTTON_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现的重载版本MyPushButton构造函数代码如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">MyPushButton::<span class="built_in">MyPushButton</span>(QString normalImg, QString pressImg)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;normalImgPath = normalImg;</span><br><span class="line">    <span class="keyword">this</span>-&gt;pressedImgPath = pressImg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建QPixmap对象</span></span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    <span class="comment">// 判断是否能够正常加载显示的图片，若不能提示失败</span></span><br><span class="line">    <span class="type">bool</span> ret = pixmap.<span class="built_in">load</span>(normalImgPath);</span><br><span class="line">    <span class="keyword">if</span> (!ret)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; normalImg &lt;&lt; <span class="string">&quot;加载图片失败&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置图片的固定尺寸</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置不规则图片的样式表</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置图标</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置图标大小</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回到MainScene的构造函数中，创建开始按钮</p><p>&#x2F;&#x2F;创建开始按钮</p><p>  MyPushButton * startBtn &#x3D; new MyPushButton(“:&#x2F;res&#x2F;MenuSceneStartButton.png”);</p><p>  startBtn-&gt;setParent(this);</p><p>  startBtn-&gt;move(this-&gt;width()*0.5-startBtn-&gt;width()*0.5,this-&gt;height()*0.7);</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MainScene::<span class="built_in">MainScene</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainScene)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建开始按钮</span></span><br><span class="line">    MyPushButton * startBtn = <span class="keyword">new</span> <span class="built_in">MyPushButton</span>(<span class="string">&quot;:/res/MenuSceneStartButton.png&quot;</span>);</span><br><span class="line">    startBtn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">    startBtn-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">width</span>() * <span class="number">0.5</span> - startBtn-&gt;<span class="built_in">width</span>() * <span class="number">0.5</span>, <span class="keyword">this</span>-&gt;<span class="built_in">height</span>() * <span class="number">0.7</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps21.jpg" alt="img"> </p><p>不规则的开始按钮添加完成。</p><h2 id="3-4-开始按钮跳跃特效实现"><a href="#3-4-开始按钮跳跃特效实现" class="headerlink" title="3.4 开始按钮跳跃特效实现"></a>3.4 开始按钮跳跃特效实现</h2><p>连接信号槽，监听开始按钮点击</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听点击事件，执行特效</span></span><br><span class="line"><span class="built_in">connect</span>(startBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">    startBtn-&gt;<span class="built_in">zoom1</span>();  <span class="comment">// 向下跳跃</span></span><br><span class="line">    startBtn-&gt;<span class="built_in">zoom2</span>();  <span class="comment">// 向上跳跃</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>zoom1与zoom2 为MyPushButton中扩展的特效代码，具体如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyPushButton::zoom1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 创建动画对象</span></span><br><span class="line">    QPropertyAnimation * animation1 = <span class="keyword">new</span> <span class="built_in">QPropertyAnimation</span>(<span class="keyword">this</span>, <span class="string">&quot;geometry&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置事件间隔，单位毫秒</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setDuration</span>(<span class="number">200</span>);</span><br><span class="line">    <span class="comment">// 设置起始位置</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setStartValue</span>(<span class="built_in">QRect</span>(<span class="keyword">this</span>-&gt;<span class="built_in">x</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">y</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    <span class="comment">// 创建结束位置</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setEndValue</span>(<span class="built_in">QRect</span>(<span class="keyword">this</span>-&gt;<span class="built_in">x</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">y</span>() + <span class="number">10</span>, <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    <span class="comment">// 设置缓和曲线,QEasingCurve::OutBounce为弹跳效果</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setEasingCurve</span>(QEasingCurve::OutBounce);</span><br><span class="line">    <span class="comment">// 开始执行动画</span></span><br><span class="line">    animation1-&gt;<span class="built_in">start</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyPushButton::zoom2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 创建动画对象</span></span><br><span class="line">    QPropertyAnimation * animation1 = <span class="keyword">new</span> <span class="built_in">QPropertyAnimation</span>(<span class="keyword">this</span>, <span class="string">&quot;geometry&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置事件间隔，单位毫秒</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setDuration</span>(<span class="number">200</span>);</span><br><span class="line">    <span class="comment">// 设置起始位置</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setStartValue</span>(<span class="built_in">QRect</span>(<span class="keyword">this</span>-&gt;<span class="built_in">x</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">y</span>()<span class="number">+10</span>, <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    <span class="comment">// 创建结束位置</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setEndValue</span>(<span class="built_in">QRect</span>(<span class="keyword">this</span>-&gt;<span class="built_in">x</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">y</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    <span class="comment">// 设置缓和曲线,QEasingCurve::OutBounce为弹跳效果</span></span><br><span class="line">    animation1-&gt;<span class="built_in">setEasingCurve</span>(QEasingCurve::OutBounce);</span><br><span class="line">    <span class="comment">// 开始执行动画</span></span><br><span class="line">    animation1-&gt;<span class="built_in">start</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行代码，点击按钮，测试弹跳效果。</p><h2 id="3-5-创建选择关卡场景"><a href="#3-5-创建选择关卡场景" class="headerlink" title="3.5 创建选择关卡场景"></a>3.5 创建选择关卡场景</h2><p>点击开始按钮后，进入选择关卡场景。</p><p>首先我们先创建选择关卡场景，添加新的C++文件</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps22.jpg" alt="img"> </p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps23.jpg" alt="img"> </p><p>类名为ChooseLevelScene 选择基类为QMainWindow，点击下一步，然后点击完成。</p><h2 id="3-6-点击开始按钮进入选择关卡场景"><a href="#3-6-点击开始按钮进入选择关卡场景" class="headerlink" title="3.6 点击开始按钮进入选择关卡场景"></a>3.6 点击开始按钮进入选择关卡场景</h2><p>目前点击主场景的开始按钮，只有弹跳特效，但是我们还需要有功能上的实现，特效结束后，我们应该进入选择关卡场景</p><p>​</p><p>​在MainScene.h中 保存ChooseScene选择关卡场景对象</p><p>​在zoom1和zoom2特效后，延时0.5秒，进入选择关卡场景，代码如下</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mypushbutton.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;chooselevelscene.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">MainScene::<span class="built_in">MainScene</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainScene)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 选择关卡场景</span></span><br><span class="line">    ChooseLevelScene * chooseScene = <span class="keyword">new</span> ChooseLevelScene;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听点击事件，执行特效</span></span><br><span class="line">    <span class="built_in">connect</span>(startBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">        startBtn-&gt;<span class="built_in">zoom1</span>();  <span class="comment">// 向下跳跃</span></span><br><span class="line">        startBtn-&gt;<span class="built_in">zoom2</span>();  <span class="comment">// 向上跳跃</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 延时0.5秒后，进入选择场景</span></span><br><span class="line">        QTimer::<span class="built_in">singleShot</span>(<span class="number">500</span>, <span class="keyword">this</span>, [=]()&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">            chooseScene-&gt;<span class="built_in">show</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps24.jpg" alt="img"> </p><p>测试点击开始，执行特效后延时0.5秒进入选择关卡场景</p><h1 id="四、选择关卡场景"><a href="#四、选择关卡场景" class="headerlink" title="四、选择关卡场景"></a>四、选择关卡场景</h1><h2 id="4-1-场景基本设置"><a href="#4-1-场景基本设置" class="headerlink" title="4.1 场景基本设置"></a>4.1 场景基本设置</h2><p>​选择关卡构造函数如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;chooselevelscene.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenu&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QAction&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenuBar&gt;</span></span></span><br><span class="line"></span><br><span class="line">ChooseLevelScene::<span class="built_in">ChooseLevelScene</span>(QWidget *parent)</span><br><span class="line">    : QMainWindow&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置固定的大小</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(<span class="number">320</span>, <span class="number">588</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置图标</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowIcon</span>(<span class="built_in">QPixmap</span>(<span class="string">&quot;:/res/Coin0001.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置窗口标题</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;选择关卡&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建菜单栏</span></span><br><span class="line">    QMenuBar * bar = <span class="keyword">this</span>-&gt;<span class="built_in">menuBar</span>();</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setMenuBar</span>(bar);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建开始菜单</span></span><br><span class="line">    QMenu * startMenu = bar-&gt;<span class="built_in">addMenu</span>(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建按钮菜单项</span></span><br><span class="line">    QAction * quitAction = startMenu-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;推出&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击退出，退出游戏</span></span><br><span class="line">    <span class="built_in">connect</span>(quitAction, &amp;QAction::triggered, [=]()&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">close</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  &#x2F;&#x2F;设置窗口固定大小</p><p>  this-&gt;setFixedSize(320,588);</p><p>  &#x2F;&#x2F;设置图标</p><p>  this-&gt;setWindowIcon(QPixmap(“:&#x2F;res&#x2F;Coin0001.png”));</p><p>  &#x2F;&#x2F;设置标题</p><p>  this-&gt;setWindowTitle(“选择关卡”);</p><p>  &#x2F;&#x2F;创建菜单栏</p><p>  QMenuBar * bar &#x3D; this-&gt;menuBar();</p><p>  this-&gt;setMenuBar(bar);</p><p>  &#x2F;&#x2F;创建开始菜单</p><p>  QMenu * startMenu &#x3D; bar-&gt;addMenu(“开始”);</p><p>  &#x2F;&#x2F;创建按钮菜单项</p><p>  QAction * quitAction &#x3D; startMenu-&gt;addAction(“退出”);</p><p>  &#x2F;&#x2F;点击退出 退出游戏</p><p>  connect(quitAction,&amp;QAction::triggered,<a href>&#x3D;</a>{this-&gt;close();});</p><p>运行效果如图：</p><p>​<img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps25.jpg" alt="img"></p><h2 id="4-2-背景设置"><a href="#4-2-背景设置" class="headerlink" title="4.2 背景设置"></a>4.2 背景设置</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChooseLevelScene::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    QPixmap pix;</span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/OtherSceneBg.png&quot;</span>);</span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>(), pix);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载标题</span></span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/Title.png&quot;</span>);</span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="keyword">this</span>-&gt;<span class="built_in">width</span>() * <span class="number">0.5</span> - pix.<span class="built_in">width</span>() * <span class="number">0.5</span>, <span class="number">30</span>, pix.<span class="built_in">width</span>(), pix.<span class="built_in">height</span>(), pix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-创建返回按钮"><a href="#4-3-创建返回按钮" class="headerlink" title="4.3 创建返回按钮"></a>4.3 创建返回按钮</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ChooseLevelScene::<span class="built_in">ChooseLevelScene</span>(QWidget *parent)</span><br><span class="line">    : QMainWindow&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 返回按钮</span></span><br><span class="line">    MyPushButton *closeBtn = <span class="keyword">new</span> <span class="built_in">MyPushButton</span>(<span class="string">&quot;:/res/BackButton.png&quot;</span>, <span class="string">&quot;:/res/BackButtonSelected.png&quot;</span>);</span><br><span class="line">    closeBtn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">    closeBtn-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">width</span>() - closeBtn-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>() - closeBtn-&gt;<span class="built_in">height</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击返回</span></span><br><span class="line">    <span class="built_in">connect</span>(closeBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;点击了返回按钮&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回按钮是有正常显示图片和点击后显示图片的两种模式，所以我们需要重写MyPushButton中的 MousePressEvent和MouseReleaseEvent</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 鼠标点击事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyPushButton::mousePressEvent</span><span class="params">(QMouseEvent * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 传入的按下图片不为空 说明需要有按下状态，切换图片</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pressedImgPath != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QPixmap pixmap;</span><br><span class="line">        <span class="type">bool</span> ret = pixmap.<span class="built_in">load</span>(pressedImgPath);</span><br><span class="line">        <span class="keyword">if</span> (!ret)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; pressedImgPath &lt;&lt; <span class="string">&quot;加载图片失败!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交给父类执行按下事件</span></span><br><span class="line">    <span class="keyword">return</span> QPushButton::<span class="built_in">mousePressEvent</span>(e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 鼠标释放事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyPushButton::mouseReleaseEvent</span><span class="params">(QMouseEvent *e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 传入的按下图片不为空 说明需要有按下状态，切换成初始图片</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pressedImgPath != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QPixmap pixmap;</span><br><span class="line">        <span class="type">bool</span> ret = pixmap.<span class="built_in">load</span>(normalImgPath);</span><br><span class="line">        <span class="keyword">if</span> (!ret)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; pressedImgPath &lt;&lt; <span class="string">&quot;加载图片失败!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交给父类执行按下事件</span></span><br><span class="line">    <span class="keyword">return</span> QPushButton::<span class="built_in">mouseReleaseEvent</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实现返回按钮的功能</strong></p><p>在这里我们点击返回后，延时0.5后隐藏自身，并且发送自定义信号，告诉外界自身已经选择了返回按钮。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ChooseLevelScene::<span class="built_in">ChooseLevelScene</span>(QWidget *parent)</span><br><span class="line">    : QMainWindow&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">// 点击返回 发送信号</span></span><br><span class="line">    <span class="built_in">connect</span>(closeBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">        QTimer::<span class="built_in">singleShot</span>(<span class="number">500</span>, <span class="keyword">this</span>, [=]()&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">            <span class="comment">// 触发自定义信号，关闭自身，该信号写道signals下做声明</span></span><br><span class="line">            emit <span class="keyword">this</span>-&gt;<span class="built_in">chooseSceneBack</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在主场景MainScene中 点击开始按钮显示选择关卡的同时，监听选择关卡的返回按钮消息</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MainScene::<span class="built_in">MainScene</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainScene)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 选择窗口的返回按钮功能实现，槽函数</span></span><br><span class="line">    <span class="built_in">connect</span>(chooseScene, &amp;ChooseLevelScene::chooseSceneBack, [=]()&#123;</span><br><span class="line">        chooseScene-&gt;<span class="built_in">hide</span>();</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">show</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试主场景与选择关卡场景的切换功能。</p><h2 id="4-4-创建选择关卡按钮"><a href="#4-4-创建选择关卡按钮" class="headerlink" title="4.4 创建选择关卡按钮"></a>4.4 创建选择关卡按钮</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ChooseLevelScene::<span class="built_in">ChooseLevelScene</span>(QWidget *parent)</span><br><span class="line">    : QMainWindow&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建关卡按钮</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        MyPushButton * menuBtn = <span class="keyword">new</span> <span class="built_in">MyPushButton</span>(<span class="string">&quot;:/res/LevelIcon.png&quot;</span>);</span><br><span class="line">        menuBtn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">        menuBtn-&gt;<span class="built_in">move</span>(<span class="number">25</span> + (i % <span class="number">4</span>) * <span class="number">70</span>, <span class="number">130</span> + (i/<span class="number">4</span>) * <span class="number">70</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按钮上显示的文字</span></span><br><span class="line">        QLabel * label = <span class="keyword">new</span> QLabel;</span><br><span class="line">        label-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">        label-&gt;<span class="built_in">setFixedSize</span>(menuBtn-&gt;<span class="built_in">width</span>(), menuBtn-&gt;<span class="built_in">height</span>());</span><br><span class="line">        label-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(i<span class="number">+1</span>));</span><br><span class="line">        label-&gt;<span class="built_in">setAlignment</span>(Qt::AlignHCenter |Qt::AlignVCenter);    <span class="comment">// 设置居中</span></span><br><span class="line">        label-&gt;<span class="built_in">move</span>(<span class="number">25</span> + (i % <span class="number">4</span>) * <span class="number">70</span>, <span class="number">130</span> + (i / <span class="number">4</span>) * <span class="number">70</span>);</span><br><span class="line">        label-&gt;<span class="built_in">setAttribute</span>(Qt::WA_TransparentForMouseEvents, <span class="literal">true</span>);    <span class="comment">// 鼠标事件穿透</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如果：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps26.jpg" alt="img"> </p><h2 id="4-5-创建翻金币场景"><a href="#4-5-创建翻金币场景" class="headerlink" title="4.5 创建翻金币场景"></a>4.5 创建翻金币场景</h2><p>点击关卡按钮后，会进入游戏的核心场景，也就是翻金币的场景，首先先创建出该场景的.h和.cpp文件</p><p>创建PlayScene</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps27.jpg" alt="img"> </p><p>点击选择关卡按钮后会跳入到该场景</p><p>建立点击按钮，跳转场景的信号槽连接</p><p>在ChooseLevelScene.h 中声明</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PlayScene *pScene = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听选择关卡按钮的信号槽</span></span><br><span class="line"><span class="built_in">connect</span>(menuBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">    <span class="keyword">if</span> (pScene == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">        pScene = <span class="keyword">new</span> <span class="built_in">PlayScene</span>(i + <span class="number">1</span>);</span><br><span class="line">        pScene-&gt;<span class="built_in">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    QString str = <span class="built_in">QString</span>(<span class="string">&quot;您选择的是第 %1 关&quot;</span>).<span class="built_in">arg</span>(i + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; str;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里pScene &#x3D; new PlayScene(i+1); 将用户所选的关卡号发送给pScene，也就是翻金币场景，当然PlayScene 要提供重载的有参构造版本，来接受这个参数</p><h1 id="五、翻金币场景"><a href="#五、翻金币场景" class="headerlink" title="五、翻金币场景"></a>五、翻金币场景</h1><h2 id="5-1-场景基本设置"><a href="#5-1-场景基本设置" class="headerlink" title="5.1 场景基本设置"></a>5.1 场景基本设置</h2><p>PlayScene.h中 声明成员变量，用于记录当前用户选择的关卡</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PlayScene</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">PlayScene</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">PlayScene</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成员变量 记录关卡索引</span></span><br><span class="line">    <span class="type">int</span> levelIndex;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>PlayScene.cpp中 初始化该场景配置</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;playscene.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenuBar&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QAction&gt;</span></span></span><br><span class="line"></span><br><span class="line">PlayScene::<span class="built_in">PlayScene</span>(QWidget *parent)</span><br><span class="line">    : QMainWindow&#123;parent&#125;</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">PlayScene::<span class="built_in">PlayScene</span>(<span class="type">int</span> index)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;当前关卡为：&quot;</span> &lt;&lt; index;</span><br><span class="line">    <span class="keyword">this</span>-&gt;levelIndex = index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置窗口固定大小</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(<span class="number">320</span>, <span class="number">588</span>);</span><br><span class="line">    <span class="comment">// 设置图标</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowIcon</span>(<span class="built_in">QPixmap</span>(<span class="string">&quot;:/res/Coin0001.png&quot;</span>));</span><br><span class="line">    <span class="comment">// 设置标题</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;翻金币&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建菜单栏</span></span><br><span class="line">    QMenuBar * bar = <span class="keyword">this</span>-&gt;<span class="built_in">menuBar</span>();</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setMenuBar</span>(bar);</span><br><span class="line">    <span class="comment">// 创建开始菜单</span></span><br><span class="line">    QMenu * startMenu = bar-&gt;<span class="built_in">addMenu</span>(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建按钮菜单项</span></span><br><span class="line">    QAction * quitAction = startMenu-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">    <span class="comment">// 点击退出</span></span><br><span class="line">    <span class="built_in">connect</span>(quitAction, &amp;QAction::triggered, [=]()&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">close</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-2-背景设置"><a href="#5-2-背景设置" class="headerlink" title="5.2 背景设置"></a>5.2 背景设置</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置背景</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PlayScene::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 加载背景</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    QPixmap pix;</span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/PlayLevelSceneBg.png&quot;</span>);</span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>(), pix);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载标题</span></span><br><span class="line">    pix.<span class="built_in">load</span>(<span class="string">&quot;:/res/Title.png&quot;</span>);</span><br><span class="line">    pix = pix.<span class="built_in">scaled</span>(pix.<span class="built_in">width</span>() * <span class="number">0.5</span>, pix.<span class="built_in">height</span>() * <span class="number">0.5</span>);</span><br><span class="line">    painter.<span class="built_in">drawPixmap</span>(<span class="number">10</span>, <span class="number">30</span>, pix.<span class="built_in">width</span>(), pix.<span class="built_in">height</span>(), pix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-返回按钮"><a href="#5-3-返回按钮" class="headerlink" title="5.3 返回按钮"></a>5.3 返回按钮</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回按钮</span></span><br><span class="line">MyPushButton * closeBtn = <span class="keyword">new</span> <span class="built_in">MyPushButton</span>(<span class="string">&quot;:/res/BackButton.png&quot;</span>, <span class="string">&quot;:/res/BackButtonSelected.png&quot;</span>);</span><br><span class="line">closeBtn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">closeBtn-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">width</span>() - closeBtn-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">height</span>() - closeBtn-&gt;<span class="built_in">height</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回按钮功能实现</span></span><br><span class="line"><span class="built_in">connect</span>(closeBtn, &amp;MyPushButton::clicked, [=]()&#123;</span><br><span class="line">    QTimer::<span class="built_in">singleShot</span>(<span class="number">500</span>, <span class="keyword">this</span>, [=]()&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">        <span class="comment">// 触发自定义信号，关闭自身，该信号写到signals下做声明</span></span><br><span class="line">        emit <span class="keyword">this</span>-&gt;<span class="built_in">chooseSceneBack</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>在ChooseScene选择关卡场景中，监听PlayScene的返回信号</strong></p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PlayScene的返回按钮监听，删除该Scene并且将指针指向空</span></span><br><span class="line"><span class="built_in">connect</span>(pScene, &amp;PlayScene::chooseSceneBack, [=]()&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">show</span>();</span><br><span class="line">    <span class="keyword">delete</span> pScene;</span><br><span class="line">    pScene = <span class="literal">NULL</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps28.jpg" alt="img"> </p><h2 id="5-4-显示当前关卡"><a href="#5-4-显示当前关卡" class="headerlink" title="5.4 显示当前关卡"></a>5.4 显示当前关卡</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前关卡标题</span></span><br><span class="line">    QLabel * label = <span class="keyword">new</span> QLabel;</span><br><span class="line">    label-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">    QFont font;</span><br><span class="line">    font.<span class="built_in">setFamily</span>(<span class="string">&quot;华文新魏&quot;</span>);</span><br><span class="line">    font.<span class="built_in">setPointSize</span>(<span class="number">20</span>);</span><br><span class="line">    label-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    QString str = <span class="built_in">QString</span>(<span class="string">&quot;Level: %1&quot;</span>).<span class="built_in">arg</span>(<span class="keyword">this</span>-&gt;levelIndex);</span><br><span class="line">    label-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    label-&gt;<span class="built_in">setGeometry</span>(<span class="built_in">QRect</span>(<span class="number">30</span>, <span class="keyword">this</span>-&gt;<span class="built_in">height</span>() - <span class="number">50</span>, <span class="number">120</span>, <span class="number">50</span>));    <span class="comment">// 设置大小和位置</span></span><br></pre></td></tr></table></figure><p>假设我们选择了第15关卡，运行效果如果：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps29.jpg" alt="img"> </p><h2 id="5-5-创建金币背景图片"><a href="#5-5-创建金币背景图片" class="headerlink" title="5.5 创建金币背景图片"></a>5.5 创建金币背景图片</h2> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建金币的背景图片</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 绘制背景图片</span></span><br><span class="line">        QLabel * label = <span class="keyword">new</span> QLabel;</span><br><span class="line">        label-&gt;<span class="built_in">setGeometry</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">        label-&gt;<span class="built_in">setPixmap</span>(<span class="built_in">QPixmap</span>(<span class="string">&quot;:/res/BoardNode.png&quot;</span>));</span><br><span class="line">        label-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">        label-&gt;<span class="built_in">move</span>(<span class="number">57</span> + i * <span class="number">50</span>, <span class="number">200</span> + j * <span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps30.jpg" alt="img"> </p><h2 id="5-6-创建金币类"><a href="#5-6-创建金币类" class="headerlink" title="5.6 创建金币类"></a>5.6 创建金币类</h2><p>我们知道，金币是本游戏的核心对象，并且在游戏中可以利用二维数组进行维护，拥有支持点击，翻转特效等特殊性，因此不妨将金币单独封装到一个类中，完成金币所需的所有功能。</p><h3 id="5-6-1-创建金币类-MyCoin"><a href="#5-6-1-创建金币类-MyCoin" class="headerlink" title="5.6.1 创建金币类 MyCoin"></a>5.6.1 创建金币类 MyCoin</h3><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps31.jpg" alt="img"> </p><p>并修改MyCoin的基类为QPushButton</p><h3 id="5-6-2-构造函数"><a href="#5-6-2-构造函数" class="headerlink" title="5.6.2 构造函数"></a>5.6.2 构造函数</h3><p>在资源图片中，我们可以看到，金币翻转的效果原理是多张图片切换而形成的，而以下八张图片中，第一张与最后一张比较特殊，因此我们在给用户看的时候，无非是金币Coin0001或者是银币 Coin0008这两种图。</p><p>​因此我们在创建一个金币对象时候，应该提供一个参数，代表着传入的是金币资源路径还是银币资源路径，根据路径我们创建不同样式的图案。</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps32.jpg" alt="img"> </p><p>​在MyCoin.h中声明：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MyCoin</span>(QString butImg); <span class="comment">// 代表图片路径</span></span><br></pre></td></tr></table></figure><p>​在MyCoin.cpp中进行实现</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MyCoin::<span class="built_in">MyCoin</span>(QString butImg) <span class="comment">// 代表图片路径</span></span><br><span class="line">&#123;</span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    <span class="type">bool</span> ret = pixmap.<span class="built_in">load</span>(butImg);</span><br><span class="line">    <span class="keyword">if</span> (!ret)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; butImg &lt;&lt; <span class="string">&quot;加载图片失败！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6-3-测试"><a href="#5-6-3-测试" class="headerlink" title="5.6.3 测试"></a>5.6.3 测试</h3><p>在翻金币场景 PlayScene中，我们测试下封装的金币类是否可用，可以在创建好的金币背景代码后，添加如下代码：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 金币对象</span></span><br><span class="line">MyCoin * coin = <span class="keyword">new</span> <span class="built_in">MyCoin</span>(<span class="string">&quot;:/res/Coin0001.png&quot;</span>);</span><br><span class="line">coin-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">coin-&gt;<span class="built_in">move</span>(<span class="number">59</span> + i * <span class="number">50</span>, <span class="number">204</span> + j * <span class="number">50</span>);</span><br></pre></td></tr></table></figure><p>运行效果如图</p><p> <img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps33.jpg" alt="img"> </p><h2 id="5-7-引入关卡数据"><a href="#5-7-引入关卡数据" class="headerlink" title="5.7 引入关卡数据"></a>5.7 引入关卡数据</h2><p>当然上述的测试只是为了让我们知道提供的对外接口可行，但是每个关卡的初始化界面并非如此，因此需要我们引用一个现有的关卡文件，文件中记录了各个关卡的金币排列清空，也就是二维数组的数值。</p><h3 id="5-7-1-添加现有文件dataConfig"><a href="#5-7-1-添加现有文件dataConfig" class="headerlink" title="*5.7.1 添加现有文件dataConfig*"></a><em><strong>*5.7.1 添加现有文件dataConfig*</strong></em></h3><p>首先先将dataConfig.h 和 dataConfig.cpp文件放入到当前项目下：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps34.jpg" alt="img"> </p><h3 id="5-7-2-添加现有文件"><a href="#5-7-2-添加现有文件" class="headerlink" title="5.7.2 添加现有文件"></a>5.7.2 添加现有文件</h3><p>其次在Qt_Creator项目右键，点击添加现有文件</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps35.jpg" alt="img"> </p><h3 id="5-7-3-完成添加"><a href="#5-7-3-完成添加" class="headerlink" title="5.7.3 完成添加"></a>5.7.3 完成添加</h3><p>选择当前项目下的文件，并进行添加</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps36.jpg" alt="img"> </p><h3 id="5-7-4-数据分析"><a href="#5-7-4-数据分析" class="headerlink" title="5.7.4 数据分析"></a>5.7.4 数据分析</h3><p>我们可以看到，其实dataConfig.h中只有一个数据是对外提供的，如下图</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps37.jpg" alt="img"> </p><p>在上图中，QMap&lt;int,QVector&lt;QVector<int>&gt;&gt;mData;都记录着每个关卡中的数据。</int></p><p>其中，int代表对应的关卡 ，也就是QMap中的key值，而value值就是对应的二维数组，我们利用的是 QVector&lt;QVector<int>&gt;来记录着其中的二维数组。</int></p><h3 id="5-7-5-测试关卡数据"><a href="#5-7-5-测试关卡数据" class="headerlink" title="5.7.5 测试关卡数据"></a>5.7.5 测试关卡数据</h3><p>在Main函数可以测试第一关的数据，添加如下代码：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dataConfig config;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 打印第一关所有信息</span></span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; config.mData[<span class="number">1</span>][i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果如下图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps38.jpg" alt="img"> </p><p>对应着dataConfig.cpp中第一关数据来看，与之匹配成功，以后我们就可以用dataConfig中的数据来对关卡进行初始化了</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps39.jpg" alt="img"> </p><h2 id="5-8-初始化各个关卡"><a href="#5-8-初始化各个关卡" class="headerlink" title="5.8 初始化各个关卡"></a>5.8 初始化各个关卡</h2><p>首先，可以在playScene中声明一个成员变量，用户记录当前关卡的二维数组</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> gameArray[<span class="number">4</span>][<span class="number">4</span>];    <span class="comment">// 二维数组数据</span></span><br></pre></td></tr></table></figure><p>之后，在.cpp文件中，初始化这个二维数组</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化保存游戏数据的二维数组</span></span><br><span class="line">dataConfig config;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        gameArray[i][j] = config.mData[<span class="keyword">this</span>-&gt;levelIndex][i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化成功后，在金币类 也就是MyCoin类中，扩展属性 posX，posY，以及flag</p><p>这三个属性分别代表了，该金币在二维数组中 x的坐标，y的坐标，以及当前的正反标志。</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> posX;   <span class="comment">// x坐标</span></span><br><span class="line"><span class="type">int</span> posY;   <span class="comment">// y坐标</span></span><br><span class="line"><span class="type">bool</span> flag;  <span class="comment">// 正反标志</span></span><br></pre></td></tr></table></figure><p>然后完成金币初始化，修改之前PlayScene中对于金币背景的设置，代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建金币的背景图片</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 绘制背景图片</span></span><br><span class="line">            QLabel * label = <span class="keyword">new</span> QLabel;</span><br><span class="line">            label-&gt;<span class="built_in">setGeometry</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">            label-&gt;<span class="built_in">setPixmap</span>(<span class="built_in">QPixmap</span>(<span class="string">&quot;:/res/BoardNode.png&quot;</span>));</span><br><span class="line">            label-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">            label-&gt;<span class="built_in">move</span>(<span class="number">57</span> + i * <span class="number">50</span>, <span class="number">200</span> + j * <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 金币对象</span></span><br><span class="line">            QString img;</span><br><span class="line">            <span class="keyword">if</span> (gameArray[i][j] == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                img = <span class="string">&quot;:/res/Coin0001.png&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                img = <span class="string">&quot;:/res/Coin0008.png&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            MyCoin * coin = <span class="keyword">new</span> <span class="built_in">MyCoin</span>(img);</span><br><span class="line">            coin-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">            coin-&gt;<span class="built_in">move</span>(<span class="number">59</span> + i * <span class="number">50</span>, <span class="number">204</span> + j * <span class="number">50</span>);</span><br><span class="line">            coin-&gt;posX = i;     <span class="comment">// 记录x坐标</span></span><br><span class="line">            coin-&gt;posY = j;     <span class="comment">// 记录y坐标</span></span><br><span class="line">            coin-&gt;flag = gameArray[i][j];   <span class="comment">// 记录正反标志</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行测试各个关卡初始化，例如第一关效果如图：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps40.jpg" alt="img"> </p><h2 id="5-9-翻金币特效"><a href="#5-9-翻金币特效" class="headerlink" title="5.9 翻金币特效"></a>5.9 翻金币特效</h2><h3 id="5-9-1-MyCoin类扩展属性和行为"><a href="#5-9-1-MyCoin类扩展属性和行为" class="headerlink" title="5.9.1 MyCoin类扩展属性和行为"></a>5.9.1 MyCoin类扩展属性和行为</h3><p> 关卡的初始化完成后，下面就应该点击金币，进行翻转的效果了，那么首先我们先在MyCoin类中创建出该方法。</p><p>在MyCoin.h中声明：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">changeFlag</span><span class="params">()</span></span>;  <span class="comment">// 改变标志，执行翻转效果</span></span><br><span class="line">QTimer * timer1;    <span class="comment">// 正面翻反面，定时器</span></span><br><span class="line">QTimer * timer2;    <span class="comment">// 反面翻正面，定时器</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> min = <span class="number">1</span>;    <span class="comment">// 最小照片</span></span><br><span class="line"><span class="type">int</span> max = <span class="number">8</span>;    <span class="comment">// 最大照片</span></span><br></pre></td></tr></table></figure><p>MyCoin.cpp中做实现</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyCoin::changeFlag</span><span class="params">()</span>  <span class="comment">// 改变标志，执行翻转效果</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;flag) <span class="comment">// 如果是正面</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer1-&gt;<span class="built_in">start</span>(<span class="number">30</span>);</span><br><span class="line">        <span class="keyword">this</span>-&gt;flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>    <span class="comment">// 如果是反面</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer2-&gt;<span class="built_in">start</span>(<span class="number">30</span>);</span><br><span class="line">        <span class="keyword">this</span>-&gt;flag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然在构造函数中，记得创建出两个定时器</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化定时器</span></span><br><span class="line">timer1 = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line">timer2 = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><h3 id="5-9-2-创建特效"><a href="#5-9-2-创建特效" class="headerlink" title="5.9.2 创建特效"></a>5.9.2 创建特效</h3><p>​当我们分别启动两个定时器时，需要在构造函数中做监听操作，并且做出响应，翻转金币，然后再结束定时器。</p><p>​构造函数中 进行下列监听代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听正面翻转的信号槽</span></span><br><span class="line"><span class="built_in">connect</span>(timer1, &amp;QTimer::timeout, [=]()&#123;</span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    QString str = <span class="built_in">QString</span>(<span class="string">&quot;:/res/Coin000%1.png&quot;</span>).<span class="built_in">arg</span>(<span class="keyword">this</span>-&gt;min++);</span><br><span class="line">    pixmap.<span class="built_in">load</span>(str);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;min &gt; <span class="keyword">this</span>-&gt;max)  <span class="comment">// 如果大于最大值，重置最小值，并停止定时器</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;min = <span class="number">1</span>;</span><br><span class="line">        timer1-&gt;<span class="built_in">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听反面翻转的信号槽</span></span><br><span class="line"><span class="built_in">connect</span>(timer2, &amp;QTimer::timeout, [=]()&#123;</span><br><span class="line">    QPixmap pixmap;</span><br><span class="line">    QString str = <span class="built_in">QString</span>(<span class="string">&quot;:/res/Coin000%1.png&quot;</span>).<span class="built_in">arg</span>(<span class="keyword">this</span>-&gt;max--);</span><br><span class="line">    pixmap.<span class="built_in">load</span>(str);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>());</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QPushButton&#123;border:0px;&#125;&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIcon</span>(pixmap);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setIconSize</span>(<span class="built_in">QSize</span>(pixmap.<span class="built_in">width</span>(), pixmap.<span class="built_in">height</span>()));</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;max &lt; <span class="keyword">this</span>-&gt;min)  <span class="comment">// 如果小于最小值，重置最大值，并停止定时器</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;max = <span class="number">8</span>;</span><br><span class="line">        timer2-&gt;<span class="built_in">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>测试</strong> </p><p>监听每个按钮的点击效果，并翻转金币</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">connect</span>(coin, &amp;MyCoin::clicked, [=]()&#123;</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;点击的位置：x = &quot;</span> &lt;&lt; coin-&gt;posX &lt;&lt; <span class="string">&quot; y = &quot;</span> &lt;&lt; coin-&gt;posY;</span><br><span class="line">    coin-&gt;<span class="built_in">changeFlag</span>();</span><br><span class="line">    gameArray[i][j] = gameArray[i][j] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>; <span class="comment">// 数组内部记录的标志同步修改</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps41.jpg" alt="img"> </p><h3 id="5-9-3-禁用按钮"><a href="#5-9-3-禁用按钮" class="headerlink" title="5.9.3 禁用按钮"></a>5.9.3 禁用按钮</h3><p>此时，确实已经可以执行翻转金币代码了，但是如果快速点击，会在金币还没有执行一个完整动作之后 ，又继续开始新的动画，我们应该在金币做动画期间，禁止再次点击，并在完成动画后，开启点击。</p><p>​在MyCoin类中加入一个标志 isAnimation 代表是否正在做翻转动画，默认isAnimation值为false。</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> isAnimation = <span class="literal">false</span>;   <span class="comment">// 做翻转动画的标志</span></span><br></pre></td></tr></table></figure><p>在MyCoin做动画期间加入</p><p><code>this-&gt;isAnimation = true;</code></p><p>也就是changeFlag函数中将标志设为true</p><p>加入位置如下：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps42.jpg" alt="img"> </p><p>并且在做完动画时，将标志改为false</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps43.jpg" alt="img"> </p><p>重写按钮的按下事件，判断如果正在执行动画，那么直接return掉，不要执行后续代码。</p><p>代码如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyCoin::mousePressEvent</span><span class="params">(QMouseEvent *e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;isAnimation)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QPushButton::<span class="built_in">mousePressEvent</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-10-翻周围金币"><a href="#5-10-翻周围金币" class="headerlink" title="5.10 翻周围金币"></a>5.10 翻周围金币</h2><p>将用户点击的周围 上下左右4个金币也进行延时翻转，代码写到监听点击金币下。</p><p>此时我们发现还需要记录住每个按钮的内容，所以我们将所有金币按钮也放到一个二维数组中，在.h中声明</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyCoin * coinBtn[<span class="number">4</span>][<span class="number">4</span>]; <span class="comment">//金币按钮数组</span></span><br></pre></td></tr></table></figure><p>并且记录每个按钮的位置</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coinBtn[i][j] = coin;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps44.jpg" alt="img"> </p><p>延时翻动其他周围金币</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 延时翻动其他周围金币</span></span><br><span class="line">QTimer::<span class="built_in">singleShot</span>(<span class="number">300</span>, <span class="keyword">this</span>, [=]()&#123;</span><br><span class="line"><span class="keyword">if</span> (coin-&gt;posX + <span class="number">1</span> &lt;= <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">coinBtn[coin-&gt;posX + <span class="number">1</span>][coin-&gt;posY]-&gt;<span class="built_in">changeFlag</span>();</span><br><span class="line">        gameArray[coin-&gt;posX + <span class="number">1</span>][coin-&gt;posY] = gameArray[coin-&gt;posX + <span class="number">1</span>][coin-&gt;posY] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (coin-&gt;posX - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        coinBtn[coin-&gt;posX - <span class="number">1</span>][coin-&gt;posY]-&gt;<span class="built_in">changeFlag</span>();</span><br><span class="line">        gameArray[coin-&gt;posX - <span class="number">1</span>][coin-&gt;posY] = gameArray[coin-&gt;posX - <span class="number">1</span>][coin-&gt;posY] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (coin-&gt;posY + <span class="number">1</span> &lt;= <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        coinBtn[coin-&gt;posX][coin-&gt;posY + <span class="number">1</span>]-&gt;<span class="built_in">changeFlag</span>();</span><br><span class="line">        gameArray[coin-&gt;posX][coin-&gt;posY + <span class="number">1</span>] = gameArray[coin-&gt;posX][coin-&gt;posY + <span class="number">1</span>] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (coin-&gt;posY - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         coinBtn[coin-&gt;posX][coin-&gt;posY - <span class="number">1</span>]-&gt;<span class="built_in">changeFlag</span>();</span><br><span class="line">         gameArray[coin-&gt;posX][coin-&gt;posY - <span class="number">1</span>] = gameArray[coin-&gt;posX][coin-&gt;posY - <span class="number">1</span>] == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="5-11-判断是否胜利"><a href="#5-11-判断是否胜利" class="headerlink" title="5.11 判断是否胜利"></a>5.11 判断是否胜利</h2><p>在playscene.h中加入 isWin标志，代表是否胜利。</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> isWin = <span class="literal">true</span>; <span class="comment">//是否胜利</span></span><br></pre></td></tr></table></figure><p>默认设置为true，只要有一个反面的金币，就将该值改为false，视为未成功。</p><p>代码写到延时翻金币后 进行判断</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否胜利</span></span><br><span class="line"> <span class="keyword">this</span>-&gt;isWin = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (coinBtn[i][j]-&gt;flag == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;isWin = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果isWin依然是true，代表胜利了！ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;isWin)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;胜利&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-12-胜利图片显示"><a href="#5-12-胜利图片显示" class="headerlink" title="5.12 胜利图片显示"></a>5.12 胜利图片显示</h2><p>将胜利的图片提前创建好，如果胜利触发了，将图片弹下来即可</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 胜利的图片</span></span><br><span class="line">QLabel * winLabel = <span class="keyword">new</span> QLabel;</span><br><span class="line">QPixmap tmpPix;</span><br><span class="line">tmpPix.<span class="built_in">load</span>(<span class="string">&quot;:/res/LevelCompletedDialogBg.png&quot;</span>);</span><br><span class="line">winLabel-&gt;<span class="built_in">setGeometry</span>(<span class="number">0</span>, <span class="number">0</span>, tmpPix.<span class="built_in">width</span>(), tmpPix.<span class="built_in">height</span>());</span><br><span class="line">winLabel-&gt;<span class="built_in">setPixmap</span>(tmpPix);</span><br><span class="line">winLabel-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">winLabel-&gt;<span class="built_in">move</span>((<span class="keyword">this</span>-&gt;<span class="built_in">width</span>() - tmpPix.<span class="built_in">width</span>()) * <span class="number">0.5</span>, -tmpPix.<span class="built_in">height</span>());</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果胜利了，将上面的图片移动下来</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;isWin)  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;胜利&quot;</span>;</span><br><span class="line">    QPropertyAnimation * animation1 = <span class="keyword">new</span> <span class="built_in">QPropertyAnimation</span>(winLabel, <span class="string">&quot;geometry&quot;</span>);</span><br><span class="line">    animation1-&gt;<span class="built_in">setDuration</span>(<span class="number">1000</span>);</span><br><span class="line">    animation1-&gt;<span class="built_in">setStartValue</span>(<span class="built_in">QRect</span>(winLabel-&gt;<span class="built_in">x</span>(), winLabel-&gt;<span class="built_in">y</span>(), winLabel-&gt;<span class="built_in">width</span>(), winLabel-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    animation1-&gt;<span class="built_in">setEndValue</span>(<span class="built_in">QRect</span>(winLabel-&gt;<span class="built_in">x</span>(), winLabel-&gt;<span class="built_in">y</span>() + <span class="number">114</span>, winLabel-&gt;<span class="built_in">width</span>(), winLabel-&gt;<span class="built_in">height</span>()));</span><br><span class="line">    animation1-&gt;<span class="built_in">setEasingCurve</span>(QEasingCurve::OutBounce);</span><br><span class="line">    animation1-&gt;<span class="built_in">start</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-13-胜利后禁用按钮"><a href="#5-13-胜利后禁用按钮" class="headerlink" title="5.13 胜利后禁用按钮"></a>5.13 胜利后禁用按钮</h2><p>当胜利后，应该禁用所有按钮的点击状态，可以在每个按钮中加入标志位 isWin，如果isWin为true，MousePressEvent直接return掉即可</p><p>MyCoin中.h里添加：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> notPress = <span class="literal">false</span>; <span class="comment">// false = 能按，true = 不能按</span></span><br></pre></td></tr></table></figure><p>在鼠标按下事件中修改为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyCoin::mousePressEvent</span><span class="params">(QMouseEvent *e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;isAnimation || notPress == <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> QPushButton::<span class="built_in">mousePressEvent</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 禁用所有按钮点击事件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">    coinBtn[i][j]-&gt;notPress = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在点击金币之后，先把所有金币按钮禁用，防止出现还未翻转结束，就点击了别的按钮，造成结果错误</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击按钮，将所有按钮先都禁用</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        coinBtn[i][j]-&gt;notPress = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>同时，在最后判断是否胜利后，将所有禁用按钮解开</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 没有胜利，恢复按钮，所有按钮都可以进行按动</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">         coinBtn[i][j]-&gt;notPress = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，胜利后不可以点击任何的金币。</p><h1 id="六、音效添加"><a href="#六、音效添加" class="headerlink" title="六、音效添加"></a>六、音效添加</h1><h2 id="6-1-开始音效"><a href="#6-1-开始音效" class="headerlink" title="6.1 开始音效"></a>6.1 开始音效</h2><p> QT6.3使用的是<code>&lt;QSoundEffect&gt;</code></p><p>在pro文件中添加multimedia组件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QT       += multimedia</span><br></pre></td></tr></table></figure><p>在.cpp文件中编写</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建开始时的语音</span></span><br><span class="line">QSoundEffect * startSound = <span class="keyword">new</span> <span class="built_in">QSoundEffect</span>(<span class="keyword">this</span>);</span><br><span class="line">startSound-&gt;<span class="built_in">setSource</span>(QUrl::<span class="built_in">fromLocalFile</span>(<span class="string">&quot;:/res/TapButtonSound.wav&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击开始按钮，播放音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startSound-&gt;<span class="built_in">play</span>(); <span class="comment">//开始音效</span></span><br></pre></td></tr></table></figure><h2 id="6-2-选择关卡音效"><a href="#6-2-选择关卡音效" class="headerlink" title="6.2 选择关卡音效"></a>6.2 选择关卡音效</h2><p>在选择关卡场景中，添加音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择关卡按钮音效</span></span><br><span class="line">QSoundEffect * chooseSound = <span class="keyword">new</span> <span class="built_in">QSoundEffect</span>(<span class="keyword">this</span>);</span><br><span class="line">chooseSound-&gt;<span class="built_in">setSource</span>(QUrl::<span class="built_in">fromLocalFile</span>(<span class="string">&quot;:/res/TapButtonSound.wav&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>选中关卡后，播放音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chooseSound-&gt;<span class="built_in">play</span>();</span><br></pre></td></tr></table></figure><h2 id="6-3-返回按钮音效"><a href="#6-3-返回按钮音效" class="headerlink" title="6.3 返回按钮音效"></a>6.3 返回按钮音效</h2><p>在选择关卡场景与翻金币游戏场景中，分别添加返回按钮音效如下：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回按钮音效</span></span><br><span class="line">    QSoundEffect * backSound = <span class="keyword">new</span> <span class="built_in">QSoundEffect</span>(<span class="keyword">this</span>);</span><br><span class="line">    backSound-&gt;<span class="built_in">setSource</span>(QUrl::<span class="built_in">fromLocalFile</span>(<span class="string">&quot;:/res/BackButtonSound.wav&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别在点击返回按钮后，播放该音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backSound-&gt;<span class="built_in">play</span>();</span><br></pre></td></tr></table></figure><h2 id="6-4-翻金币与胜利音效"><a href="#6-4-翻金币与胜利音效" class="headerlink" title="6.4 翻金币与胜利音效"></a>6.4 翻金币与胜利音效</h2><p>在PlayScene中添加，翻金币的音效以及 胜利的音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 翻金币音效</span></span><br><span class="line">QSoundEffect * flipSound = <span class="keyword">new</span> <span class="built_in">QSoundEffect</span>(<span class="keyword">this</span>);</span><br><span class="line">flipSound-&gt;<span class="built_in">setSource</span>(QUrl::<span class="built_in">fromLocalFile</span>(<span class="string">&quot;:/res/ConFlipSound.wav&quot;</span>));</span><br><span class="line"><span class="comment">// 胜利音效</span></span><br><span class="line">QSoundEffect * winSound = <span class="keyword">new</span> <span class="built_in">QSoundEffect</span>(<span class="keyword">this</span>);</span><br><span class="line">winSound-&gt;<span class="built_in">setSource</span>(QUrl::<span class="built_in">fromLocalFile</span>(<span class="string">&quot;:/res/LevelWinSound.wav&quot;</span>));</span><br></pre></td></tr></table></figure><p>在翻金币时播放 翻金币音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flipSound-&gt;<span class="built_in">play</span>();</span><br></pre></td></tr></table></figure><p>胜利时，播放胜利音效</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winSound-&gt;<span class="built_in">play</span>();</span><br></pre></td></tr></table></figure><p>测试音效，使音效正常播放。</p><h1 id="七、优化项目"><a href="#七、优化项目" class="headerlink" title="七、优化项目"></a>七、优化项目</h1><p>当我们移动场景后，如果进入下一个场景，发现场景还在中心位置，如果想设置场景的位置，需要添加如下下图中的代码：</p><p>MainScene中添加：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps45.jpg" alt="img"> </p><p>ChooseScene中添加：</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/wps46.jpg" alt="img"> </p><p>测试切换三个场景的进入与返回都在同一个位置下，优化成功。</p><p>至此，本案例全部制作完成。</p><h1 id="八、项目打包"><a href="#八、项目打包" class="headerlink" title="八、项目打包"></a>八、项目打包</h1><h2 id="8-1、QT自带工具打包"><a href="#8-1、QT自带工具打包" class="headerlink" title="8.1、QT自带工具打包"></a>8.1、QT自带工具打包</h2><p>选择Qt页面左下角，将Debug改为Release</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808151615844.png" alt="image-20240808151615844"></p><p>编译一遍，即可得到release之后的项目文件，在build文件路径中，找到release文件夹，进入release目录</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808151756053.png" alt="image-20240808151756053"></p><p>将其中的.exe复制一份，到另一个路径粘贴进去</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808152425618.png" alt="image-20240808152425618"></p><p>打开此路径的cmd</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808152501155.png" alt="image-20240808152501155"></p><p>找到QT的安装路径，将bin路径保存到系统变量中<br><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808152720780.png" alt="image-20240808152720780"></p><p>使用命令windeployqt CoinFlip.exe，进行打包</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808152926420.png" alt="image-20240808152926420"></p><p>可以看到结束后的文件夹多了很多文件，此时就可以直接发送给另一个人进行直接使用</p><p><img src="/2024/08/08/Qt/%E7%BF%BB%E9%87%91%E5%B8%81%E6%A1%88%E4%BE%8B/image-20240808153105564.png" alt="image-20240808153105564"></p><h2 id="8-2、使用工具打包"><a href="#8-2、使用工具打包" class="headerlink" title="8.2、使用工具打包"></a>8.2、使用工具打包</h2><p><a href="https://blog.csdn.net/signjing/article/details/7855855">nsis安装包（五）_手把手教NIS Edit安装向导的使用_nsis安装包(五)-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音识别_SAPI实现长时间语音识别(五)</title>
      <link href="/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/ContinuousSapiASR/"/>
      <url>/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/ContinuousSapiASR/</url>
      
        <content type="html"><![CDATA[<h1 id="一、思路"><a href="#一、思路" class="headerlink" title="一、思路"></a>一、思路</h1><p>​通过事件驱动和定时器机制实现了长时间语音识别和静音检测。用户点击开始按钮后，程序一直监听用户的语音输入，当用户讲话时实时更新识别结果，并将其与数据库中的数据进行匹配。同时，通过定时器检测长时间静音，并在静音时进行识别结果处理。用户点击停止按钮后，停止所有识别操作。</p><h2 id="1-1、初始化-SAPI"><a href="#1-1、初始化-SAPI" class="headerlink" title="1.1、初始化 SAPI"></a>1.1、初始化 SAPI</h2><p>在程序启动时，初始化 SAPI 相关组件。主要包括创建语音识别器、识别上下文、语法对象，并加载听写语法。同时设置通知事件和输入音频对象。</p><h2 id="1-2、-开始语音识别"><a href="#1-2、-开始语音识别" class="headerlink" title="1.2、 开始语音识别"></a>1.2、 开始语音识别</h2><p>用户点击“开始”按钮时，启动语音识别功能，并设置相关标志位和定时器。定时器用于检测是否有长时间的静音，以便进行语音识别的处理。</p><h2 id="1-3、-处理语音事件"><a href="#1-3、-处理语音事件" class="headerlink" title="1.3、 处理语音事件"></a>1.3、 处理语音事件</h2><p>通过事件驱动机制，当 SAPI 检测到语音输入时，触发 SPEI_RECOGNITION 事件。此时，获取识别结果并更新最后一次讲话的时间。</p><h2 id="1-4、-更新文本并进行处理"><a href="#1-4、-更新文本并进行处理" class="headerlink" title="1.4、 更新文本并进行处理"></a>1.4、 更新文本并进行处理</h2><p>当收到语音识别结果时，更新对话框中的文本框内容。并使用 Levenshtein 距离算法将识别结果与数据库中的数据进行匹配，找出最相似的文本及其 ID。</p><h2 id="1-5、-停止语音识别"><a href="#1-5、-停止语音识别" class="headerlink" title="1.5、 停止语音识别"></a>1.5、 停止语音识别</h2><p>用户点击“停止”按钮时，停止语音识别功能，取消定时器，并重置相关标志位。</p><h3 id="1-6、-定时器检测静音"><a href="#1-6、-定时器检测静音" class="headerlink" title="1.6、 定时器检测静音"></a>1.6、 定时器检测静音</h3><p>定时器定时检查用户是否长时间没有讲话。如果检测到用户静音超过设定的时间（如 5 秒），则调用 <code>PerformRecognition</code> 函数进行语音识别的处理，并更新识别结果。</p><h3 id="1-7、-数据库连接和查询"><a href="#1-7、-数据库连接和查询" class="headerlink" title="1.7、 数据库连接和查询"></a>1.7、 数据库连接和查询</h3><p>程序初始化时，连接到数据库并查询所有识别内容。将查询结果存储在内存中，以便后续的文本匹配使用。</p><h3 id="1-8、-文本相似度匹配"><a href="#1-8、-文本相似度匹配" class="headerlink" title="1.8、 文本相似度匹配"></a>1.8、 文本相似度匹配</h3><p>使用 Levenshtein 距离算法计算识别结果与数据库中每条数据之间的相似度，找出最匹配的文本及其对应的 ID，并显示在对话框中。</p><h1 id="二、具体实现步骤"><a href="#二、具体实现步骤" class="headerlink" title="二、具体实现步骤"></a>二、具体实现步骤</h1><h2 id="2-1、初始化-SAPI-和音频输入"><a href="#2-1、初始化-SAPI-和音频输入" class="headerlink" title="2.1、初始化 SAPI 和音频输入"></a>2.1、初始化 SAPI 和音频输入</h2><p><code>InitializeSAPI</code>函数将会初始化SAPI，配置识别器和音频输入，并设置事件通知以处理识别结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::InitializeSAPI</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化 COM 库</span></span><br><span class="line">    HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建语音识别器实例</span></span><br><span class="line">    hr = m_pRecognizer.<span class="built_in">CoCreateInstance</span>(CLSID_SpInprocRecognizer);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognizer: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建识别上下文</span></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">CreateRecoContext</span>(&amp;m_pRecoContext);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognition context: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建语法对象</span></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">CreateGrammar</span>(<span class="number">1</span>, &amp;m_pGrammar);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载听写语法</span></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">LoadDictation</span>(<span class="literal">NULL</span>, SPLO_STATIC);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to load dictation grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将语法设置为非活动状态</span></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set dictation state: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置事件通知句柄</span></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetNotifyWin32Event</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set notify event: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取事件通知句柄</span></span><br><span class="line">    HANDLE hEvent = m_pRecoContext-&gt;<span class="built_in">GetNotifyEventHandle</span>();</span><br><span class="line">    <span class="keyword">if</span> (hEvent == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to get event handle.&quot;</span>));</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置对识别事件的兴趣</span></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetInterest</span>(<span class="built_in">SPFEI</span>(SPEI_RECOGNITION), <span class="built_in">SPFEI</span>(SPEI_RECOGNITION));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set interest for recognition events: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建音频输入对象</span></span><br><span class="line">    hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpMMAudioIn, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ISpAudio, (<span class="type">void</span>**)&amp;m_cpAudio);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create audio input object: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置音频输入到识别器</span></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">SetInput</span>(m_cpAudio, TRUE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set audio input: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化成功消息</span></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Initialize SAPI is successful&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2、开始按钮"><a href="#2-2、开始按钮" class="headerlink" title="2.2、开始按钮"></a>2.2、开始按钮</h2><p>点击开始按钮，开始进行录音，因为要支持长期识别，可以添加用户讲话状态和讲话时间，来保证合适进行语音识别</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 启动语音识别</span></span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_ACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">true</span>;</span><br><span class="line">    m_bUserSpeaking = <span class="literal">false</span>;  <span class="comment">// 初始化用户讲话状态</span></span><br><span class="line">    m_lastSpeechTime = <span class="built_in">GetTickCount</span>(); <span class="comment">// 初始化最后一次讲话时间</span></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition started.&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">SetTimer</span>(TIMER_ID, <span class="number">1000</span>, <span class="literal">NULL</span>);    <span class="comment">// 启动定时器，间隔 1 s</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3、定时器识别录音"><a href="#2-3、定时器识别录音" class="headerlink" title="2.3、定时器识别录音"></a>2.3、定时器识别录音</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (nIDEvent)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> TIMER_ID: <span class="comment">// 定时器ID</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取当前时间（以毫秒为单位）</span></span><br><span class="line">        DWORD currentTime = <span class="built_in">GetTickCount</span>();</span><br><span class="line">        <span class="comment">// 检查当前时间与最后一次讲话时间的差值是否大于等于5000毫秒（5秒）</span></span><br><span class="line">        <span class="keyword">if</span> (currentTime - m_lastSpeechTime &gt;= <span class="number">5000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果距离上次讲话已经超过5秒，则进行文本处理</span></span><br><span class="line">            <span class="built_in">PerformRecognition</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用基类的OnTimer函数，以确保基类处理其他定时器事件</span></span><br><span class="line">    CDialogEx::<span class="built_in">OnTimer</span>(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::PerformRecognition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 等待识别上下文中的通知事件，超时时间为1秒</span></span><br><span class="line">    HRESULT hr = m_pRecoContext-&gt;<span class="built_in">WaitForNotifyEvent</span>(<span class="number">1000</span>);  <span class="comment">// 1秒超时</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果等待通知事件失败，直接返回</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CSpEvent event;</span><br><span class="line">    <span class="comment">// 从识别上下文中获取事件</span></span><br><span class="line">    <span class="keyword">while</span> (event.<span class="built_in">GetFrom</span>(m_pRecoContext) == S_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果事件是识别事件</span></span><br><span class="line">        <span class="keyword">if</span> (event.eEventId == SPEI_RECOGNITION)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 获取识别结果</span></span><br><span class="line">            ISpRecoResult* pResult = event.<span class="built_in">RecoResult</span>();</span><br><span class="line">            <span class="keyword">if</span> (pResult)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 更新最后一次讲话时间</span></span><br><span class="line">                m_lastSpeechTime = <span class="built_in">GetTickCount</span>(); </span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取识别到的文本</span></span><br><span class="line">                LPWSTR pwszText = <span class="literal">nullptr</span>;</span><br><span class="line">                hr = pResult-&gt;<span class="built_in">GetText</span>(SP_GETWHOLEPHRASE, SP_GETWHOLEPHRASE, FALSE, &amp;pwszText, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 将识别到的文本包装成CString对象</span></span><br><span class="line">                    CString* pNewText = <span class="keyword">new</span> <span class="built_in">CString</span>(pwszText);</span><br><span class="line">                    <span class="comment">// 发送消息通知主线程更新文本</span></span><br><span class="line">                    <span class="built_in">PostMessage</span>(WM_USER_UPDATE_TEXT, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(pNewText), <span class="number">0</span>);</span><br><span class="line">                    <span class="comment">// 释放分配的内存</span></span><br><span class="line">                    <span class="built_in">CoTaskMemFree</span>(pwszText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CSapiASRDlg, CDialogEx)</span><br><span class="line">    <span class="built_in">ON_MESSAGE</span>(WM_USER_UPDATE_TEXT, &amp;CSapiASRDlg::OnUpdateText)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="function">LRESULT <span class="title">CSapiASRDlg::OnUpdateText</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 将WPARAM参数转换为CString指针</span></span><br><span class="line">    CString* pNewText = <span class="built_in">reinterpret_cast</span>&lt;CString*&gt;(wParam);</span><br><span class="line">    <span class="keyword">if</span> (pNewText)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置编辑框的文本为新的识别结果</span></span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(*pNewText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将识别结果转换为std::wstring以便于后续处理</span></span><br><span class="line">    <span class="function">std::wstring <span class="title">newText</span><span class="params">((*pNewText).GetString())</span></span>;</span><br><span class="line">    std::wstring bestMatch;</span><br><span class="line">    <span class="type">int</span> bestMatchId = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">double</span> minDistance = INT_MAX;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历数据库中的每一行数据</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row_data : m_database)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 计算识别结果与数据库中每行数据的Levenshtein距离</span></span><br><span class="line">        <span class="type">double</span> distance = <span class="built_in">levenshteinDistance</span>(newText, std::<span class="built_in">wstring</span>(row_data.<span class="built_in">GetString</span>()));</span><br><span class="line">        <span class="comment">// 如果找到更小的距离，则更新最匹配的结果</span></span><br><span class="line">        <span class="keyword">if</span> (distance &lt; minDistance)</span><br><span class="line">        &#123;</span><br><span class="line">            minDistance = distance;</span><br><span class="line">            bestMatch = row_data.<span class="built_in">GetString</span>();</span><br><span class="line">            bestMatchId = i;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最相似的结果的ID输出到ID编辑框</span></span><br><span class="line">    CString idResult;</span><br><span class="line">    idResult.<span class="built_in">Format</span>(_T(<span class="string">&quot;%d&quot;</span>), bestMatchId);</span><br><span class="line">    m_edtIdResult.<span class="built_in">SetWindowText</span>(idResult);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最相似的结果输出到结果编辑框</span></span><br><span class="line">    m_edtResult.<span class="built_in">SetWindowText</span>(bestMatch.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放分配的内存</span></span><br><span class="line">    <span class="keyword">delete</span> pNewText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-4、结束按钮"><a href="#2-4、结束按钮" class="headerlink" title="2.4、结束按钮"></a>2.4、结束按钮</h2><p>如果点击结束按钮，会将定时器关闭，结束语音识别；又需要保证自己最后的录音数据可以被识别，在停止听十七之后再次调用语音识别函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_bRunning)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition is not started.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止识别</span></span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to stop recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">KillTimer</span>(TIMER_ID);  <span class="comment">// 停止定时器</span></span><br><span class="line">    <span class="built_in">PerformRecognition</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition stopped.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-5、Levenshtein距离算法"><a href="#2-5、Levenshtein距离算法" class="headerlink" title="2.5、Levenshtein距离算法"></a>2.5、Levenshtein距离算法</h2><p>以下是带有详细注释的Levenshtein距离算法的实现代码和分析：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Levenshtein 距离算法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CSapiASRDlg::levenshteinDistance</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">m</span><span class="params">(s<span class="number">1.</span>size())</span></span>; <span class="comment">// 字符串s1的长度</span></span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">n</span><span class="params">(s<span class="number">2.</span>size())</span></span>; <span class="comment">// 字符串s2的长度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果s1为空，返回s2的长度</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line">    <span class="comment">// 如果s2为空，返回s1的长度</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> m;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个(m+1) x (n+1)的矩阵，用于存储距离</span></span><br><span class="line">    std::vector&lt;std::vector&lt;<span class="type">size_t</span>&gt;&gt; <span class="built_in">matrix</span>(m + <span class="number">1</span>, std::<span class="built_in">vector</span>&lt;<span class="type">size_t</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化第一列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt;= m; ++i) matrix[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="comment">// 初始化第一行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt;= n; ++j) matrix[<span class="number">0</span>][j] = j;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算矩阵的值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果字符相同，代价为0，否则为1</span></span><br><span class="line">            <span class="type">size_t</span> cost = (s1[i - <span class="number">1</span>] == s2[j - <span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 计算删除、插入和替换的代价</span></span><br><span class="line">            <span class="type">size_t</span> deletion = matrix[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> insertion = matrix[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> substitution = matrix[i - <span class="number">1</span>][j - <span class="number">1</span>] + cost;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 取三者中的最小值</span></span><br><span class="line">            <span class="type">size_t</span> minValue = deletion;</span><br><span class="line">            <span class="keyword">if</span> (insertion &lt; minValue)</span><br><span class="line">                minValue = insertion;</span><br><span class="line">            <span class="keyword">if</span> (substitution &lt; minValue)</span><br><span class="line">                minValue = substitution;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将最小值存储在矩阵中</span></span><br><span class="line">            matrix[i][j] = minValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 矩阵的右下角值即为Levenshtein距离</span></span><br><span class="line">    <span class="type">size_t</span> distance = matrix[m][n];</span><br><span class="line">    <span class="comment">// 计算长度差异</span></span><br><span class="line">    <span class="type">size_t</span> lengthDifference = std::<span class="built_in">abs</span>(<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(m) - <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加长度差异的惩罚项，使用比例因子调整权重</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> lengthPenaltyFactor = <span class="number">0.5f</span>; <span class="comment">// 可根据需要调整比例因子</span></span><br><span class="line">    <span class="type">size_t</span> lengthPenalty = <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(lengthDifference * lengthPenaltyFactor);</span><br><span class="line">    distance += lengthPenalty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> distance; <span class="comment">// 返回最终的距离值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>原理</strong></p><p>​Levenshtein距离算法用于计算两个字符串之间的编辑距离，即将一个字符串转换成另一个字符串所需的最小操作次数。允许的操作包括插入、删除和替换字符。该算法通过动态规划的方式实现，创建一个二维矩阵，其中每个元素表示将字符串的某个前缀转换成另一个字符串的某个前缀的代价。通过依次填充矩阵，最终得到两个字符串的编辑距离。</p><p>​此外，添加了长度差异的惩罚项，以更加公平地比较长度差异较大的字符串。惩罚项的比例因子可以根据具体需求进行调整。</p><h1 id="三、源码"><a href="#三、源码" class="headerlink" title="三、源码"></a>三、源码</h1><p>Github仓库：<a href="https://github.com/lxq-02/ContinuousSapiASR">lxq-02&#x2F;ContinuousSapiASR (github.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 语音识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音识别_Pocketsphinx(二)</title>
      <link href="/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/Pocketsphinx/"/>
      <url>/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/Pocketsphinx/</url>
      
        <content type="html"><![CDATA[<h1 id="博客："><a href="#博客：" class="headerlink" title="博客："></a>博客：</h1><p>PortAudio:<a href="https://blog.csdn.net/qq_30340349/article/details/131509624">【PortAudio】PortAudio 音频处理库Demo-CSDN博客</a> </p><p>PortAudio:<a href="https://blog.51cto.com/u_4135183/2822776">PortAudio —— 跨平台音频采集API_lyyanziyu的技术博客_51CTO博客</a></p><p>中文模型：[CMU Sphinx - Browse &#x2F;Acoustic and Language Models&#x2F;Mandarin at SourceForge.net](<a href="https://sourceforge.net/projects/cmusphinx/files/Acoustic">https://sourceforge.net/projects/cmusphinx/files/Acoustic</a> and Language Models&#x2F;Mandarin&#x2F;)</p><p>Pocketsphinx源码：<a href="https://github.com/cmusphinx/pocketsphinx/tree/master/">https://github.com/cmusphinx/pocketsphinx/tree/master/</a></p><p>VS2015中编译试用pocketsphinx：<a href="https://www.jianshu.com/p/b0a3690777fc">https://www.jianshu.com/p/b0a3690777fc</a></p><p>window下基于VS，CMUSphinx的中文小词汇量语音识别实例：<a href="https://blog.csdn.net/Anadahoji/article/details/88607261">https://blog.csdn.net/Anadahoji/article/details/88607261</a></p><h1 id="pocketsphinx实现连续大词汇量语音识别"><a href="#pocketsphinx实现连续大词汇量语音识别" class="headerlink" title="pocketsphinx实现连续大词汇量语音识别"></a><a href="https://www.cnblogs.com/yyq745201/p/4633628.html">pocketsphinx实现连续大词汇量语音识别</a></h1><p><a href="https://www.cnblogs.com/huanghuang/archive/2012/08/08/2627747.html">Sphinx应用程序编写 - lovemu - 博客园 (cnblogs.com)</a></p><p>可以简单识别单词，需要设计关键词库</p><h1 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// SpeechRecognition_PocketSphinxDlg.h: 头文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含必要的头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;portaudio.h&gt;</span>       <span class="comment">// PortAudio 库头文件，用于音频输入输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pocketsphinx.h&gt;</span>    <span class="comment">// PocketSphinx 库头文件，用于语音识别</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/ad.h&gt;</span>   <span class="comment">// SphinxBase 库头文件，用于音频录制</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/err.h&gt;</span>  <span class="comment">// SphinxBase 库头文件，用于错误处理</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span>           <span class="comment">// 文件操作头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span>            <span class="comment">// 字符串处理头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span>               <span class="comment">// 集合容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atlstr.h&gt;</span>          <span class="comment">// ATL 字符串类头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span>            <span class="comment">// 线程库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>            <span class="comment">// 向量容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>         <span class="comment">// 算法头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span>            <span class="comment">// 本地化头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span>           <span class="comment">// 编码转换头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>          <span class="comment">// 输入输出流头文件</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIMER_ID 999 <span class="comment">// 定义定时器 ID</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSpeechRecognitionPocketSphinxDlg 对话框</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CSpeechRecognitionPocketSphinxDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 构造</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CSpeechRecognitionPocketSphinxDlg</span>(CWnd* pParent = <span class="literal">nullptr</span>);<span class="comment">// 标准构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_SPEECHRECOGNITION_POCKETSPHINX_DIALOG &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;<span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">HICON m_hIcon;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成的消息映射函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnDestroy</span><span class="params">()</span></span>;</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">CEdit m_edtText;<span class="comment">// 识别后显示的数据</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;int16&gt; m_audioBuffer;   <span class="comment">// 用于存储音频数据</span></span><br><span class="line"><span class="type">bool</span> m_bListening = <span class="literal">false</span>;<span class="comment">// 语音识别信号</span></span><br><span class="line"><span class="type">cmd_ln_t</span>* m_config = <span class="literal">nullptr</span>;<span class="comment">// 配置参数指针</span></span><br><span class="line"><span class="type">ps_decoder_t</span>* m_ps = <span class="literal">nullptr</span>;<span class="comment">// PocketSphinx 解码器指针</span></span><br><span class="line"><span class="type">ad_rec_t</span>* m_ad = <span class="literal">nullptr</span>;<span class="comment">// 音频录制指针</span></span><br><span class="line">uint8 utt_started = FALSE;<span class="comment">// 标志是否开始录制</span></span><br><span class="line"></span><br><span class="line">PaStream* m_stream = <span class="literal">nullptr</span>;<span class="comment">// PortAudio 流指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">RecordAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessRecordedAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span>;</span><br><span class="line"><span class="function">CString <span class="title">ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStart</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>; <span class="comment">// 定时器处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">std::thread m_thread; <span class="comment">// 用于音频录制和处理的线程</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// SpeechRecognition_PocketSphinxDlg.cpp: 实现文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SpeechRecognition_PocketSphinx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SpeechRecognition_PocketSphinxDlg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;afxdialogex.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// PortAudio 参数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAMPLE_RATE 16000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAMES_PER_BUFFER (2048) <span class="comment">// 调整缓冲区大小</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">paCallback</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* inputBuffer, <span class="type">void</span>* outputBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">unsigned</span> <span class="type">long</span> framesPerBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">const</span> PaStreamCallbackTimeInfo* timeInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">PaStreamCallbackFlags statusFlags,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">void</span>* userData)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">float</span>* in = (<span class="type">float</span>*)inputBuffer;</span><br><span class="line"><span class="type">float</span>* monoBuffer = (<span class="type">float</span>*)userData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inputBuffer == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; framesPerBuffer; ++i) &#123;</span><br><span class="line">monoBuffer[i] = (in[i * <span class="number">2</span>] + in[i * <span class="number">2</span> + <span class="number">1</span>]) * <span class="number">0.5f</span>; <span class="comment">// 双声道转单声道</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于应用程序“关于”菜单项的 CAboutDlg 对话框</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAboutDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CAboutDlg</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::<span class="built_in">CAboutDlg</span>() : <span class="built_in">CDialogEx</span>(IDD_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAboutDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAboutDlg, CDialogEx)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSpeechRecognitionPocketSphinxDlg 对话框</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CSpeechRecognitionPocketSphinxDlg::<span class="built_in">CSpeechRecognitionPocketSphinxDlg</span>(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">: <span class="built_in">CDialogEx</span>(IDD_SPEECHRECOGNITION_POCKETSPHINX_DIALOG, pParent)</span><br><span class="line">&#123;</span><br><span class="line">m_hIcon = <span class="built_in">AfxGetApp</span>()-&gt;<span class="built_in">LoadIcon</span>(IDR_MAINFRAME);</span><br><span class="line"></span><br><span class="line">m_config = <span class="built_in">cmd_ln_init</span>(<span class="literal">NULL</span>, <span class="built_in">ps_args</span>(), TRUE,</span><br><span class="line"><span class="string">&quot;-hmm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn&quot;</span>,</span><br><span class="line"><span class="string">&quot;-lm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.lm.bin&quot;</span>,</span><br><span class="line"><span class="string">&quot;-dict&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.dic&quot;</span>,</span><br><span class="line"><span class="comment">/*       &quot;-hmm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-lm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us.lm.bin&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-dict&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\cmudict-en-us.dict&quot;,*/</span></span><br><span class="line"><span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (m_config == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config fail&quot;</span>));</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m_ps = <span class="built_in">ps_init</span>(m_config);</span><br><span class="line"><span class="keyword">if</span> (m_ps == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps fail&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((m_ad = <span class="built_in">ad_open_dev</span>(<span class="string">&quot;sysdefault&quot;</span>, (<span class="type">int</span>)<span class="number">48000</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Failed to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Success to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnDestroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 音频设备</span></span><br><span class="line"><span class="keyword">if</span> (m_ad)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ad_close</span>(m_ad);</span><br><span class="line">m_ad = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放解码器</span></span><br><span class="line"><span class="keyword">if</span> (m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ps_free</span>(m_ps);</span><br><span class="line">m_ps = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放配置参数</span></span><br><span class="line"><span class="keyword">if</span> (m_config)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">m_config = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line"><span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_TEXT, m_edtText);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CSpeechRecognitionPocketSphinxDlg, CDialogEx)</span><br><span class="line"><span class="built_in">ON_WM_SYSCOMMAND</span>()</span><br><span class="line"><span class="built_in">ON_WM_PAINT</span>()</span><br><span class="line"><span class="built_in">ON_WM_QUERYDRAGICON</span>()</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_START, &amp;CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStart)</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_STOP, &amp;CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStop)</span><br><span class="line"><span class="built_in">ON_WM_DESTROY</span>()</span><br><span class="line"><span class="built_in">ON_WM_TIMER</span>()</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSpeechRecognitionPocketSphinxDlg 消息处理程序</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CSpeechRecognitionPocketSphinxDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将“关于...”菜单项添加到系统菜单中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IDM_ABOUTBOX 必须在系统命令范围内。</span></span><br><span class="line"><span class="built_in">ASSERT</span>((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">CMenu* pSysMenu = <span class="built_in">GetSystemMenu</span>(FALSE);</span><br><span class="line"><span class="keyword">if</span> (pSysMenu != <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">BOOL bNameValid;</span><br><span class="line">CString strAboutMenu;</span><br><span class="line">bNameValid = strAboutMenu.<span class="built_in">LoadString</span>(IDS_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(bNameValid);</span><br><span class="line"><span class="keyword">if</span> (!strAboutMenu.<span class="built_in">IsEmpty</span>())</span><br><span class="line">&#123;</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_SEPARATOR);</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span></span><br><span class="line"><span class="comment">//  执行此操作</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, TRUE);<span class="comment">// 设置大图标</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, FALSE);<span class="comment">// 设置小图标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加额外的初始化代码</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">CAboutDlg dlgAbout;</span><br><span class="line">dlgAbout.<span class="built_in">DoModal</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnSysCommand</span>(nID, lParam);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span></span><br><span class="line"><span class="comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span></span><br><span class="line"><span class="comment">//  这将由框架自动完成。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnPaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsIconic</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">SendMessage</span>(WM_ICONERASEBKGND, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(dc.<span class="built_in">GetSafeHdc</span>()), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使图标在工作区矩形中居中</span></span><br><span class="line"><span class="type">int</span> cxIcon = <span class="built_in">GetSystemMetrics</span>(SM_CXICON);</span><br><span class="line"><span class="type">int</span> cyIcon = <span class="built_in">GetSystemMetrics</span>(SM_CYICON);</span><br><span class="line">CRect rect;</span><br><span class="line"><span class="built_in">GetClientRect</span>(&amp;rect);</span><br><span class="line"><span class="type">int</span> x = (rect.<span class="built_in">Width</span>() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> y = (rect.<span class="built_in">Height</span>() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制图标</span></span><br><span class="line">dc.<span class="built_in">DrawIcon</span>(x, y, m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnPaint</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span></span><br><span class="line"><span class="comment">//显示。</span></span><br><span class="line"><span class="function">HCURSOR <span class="title">CSpeechRecognitionPocketSphinxDlg::OnQueryDragIcon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 清空音频缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 PortAudio</span></span><br><span class="line">PaError err = <span class="built_in">Pa_Initialize</span>();</span><br><span class="line"><span class="keyword">if</span> (err != paNoError) &#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize PortAudio.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置音频流参数</span></span><br><span class="line">PaStreamParameters inputParameters;</span><br><span class="line">inputParameters.device = <span class="built_in">Pa_GetDefaultInputDevice</span>(); <span class="comment">// 获取默认输入设备</span></span><br><span class="line"><span class="keyword">if</span> (inputParameters.device == paNoDevice) &#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No default input device.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">inputParameters.channelCount = <span class="number">2</span>; <span class="comment">// 双声道</span></span><br><span class="line">inputParameters.sampleFormat = paInt16; <span class="comment">// 16 位整数</span></span><br><span class="line">inputParameters.suggestedLatency = <span class="built_in">Pa_GetDeviceInfo</span>(inputParameters.device)-&gt;defaultLowInputLatency;</span><br><span class="line">inputParameters.hostApiSpecificStreamInfo = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开音频流</span></span><br><span class="line">err = <span class="built_in">Pa_OpenStream</span>(</span><br><span class="line">&amp;m_stream,</span><br><span class="line">&amp;inputParameters,</span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有输出</span></span><br><span class="line"><span class="number">48000</span>, <span class="comment">// 采样率</span></span><br><span class="line"><span class="number">2048</span>, <span class="comment">// 缓冲区大小</span></span><br><span class="line">paClipOff, <span class="comment">// 禁用剪切</span></span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有回调</span></span><br><span class="line"><span class="literal">nullptr</span>  <span class="comment">// 没有用户数据</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (err != paNoError) &#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to open PortAudio stream: %s&quot;</span>), <span class="built_in">Pa_GetErrorText</span>(err));</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动音频流</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Pa_StartStream</span>(m_stream) != paNoError) &#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start PortAudio stream.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标志以启动录音</span></span><br><span class="line">m_bListening = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording started. Please speak now...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动录音线程</span></span><br><span class="line"><span class="function">std::thread <span class="title">t</span><span class="params">(&amp;CSpeechRecognitionPocketSphinxDlg::RecordAudio, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">t.<span class="built_in">detach</span>();  <span class="comment">// 分离线程</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置定时器，在15秒后停止录音</span></span><br><span class="line"><span class="built_in">SetTimer</span>(TIMER_ID, <span class="number">15000</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::RecordAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"><span class="type">int16_t</span> stereoBuffer[<span class="number">2048</span> * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (m_bListening) &#123;</span><br><span class="line">PaError err = <span class="built_in">Pa_ReadStream</span>(m_stream, stereoBuffer, <span class="number">2048</span>);</span><br><span class="line"><span class="keyword">if</span> (err != paNoError) &#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">WCHAR* wcsErrorText = <span class="keyword">new</span> WCHAR[len];</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, wcsErrorText, len);</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to read audio: %s&quot;</span>), wcsErrorText);</span><br><span class="line"><span class="keyword">delete</span>[] wcsErrorText;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">errorMsg = _T(<span class="string">&quot;Failed to read audio: Unknown error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将双声道数据转换为单声道数据，并添加到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="type">int16_t</span>&gt; <span class="title">monoBuffer</span><span class="params">(<span class="number">2048</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; <span class="number">2048</span>; ++i) &#123;</span><br><span class="line">monoBuffer[i] = (stereoBuffer[i * <span class="number">2</span>] + stereoBuffer[i * <span class="number">2</span> + <span class="number">1</span>]) / <span class="number">2</span>; <span class="comment">// 简单平均以获得单声道数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将单声道数据添加到缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">insert</span>(m_audioBuffer.<span class="built_in">end</span>(), monoBuffer.<span class="built_in">begin</span>(), monoBuffer.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, monoBuffer.<span class="built_in">data</span>(), monoBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止音频流</span></span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止 PortAudio 流</span></span><br><span class="line"><span class="keyword">if</span> (m_stream) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示用户停止录音</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording stopped. Processing data...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (nIDEvent == TIMER_ID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CDialogEx::<span class="built_in">OnTimer</span>(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::ProcessRecordedAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_audioBuffer.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No audio data to process.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, m_audioBuffer.<span class="built_in">data</span>(), m_audioBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;Failed to convert recognition result.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">CString <span class="title">CSpeechRecognitionPocketSphinxDlg::ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CString</span>(hyp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">std::ifstream <span class="title">file</span><span class="params">(filePath, std::ios::binary)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!file.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to open audio file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;int16&gt; <span class="title">audioData</span><span class="params">((std::istreambuf_iterator&lt;<span class="type">char</span>&gt;(file)), std::istreambuf_iterator&lt;<span class="type">char</span>&gt;())</span></span>;</span><br><span class="line">file.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (audioData.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No audio data read from file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, audioData.<span class="built_in">data</span>(), audioData.<span class="built_in">size</span>() * <span class="built_in">sizeof</span>(int16), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString result = <span class="built_in">CString</span>(hyp);</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//void CMFCApplication1Dlg::OnBnClickedButton1()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//std::string filePath = &quot;D:\\ASR\\pocketsphinx\\test\\data\\cards\\001.wav&quot;; // ten of clubs</span></span><br><span class="line"><span class="comment">////std::string filePath = &quot;D:\\ASR\\pocketsphinx\\test\\data\\cards\\test.wav&quot;; // ten of clubs</span></span><br><span class="line"><span class="comment">//ProcessAudioFile(filePath);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="难点："><a href="#难点：" class="headerlink" title="难点："></a>难点：</h1><h2 id="1、模型初始化"><a href="#1、模型初始化" class="headerlink" title="1、模型初始化"></a>1、模型初始化</h2><p>m_config中文如果不可以初始化成功，可以直接在hmm文件夹中修改参数数据</p><p>pocket默认是单通道的设备，可能和自己的设备不一样，需要设置数据变换</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">CSpeechRecognitionPocketSphinxDlg::<span class="built_in">CSpeechRecognitionPocketSphinxDlg</span>(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">: <span class="built_in">CDialogEx</span>(IDD_SPEECHRECOGNITION_POCKETSPHINX_DIALOG, pParent)</span><br><span class="line">&#123;</span><br><span class="line">m_hIcon = <span class="built_in">AfxGetApp</span>()-&gt;<span class="built_in">LoadIcon</span>(IDR_MAINFRAME);</span><br><span class="line"></span><br><span class="line">m_config = <span class="built_in">cmd_ln_init</span>(<span class="literal">NULL</span>, <span class="built_in">ps_args</span>(), TRUE,</span><br><span class="line"><span class="string">&quot;-hmm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn&quot;</span>,</span><br><span class="line"><span class="string">&quot;-lm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.lm.bin&quot;</span>,</span><br><span class="line"><span class="string">&quot;-dict&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.dic&quot;</span>,</span><br><span class="line"><span class="comment">/*       &quot;-hmm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-lm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us.lm.bin&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-dict&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\cmudict-en-us.dict&quot;,*/</span></span><br><span class="line"><span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (m_config == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config fail&quot;</span>));</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m_ps = <span class="built_in">ps_init</span>(m_config);</span><br><span class="line"><span class="keyword">if</span> (m_ps == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps fail&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((m_ad = <span class="built_in">ad_open_dev</span>(<span class="string">&quot;sysdefault&quot;</span>, (<span class="type">int</span>)<span class="number">48000</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Failed to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Success to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnDestroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 音频设备</span></span><br><span class="line"><span class="keyword">if</span> (m_ad)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ad_close</span>(m_ad);</span><br><span class="line">m_ad = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放解码器</span></span><br><span class="line"><span class="keyword">if</span> (m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ps_free</span>(m_ps);</span><br><span class="line">m_ps = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放配置参数</span></span><br><span class="line"><span class="keyword">if</span> (m_config)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">m_config = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、PortAudio的使用"><a href="#2、PortAudio的使用" class="headerlink" title="2、PortAudio的使用"></a>2、PortAudio的使用</h2><p>Pocketsphinx直接使用电脑的设备可能造成乱码，如果乱码，可以使用portaudio来录制音频，转换为pocketsphinx适配的音频格式</p><p>需要主义，打开音频流之前，一定要对音频流的参数进行设置，否则报错</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PortAudio 参数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAMPLE_RATE 16000                 <span class="comment">// 采样率定义为16000Hz</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAMES_PER_BUFFER (2048)          <span class="comment">// 每个缓冲区包含2048帧</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调函数用于处理音频数据</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">paCallback</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* inputBuffer, <span class="type">void</span>* outputBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">unsigned</span> <span class="type">long</span> framesPerBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> PaStreamCallbackTimeInfo* timeInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">    PaStreamCallbackFlags statusFlags,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">void</span>* userData)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span>* in = (<span class="type">float</span>*)inputBuffer;      <span class="comment">// 输入缓冲区的数据</span></span><br><span class="line">    <span class="type">float</span>* monoBuffer = (<span class="type">float</span>*)userData; <span class="comment">// 用户数据（单声道缓冲区）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果输入缓冲区为空，继续执行</span></span><br><span class="line">    <span class="keyword">if</span> (inputBuffer == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> paContinue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将双声道音频数据转换为单声道</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; framesPerBuffer; ++i) &#123;</span><br><span class="line">        monoBuffer[i] = (in[i * <span class="number">2</span>] + in[i * <span class="number">2</span> + <span class="number">1</span>]) * <span class="number">0.5f</span>; <span class="comment">// 左右声道相加后取平均值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按钮点击事件处理函数，开始录音</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 清空音频缓冲区</span></span><br><span class="line">    m_audioBuffer.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 PortAudio</span></span><br><span class="line">    PaError err = <span class="built_in">Pa_Initialize</span>();</span><br><span class="line">    <span class="keyword">if</span> (err != paNoError) &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize PortAudio.&quot;</span>)); <span class="comment">// 初始化失败，显示错误消息</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置音频流参数</span></span><br><span class="line">    PaStreamParameters inputParameters;</span><br><span class="line">    inputParameters.device = <span class="built_in">Pa_GetDefaultInputDevice</span>(); <span class="comment">// 获取默认输入设备</span></span><br><span class="line">    <span class="keyword">if</span> (inputParameters.device == paNoDevice) &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No default input device.&quot;</span>)); <span class="comment">// 没有默认输入设备，显示错误消息</span></span><br><span class="line">        <span class="built_in">Pa_Terminate</span>(); <span class="comment">// 终止 PortAudio</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    inputParameters.channelCount = <span class="number">2</span>; <span class="comment">// 设置为双声道</span></span><br><span class="line">    inputParameters.sampleFormat = paInt16; <span class="comment">// 采样格式为16位整数</span></span><br><span class="line">    inputParameters.suggestedLatency = <span class="built_in">Pa_GetDeviceInfo</span>(inputParameters.device)-&gt;defaultLowInputLatency;</span><br><span class="line">    inputParameters.hostApiSpecificStreamInfo = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开音频流</span></span><br><span class="line">    err = <span class="built_in">Pa_OpenStream</span>(</span><br><span class="line">        &amp;m_stream,</span><br><span class="line">        &amp;inputParameters,</span><br><span class="line">        <span class="literal">nullptr</span>, <span class="comment">// 没有输出</span></span><br><span class="line">        <span class="number">48000</span>, <span class="comment">// 采样率为48000Hz</span></span><br><span class="line">        <span class="number">2048</span>, <span class="comment">// 每个缓冲区2048帧</span></span><br><span class="line">        paClipOff, <span class="comment">// 禁用剪切</span></span><br><span class="line">        <span class="literal">nullptr</span>, <span class="comment">// 没有回调函数</span></span><br><span class="line">        <span class="literal">nullptr</span>  <span class="comment">// 没有用户数据</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (err != paNoError) &#123;</span><br><span class="line">        CString errorMsg;</span><br><span class="line">        errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to open PortAudio stream: %s&quot;</span>), <span class="built_in">Pa_GetErrorText</span>(err)); <span class="comment">// 打开音频流失败，显示错误消息</span></span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line">        <span class="built_in">Pa_Terminate</span>(); <span class="comment">// 终止 PortAudio</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动音频流</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Pa_StartStream</span>(m_stream) != paNoError) &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start PortAudio stream.&quot;</span>)); <span class="comment">// 启动音频流失败，显示错误消息</span></span><br><span class="line">        <span class="built_in">Pa_CloseStream</span>(m_stream); <span class="comment">// 关闭音频流</span></span><br><span class="line">        <span class="built_in">Pa_Terminate</span>(); <span class="comment">// 终止 PortAudio</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置标志，表示正在录音</span></span><br><span class="line">    m_bListening = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提示用户录音已经开始</span></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording started. Please speak now...&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动录音线程</span></span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(&amp;CSpeechRecognitionPocketSphinxDlg::RecordAudio, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">    t.<span class="built_in">detach</span>(); <span class="comment">// 分离线程，使其在后台运行</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置定时器，在15秒后停止录音</span></span><br><span class="line">    <span class="built_in">SetTimer</span>(TIMER_ID, <span class="number">15000</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、录音"><a href="#3、录音" class="headerlink" title="3、录音"></a>3、录音</h2><p>注意，读取音频数据失败时，需要进行数据转换，语音识别这些一般是Unicode编码，需要转换，否则报错信息乱码，看不懂；转换为宽多字节可以显示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::RecordAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 开始新的识别单元</span></span><br><span class="line">    <span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓冲区用于存储双声道音频数据</span></span><br><span class="line">    <span class="type">int16_t</span> stereoBuffer[<span class="number">2048</span> * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当正在录音时不断读取音频数据</span></span><br><span class="line">    <span class="keyword">while</span> (m_bListening) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 从音频流中读取数据到缓冲区</span></span><br><span class="line">        PaError err = <span class="built_in">Pa_ReadStream</span>(m_stream, stereoBuffer, <span class="number">2048</span>);</span><br><span class="line">        <span class="keyword">if</span> (err != paNoError)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 读取音频数据失败，显示错误消息</span></span><br><span class="line">            CString errorMsg;</span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                WCHAR* wcsErrorText = <span class="keyword">new</span> WCHAR[len];</span><br><span class="line">                <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, wcsErrorText, len);</span><br><span class="line">                errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to read audio: %s&quot;</span>), wcsErrorText);</span><br><span class="line">                <span class="keyword">delete</span>[] wcsErrorText;</span><br><span class="line">            &#125; <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                errorMsg = _T(<span class="string">&quot;Failed to read audio: Unknown error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">// 退出循环</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将双声道数据转换为单声道数据，并添加到缓冲区</span></span><br><span class="line">        <span class="function">std::vector&lt;<span class="type">int16_t</span>&gt; <span class="title">monoBuffer</span><span class="params">(<span class="number">2048</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; <span class="number">2048</span>; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            monoBuffer[i] = (stereoBuffer[i * <span class="number">2</span>] + stereoBuffer[i * <span class="number">2</span> + <span class="number">1</span>]) / <span class="number">2</span>; <span class="comment">// 简单平均以获得单声道数据</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将单声道数据添加到音频缓冲区</span></span><br><span class="line">        m_audioBuffer.<span class="built_in">insert</span>(m_audioBuffer.<span class="built_in">end</span>(), monoBuffer.<span class="built_in">begin</span>(), monoBuffer.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将单声道数据传递给 PocketSphinx 进行处理</span></span><br><span class="line">        <span class="built_in">ps_process_raw</span>(m_ps, monoBuffer.<span class="built_in">data</span>(), monoBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 结束识别单元</span></span><br><span class="line">    <span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止音频流</span></span><br><span class="line">    <span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line">    <span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line">    <span class="built_in">Pa_Terminate</span>(); <span class="comment">// 终止 PortAudio</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、识别"><a href="#4、识别" class="headerlink" title="4、识别"></a>4、识别</h2><p>注意转换音频格式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::ProcessRecordedAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 如果音频缓冲区为空，提示没有音频数据可处理</span></span><br><span class="line">    <span class="keyword">if</span> (m_audioBuffer.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No audio data to process.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确保 PocketSphinx 已正确初始化</span></span><br><span class="line">    <span class="keyword">if</span> (!m_ps)</span><br><span class="line">    &#123;</span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开始新的识别单元</span></span><br><span class="line">    <span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理录制的音频数据</span></span><br><span class="line">    <span class="built_in">ps_process_raw</span>(m_ps, m_audioBuffer.<span class="built_in">data</span>(), m_audioBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 结束识别单元</span></span><br><span class="line">    <span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取识别结果</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">            <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line">            <span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将识别结果显示在编辑框中</span></span><br><span class="line">            m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 转换识别结果失败，提示错误信息</span></span><br><span class="line">            m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;Failed to convert recognition result.&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 没有检测到结果，提示信息</span></span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从识别结果中提取文本</span></span><br><span class="line"><span class="function">CString <span class="title">CSpeechRecognitionPocketSphinxDlg::ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CString</span>(hyp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、定时器"><a href="#5、定时器" class="headerlink" title="5、定时器"></a>5、定时器</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (nIDEvent == TIMER_ID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CDialogEx::<span class="built_in">OnTimer</span>(nIDEvent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、结束按钮"><a href="#6、结束按钮" class="headerlink" title="6、结束按钮"></a>6、结束按钮</h2><p>音频数据不要一直循环启动，这样识别很乱，一个开始按钮，一个结束按钮；或者就设置15s的录音时间，然后进行读取录音数据，进行识别信息</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSpeechRecognitionPocketSphinxDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止 PortAudio 流</span></span><br><span class="line"><span class="keyword">if</span> (m_stream) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示用户停止录音</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording stopped. Processing data...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 语音识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音识别_SAPI实现语音识别(四)</title>
      <link href="/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/SAPI/"/>
      <url>/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/SAPI/</url>
      
        <content type="html"><![CDATA[<h1 id="一、SAPI"><a href="#一、SAPI" class="headerlink" title="一、SAPI"></a>一、SAPI</h1><h2 id="SAPI-Speech-Application-Programming-Interface-进行语音识别过程笔记"><a href="#SAPI-Speech-Application-Programming-Interface-进行语音识别过程笔记" class="headerlink" title="SAPI (Speech Application Programming Interface) 进行语音识别过程笔记"></a>SAPI (Speech Application Programming Interface) 进行语音识别过程笔记</h2><p>SAPI 是微软提供的一个接口，用于语音识别和语音合成。以下是使用 SAPI 进行语音识别的过程笔记，包括初始化、配置、启动识别、处理结果等步骤。</p><h2 id="1-初始化-COM-库"><a href="#1-初始化-COM-库" class="headerlink" title="1. 初始化 COM 库"></a>1. 初始化 COM 库</h2><p>在使用 SAPI 之前，必须初始化 COM 库。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理初始化失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-创建语音识别引擎"><a href="#2-创建语音识别引擎" class="headerlink" title="2. 创建语音识别引擎"></a>2. 创建语音识别引擎</h2><p>创建语音识别引擎的实例。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;ISpRecognizer&gt; pRecognizer;</span><br><span class="line">hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpInprocRecognizer, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpRecognizer, (<span class="type">void</span>**)&amp;pRecognizer);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理创建失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-配置语音识别引擎"><a href="#3-配置语音识别引擎" class="headerlink" title="3. 配置语音识别引擎"></a>3. 配置语音识别引擎</h2><p>设置语音识别引擎的属性，如音频输入设备和语音识别引擎。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;ISpRecoContext&gt; pRecoContext;</span><br><span class="line">hr = pRecognizer-&gt;<span class="built_in">CreateRecoContext</span>(&amp;pRecoContext);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理创建失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CComPtr&lt;ISpRecoGrammar&gt; pRecoGrammar;</span><br><span class="line">hr = pRecoContext-&gt;<span class="built_in">CreateGrammar</span>(<span class="number">0</span>, &amp;pRecoGrammar);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理创建失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载语法</span></span><br><span class="line">hr = pRecoGrammar-&gt;<span class="built_in">LoadDictation</span>(<span class="literal">NULL</span>, SPLO_STATIC);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理加载语法失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-设置音频输入"><a href="#4-设置音频输入" class="headerlink" title="4. 设置音频输入"></a>4. 设置音频输入</h2><p>选择和配置音频输入设备。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;ISpAudio&gt; pAudio;</span><br><span class="line">hr = <span class="built_in">SpCreateDefaultObjectFromCategoryId</span>(SPCAT_AUDIOIN, &amp;pAudio);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理创建失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr = pRecognizer-&gt;<span class="built_in">SetInput</span>(pAudio, TRUE);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理设置输入失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-启动识别"><a href="#5-启动识别" class="headerlink" title="5. 启动识别"></a>5. 启动识别</h2><p>设置语音识别模式和开始识别过程。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hr = pRecoContext-&gt;<span class="built_in">SetNotifyWin32Event</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理设置失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr = pRecoGrammar-&gt;<span class="built_in">SetRuleState</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, SPRS_ACTIVE);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理设置规则状态失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr = pRecognizer-&gt;<span class="built_in">SetRecoState</span>(SPRST_ACTIVE);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理设置识别状态失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-处理识别结果"><a href="#6-处理识别结果" class="headerlink" title="6. 处理识别结果"></a>6. 处理识别结果</h2><p>接收和处理识别结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;ISpRecoResult&gt; pResult;</span><br><span class="line">hr = pRecoContext-&gt;<span class="built_in">GetResult</span>(&amp;pResult);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line">    CComBSTR bstrText;</span><br><span class="line">    hr = pResult-&gt;<span class="built_in">GetText</span>(SP_GETWHOLEPHRASE, SP_GETWHOLEPHRASE, TRUE, &amp;bstrText, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line">        <span class="function">std::wstring <span class="title">recognizedText</span><span class="params">(bstrText)</span></span>;</span><br><span class="line">        <span class="comment">// 处理识别结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-结束识别"><a href="#7-结束识别" class="headerlink" title="7. 结束识别"></a>7. 结束识别</h2><p>停止识别并释放资源。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hr = pRecognizer-&gt;<span class="built_in">SetRecoState</span>(SPRST_INACTIVE);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) &#123;</span><br><span class="line">    <span class="comment">// 处理设置失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放资源</span></span><br><span class="line">::<span class="built_in">CoUninitialize</span>();</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><strong>初始化 COM 库</strong>: 确保在任何 SAPI 操作之前正确初始化 COM 库，并在操作完成后释放资源。</li><li><strong>创建和配置识别引擎</strong>: 创建语音识别引擎实例，并配置音频输入和语法。</li><li><strong>启动和管理识别过程</strong>: 启动语音识别并处理识别结果。</li><li><strong>资源管理</strong>: 确保在完成操作后正确释放资源。</li></ol><p>这个过程为使用 SAPI 进行语音识别提供了一个基本的框架，你可以根据具体的需求进行扩展和调整。</p><h1 id="二、数据库内容"><a href="#二、数据库内容" class="headerlink" title="二、数据库内容"></a>二、数据库内容</h1><table><thead><tr><th>识别数据库内容</th><th></th><th></th><th>回复数据库内容</th><th></th><th></th></tr></thead><tbody><tr><td>序号</td><td>内容</td><td></td><td></td><td>序号</td><td>内容</td></tr><tr><td>0</td><td>小度小度</td><td></td><td></td><td>0</td><td>我在</td></tr><tr><td>1</td><td>调车白灯-8</td><td>9</td><td></td><td>1</td><td>调车白灯</td></tr><tr><td>2</td><td>负载断开</td><td>8</td><td></td><td>2</td><td>负载断开</td></tr><tr><td>3</td><td>进路开通 8</td><td>9</td><td></td><td>3</td><td>进路开通</td></tr><tr><td>4</td><td>母线重联、负载断开</td><td></td><td></td><td>4</td><td>母线重联、负载断开</td></tr><tr><td>5</td><td>注意进站</td><td></td><td></td><td>5</td><td>注意进站</td></tr><tr><td>6</td><td>开左侧门</td><td></td><td></td><td>6</td><td>开左侧门</td></tr><tr><td>7</td><td>欢迎您乘坐5号线列车</td><td></td><td></td><td>7</td><td>欢迎您乘坐5号线列车</td></tr><tr><td>8</td><td>列车运行前方是北京站，请下车的乘客做好准备</td><td></td><td></td><td>8</td><td>列车运行前方是北京站，请下车的乘客做好准备</td></tr><tr><td>9</td><td>列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见</td><td></td><td></td><td>9</td><td>列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见</td></tr><tr><td>10</td><td>各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作</td><td></td><td></td><td>10</td><td>各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作</td></tr><tr><td>11</td><td>各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作</td><td></td><td></td><td>11</td><td>各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作</td></tr><tr><td>12</td><td>各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作</td><td></td><td></td><td>12</td><td>各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作</td></tr><tr><td>13</td><td>各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解</td><td></td><td></td><td>13</td><td>各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解</td></tr></tbody></table><h1 id="三、数据库实现"><a href="#三、数据库实现" class="headerlink" title="三、数据库实现"></a>三、数据库实现</h1><h2 id="1、启动mysql"><a href="#1、启动mysql" class="headerlink" title="1、启动mysql"></a>1、启动mysql</h2><p>用户密码：还是我的常用密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> mysql <span class="comment">--version</span></span><br><span class="line">D:\DevelopmentTools\Mysql\mysql<span class="number">-5.7</span><span class="number">.24</span><span class="operator">-</span>winx64\bin\mysql.exe  Ver <span class="number">14.14</span> Distrib <span class="number">5.7</span><span class="number">.24</span>, <span class="keyword">for</span> Win64 (x86_64)</span><br><span class="line"></span><br><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> net <span class="keyword">start</span> mysql</span><br><span class="line">请求的服务已经启动。</span><br><span class="line"></span><br><span class="line">请键入 NET HELPMSG <span class="number">2182</span> 以获得更多的帮助。</span><br><span class="line"></span><br><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></table></figure><h2 id="2、MySQL-数据库配置与插入中文数据"><a href="#2、MySQL-数据库配置与插入中文数据" class="headerlink" title="2、MySQL 数据库配置与插入中文数据"></a>2、MySQL 数据库配置与插入中文数据</h2><p>在 MySQL 中，插入中文数据需要确保数据库和表的字符集设置为支持中文的字符集（如 utf8mb4）。以下是创建数据库和表结构以及插入中文数据的正确方法。</p><h3 id="1-创建数据库和表结构"><a href="#1-创建数据库和表结构" class="headerlink" title="1. 创建数据库和表结构"></a>1. 创建数据库和表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库并设置字符集</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE VoiceAssistant <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用创建的数据库</span></span><br><span class="line">USE VoiceAssistant;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建识别内容表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> RecognizeContent (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    content <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建回复内容表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ReplyContent (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    content <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="2-插入数据"><a href="#2-插入数据" class="headerlink" title="2. 插入数据"></a>2. 插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入识别内容</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> RecognizeContent (content) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;小度小度&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;调车白灯&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;进路开通&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;母线重联、负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;注意进站&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;开左侧门&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;欢迎您乘坐5号线列车&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是北京站，请下车的乘客做好准备&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入回复内容</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReplyContent (content) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;我在&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;调车白灯&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;进路开通&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;母线重联、负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;注意进站&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;开左侧门&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;欢迎您乘坐5号线列车&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是北京站，请下车的乘客做好准备&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="四、初始化SAPI和释放资源"><a href="#四、初始化SAPI和释放资源" class="headerlink" title="四、初始化SAPI和释放资源"></a>四、初始化SAPI和释放资源</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::InitializeSAPI</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer.<span class="built_in">CoCreateInstance</span>(CLSID_SpInprocRecognizer);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognizer: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">CreateRecoContext</span>(&amp;m_pRecoContext);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognition context: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">CreateGrammar</span>(<span class="number">1</span>, &amp;m_pGrammar);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">LoadDictation</span>(<span class="literal">NULL</span>, SPLO_STATIC);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to load dictation grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set dictation state: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetNotifyWin32Event</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set notify event: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetInterest</span>(<span class="built_in">SPFEI</span>(SPEI_RECOGNITION), <span class="built_in">SPFEI</span>(SPEI_RECOGNITION));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set interest for recognition events: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpMMAudioIn, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ISpAudio, (<span class="type">void</span>**)&amp;m_cpAudio);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create audio input object: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">SetInput</span>(m_cpAudio, TRUE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set audio input: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Initialize SAPI is successful&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CSapiASRDlg::~<span class="built_in">CSapiASRDlg</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (m_bRunning)</span><br><span class="line">    &#123;</span><br><span class="line">        m_bRunning = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pGrammar)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pRecoContext)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pRecoContext.<span class="built_in">Release</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pRecognizer)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pRecognizer.<span class="built_in">Release</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="五、开始录音和结束录音"><a href="#五、开始录音和结束录音" class="headerlink" title="五、开始录音和结束录音"></a>五、开始录音和结束录音</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_ACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition started.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_bRunning)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition is not started.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to stop recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在这里进行语音识别，并将结果显示在编辑框中</span></span><br><span class="line">    <span class="built_in">PerformRecognition</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition stopped.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六、识别语音"><a href="#六、识别语音" class="headerlink" title="六、识别语音"></a>六、识别语音</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::PerformRecognition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = m_pRecoContext-&gt;<span class="built_in">WaitForNotifyEvent</span>(<span class="number">1000</span>);  <span class="comment">// 1-second timeout</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CSpEvent event;</span><br><span class="line">    <span class="keyword">while</span> (event.<span class="built_in">GetFrom</span>(m_pRecoContext) == S_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.eEventId == SPEI_RECOGNITION)</span><br><span class="line">        &#123;</span><br><span class="line">            ISpRecoResult* pResult = event.<span class="built_in">RecoResult</span>();</span><br><span class="line">            <span class="keyword">if</span> (pResult)</span><br><span class="line">            &#123;</span><br><span class="line">                LPWSTR pwszText = <span class="literal">nullptr</span>;</span><br><span class="line">                hr = pResult-&gt;<span class="built_in">GetText</span>(SP_GETWHOLEPHRASE, SP_GETWHOLEPHRASE, FALSE, &amp;pwszText, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">                &#123;</span><br><span class="line">                    CString* pNewText = <span class="keyword">new</span> <span class="built_in">CString</span>(pwszText);</span><br><span class="line">                    <span class="built_in">PostMessage</span>(WM_USER_UPDATE_TEXT, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(pNewText), <span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">CoTaskMemFree</span>(pwszText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CSapiASRDlg, CDialogEx)</span><br><span class="line">    <span class="built_in">ON_MESSAGE</span>(WM_USER_UPDATE_TEXT, &amp;CSapiASRDlg::OnUpdateText)</span><br><span class="line">    <span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_CLEAR, &amp;CSapiASRDlg::OnBnClickedButtonClear)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br></pre></td></tr></table></figure><h1 id="七、更新文本"><a href="#七、更新文本" class="headerlink" title="七、更新文本"></a>七、更新文本</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT <span class="title">CSapiASRDlg::OnUpdateText</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CString* pNewText = <span class="built_in">reinterpret_cast</span>&lt;CString*&gt;(wParam);</span><br><span class="line">    <span class="keyword">if</span> (pNewText)</span><br><span class="line">    &#123;</span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(*pNewText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::wstring <span class="title">newText</span><span class="params">((*pNewText).GetString())</span></span>;</span><br><span class="line">    std::wstring bestMatch;</span><br><span class="line">    <span class="type">int</span> bestMatchId = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> minDistance = INT_MAX;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row_data : m_database)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> distance = <span class="built_in">levenshteinDistance</span>(newText, std::<span class="built_in">wstring</span>(row_data.<span class="built_in">GetString</span>()));</span><br><span class="line">        <span class="keyword">if</span> (distance &lt; minDistance)</span><br><span class="line">        &#123;</span><br><span class="line">            minDistance = distance;</span><br><span class="line">            bestMatch = row_data.<span class="built_in">GetString</span>();</span><br><span class="line">            bestMatchId = i;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最相似的结果输出到编辑框</span></span><br><span class="line">    m_edtResult.<span class="built_in">SetWindowText</span>(bestMatch.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="comment">//CString content = GetReplyContent(bestMatch.c_str());</span></span><br><span class="line">    CString content = <span class="built_in">GetReplyContentById</span>(bestMatchId);</span><br><span class="line">    m_edtResponse.<span class="built_in">SetWindowTextW</span>(content);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> pNewText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="八、连接MYSQL数据库，获取对照文本"><a href="#八、连接MYSQL数据库，获取对照文本" class="headerlink" title="八、连接MYSQL数据库，获取对照文本"></a>八、连接MYSQL数据库，获取对照文本</h1><p><a href="https://blog.csdn.net/qq_31762741/article/details/115044657">Visual Studio 2019连接MySQL数据库详细教程_visual studio服务器资源管理器 数据连接-CSDN博客</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::connectToDatabase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MYSQL* conn;</span><br><span class="line">    MYSQL_RES* res;</span><br><span class="line">    MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;13525681378.Ll&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">    conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接数据库</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置连接的字符集</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行查询</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, <span class="string">&quot;SELECT * FROM RecognizeContent&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出查询结果</span></span><br><span class="line">    <span class="type">int</span> num_fields = <span class="built_in">mysql_num_fields</span>(res);</span><br><span class="line">    <span class="keyword">while</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">    &#123;</span><br><span class="line">        CString m_data;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_fields; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (row[i] == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m_data.<span class="built_in">Format</span>(_T(<span class="string">&quot;NULL&quot;</span>));</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                CString errorMsg;</span><br><span class="line">                errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line">                <span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">            <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 去除最后一个空字符</span></span><br><span class="line">            <span class="keyword">if</span> (!wstr.<span class="built_in">empty</span>() &amp;&amp; wstr.<span class="built_in">back</span>() == <span class="string">L&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">                wstr.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            m_data.<span class="built_in">Format</span>(_T(<span class="string">&quot;%s&quot;</span>), wstr.<span class="built_in">c_str</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        m_database.<span class="built_in">push_back</span>(m_data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放结果集</span></span><br><span class="line">    <span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭连接</span></span><br><span class="line">    <span class="built_in">mysql_close</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示查询结果</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row : m_database)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(row);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h2><h3 id="1、找不到mysql-h"><a href="#1、找不到mysql-h" class="headerlink" title="1、找不到mysql.h"></a>1、找不到mysql.h</h3><p>解决方案：将mysql的include路径和lib路径设置在项目属性中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\DevelopmentTools\Mysql\mysql-5.7.24-winx64\include</span><br><span class="line"></span><br><span class="line">D:\DevelopmentTools\Mysql\mysql-5.7.24-winx64\lib</span><br><span class="line"></span><br><span class="line">链接器找到libmysql.lib,添加进去即可</span><br></pre></td></tr></table></figure><h3 id="2、mysql查找的数据是？乱码"><a href="#2、mysql查找的数据是？乱码" class="headerlink" title="2、mysql查找的数据是？乱码"></a>2、mysql查找的数据是？乱码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))<span class="comment">// 设置连接的字符集为utf8mb4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时，对得到的字符还要转换为宽字节</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(result);</span><br></pre></td></tr></table></figure><h1 id="九、语音识别结果处理"><a href="#九、语音识别结果处理" class="headerlink" title="九、语音识别结果处理"></a>九、语音识别结果处理</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CString <span class="title">CSapiASRDlg::GetReplyContentById</span><span class="params">(<span class="type">int</span> testId)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MYSQL* conn;</span><br><span class="line">    MYSQL_RES* res;</span><br><span class="line">    MYSQL_ROW row;</span><br><span class="line">    CString replyContent;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;13525681378.Ll&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">    conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建查询语句</span></span><br><span class="line"></span><br><span class="line">    std::string query = <span class="string">&quot;SELECT content FROM ReplyContent WHERE id = &quot;</span> + std::<span class="built_in">to_string</span>(testId);</span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(<span class="built_in">CString</span>(query.<span class="built_in">c_str</span>()));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT content FROM ReplyContent failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line">    <span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">            <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line">            replyContent = wstr.<span class="built_in">c_str</span>();</span><br><span class="line">            <span class="built_in">speak</span>(wstr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to convert reply content to wide string.&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No matching content found.&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">mysql_free_result</span>(res);</span><br><span class="line">    <span class="built_in">mysql_close</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> replyContent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是添加了详细注释的 Levenshtein 距离算法代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">CSapiASRDlg::levenshteinDistance</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取两个字符串的长度</span></span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">m</span><span class="params">(s<span class="number">1.</span>size())</span></span>;</span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">n</span><span class="params">(s<span class="number">2.</span>size())</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果第一个字符串为空，返回第二个字符串的长度</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line">    <span class="comment">// 如果第二个字符串为空，返回第一个字符串的长度</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> m;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个 (m+1) x (n+1) 的二维矩阵，用于存储计算结果</span></span><br><span class="line">    std::vector&lt;std::vector&lt;<span class="type">size_t</span>&gt;&gt; <span class="built_in">matrix</span>(m + <span class="number">1</span>, std::<span class="built_in">vector</span>&lt;<span class="type">size_t</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化第一列，表示将 s1 转换为空字符串的代价</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt;= m; ++i) matrix[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="comment">// 初始化第一行，表示将空字符串转换为 s2 的代价</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt;= n; ++j) matrix[<span class="number">0</span>][j] = j;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算矩阵的其他元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果字符相同，代价为 0，否则代价为 1</span></span><br><span class="line">            <span class="type">size_t</span> cost = (s1[i - <span class="number">1</span>] == s2[j - <span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 计算删除、插入和替换操作的代价</span></span><br><span class="line">            <span class="type">size_t</span> deletion = matrix[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> insertion = matrix[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> substitution = matrix[i - <span class="number">1</span>][j - <span class="number">1</span>] + cost;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 取三者中的最小值</span></span><br><span class="line">            <span class="type">size_t</span> minValue = deletion;</span><br><span class="line">            <span class="keyword">if</span> (insertion &lt; minValue)</span><br><span class="line">                minValue = insertion;</span><br><span class="line">            <span class="keyword">if</span> (substitution &lt; minValue)</span><br><span class="line">                minValue = substitution;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将计算结果存储在矩阵中</span></span><br><span class="line">            matrix[i][j] = minValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终的 Levenshtein 距离</span></span><br><span class="line">    <span class="type">size_t</span> distance = matrix[m][n];</span><br><span class="line">    <span class="comment">// 计算两个字符串长度的差异</span></span><br><span class="line">    <span class="type">size_t</span> lengthDifference = std::<span class="built_in">abs</span>(<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(m) - <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加长度差异的惩罚项，使用比例因子调整权重</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> lengthPenaltyFactor = <span class="number">0.5f</span>; <span class="comment">// 可根据需要调整比例因子</span></span><br><span class="line">    <span class="type">size_t</span> lengthPenalty = <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(lengthDifference * lengthPenaltyFactor);</span><br><span class="line">    <span class="comment">// 将惩罚项添加到最终距离中</span></span><br><span class="line">    distance += lengthPenalty;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回最终的距离</span></span><br><span class="line">    <span class="keyword">return</span> distance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">CSapiASRDlg::jaroWinklerDistance</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> len1 = s<span class="number">1.</span><span class="built_in">size</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> len2 = s<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (len1 == <span class="number">0</span> || len2 == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义实现 std::max 和 std::min</span></span><br><span class="line">    <span class="keyword">auto</span> customMax = [](<span class="type">size_t</span> a, <span class="type">size_t</span> b) -&gt; <span class="type">size_t</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> customMin = [](<span class="type">size_t</span> a, <span class="type">size_t</span> b) -&gt; <span class="type">size_t</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a &lt; b ? a : b;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> matchWindow = <span class="built_in">customMax</span>(len1, len2) / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="function">std::vector&lt;<span class="type">bool</span>&gt; <span class="title">s1Matches</span><span class="params">(len1, <span class="literal">false</span>)</span></span>;</span><br><span class="line">    <span class="function">std::vector&lt;<span class="type">bool</span>&gt; <span class="title">s2Matches</span><span class="params">(len2, <span class="literal">false</span>)</span></span>;</span><br><span class="line">    <span class="type">size_t</span> matches = <span class="number">0</span>;</span><br><span class="line">    <span class="type">size_t</span> transpositions = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Find matches</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len1; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> start = <span class="built_in">customMax</span>(i &gt; matchWindow ? i - matchWindow : <span class="number">0</span>, <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">0</span>));</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> end = <span class="built_in">customMin</span>(i + matchWindow + <span class="number">1</span>, len2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = start; j &lt; end; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s2Matches[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (s1[i] != s2[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            s1Matches[i] = <span class="literal">true</span>;</span><br><span class="line">            s2Matches[j] = <span class="literal">true</span>;</span><br><span class="line">            ++matches;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (matches == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">size_t</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; len1; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!s1Matches[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!s2Matches[k])</span><br><span class="line">            ++k;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s1[i] != s2[k])</span><br><span class="line">            ++transpositions;</span><br><span class="line"></span><br><span class="line">        ++k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> jaro = (matches / <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(len1) +</span><br><span class="line">        matches / <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(len2) +</span><br><span class="line">        (matches - transpositions / <span class="number">2.0f</span>) / <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(matches)) / <span class="number">3.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Apply Winkler bonus for common prefix</span></span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> prefixLength = <span class="built_in">customMin</span>(<span class="built_in">customMin</span>(len1, len2), <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(<span class="number">4</span>));</span><br><span class="line">    <span class="type">size_t</span> commonPrefix = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (commonPrefix &lt; prefixLength &amp;&amp; s1[commonPrefix] == s2[commonPrefix])</span><br><span class="line">        ++commonPrefix;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jaro + <span class="number">0.1f</span> * commonPrefix * (<span class="number">1.0f</span> - jaro);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">CSapiASRDlg::cosineSimilarity</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::unordered_map&lt;<span class="type">wchar_t</span>, <span class="type">size_t</span>&gt; freq1, freq2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算频率</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; c : s1)</span><br><span class="line">        ++freq1[c];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; c : s2)</span><br><span class="line">        ++freq2[c];</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> dotProduct = <span class="number">0.0f</span>;</span><br><span class="line">    <span class="type">float</span> norm1 = <span class="number">0.0f</span>;</span><br><span class="line">    <span class="type">float</span> norm2 = <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算点积</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; [key, value] : freq1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> it = freq<span class="number">2.f</span>ind(key);</span><br><span class="line">        <span class="keyword">if</span> (it != freq<span class="number">2.</span><span class="built_in">end</span>())</span><br><span class="line">            dotProduct += value * it-&gt;second;</span><br><span class="line"></span><br><span class="line">        norm1 += value * value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算范数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; [key, value] : freq2)</span><br><span class="line">        norm2 += value * value;</span><br><span class="line"></span><br><span class="line">    norm1 = std::<span class="built_in">sqrt</span>(norm1);</span><br><span class="line">    norm2 = std::<span class="built_in">sqrt</span>(norm2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理范数为零的情况</span></span><br><span class="line">    <span class="keyword">if</span> (norm1 == <span class="number">0.0f</span> || norm2 == <span class="number">0.0f</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dotProduct / (norm1 * norm2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">CSapiASRDlg::jaccardSimilarity</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">std::unordered_set&lt;<span class="type">wchar_t</span>&gt; <span class="title">set1</span><span class="params">(s<span class="number">1.</span>begin(), s<span class="number">1.</span>end())</span></span>;</span><br><span class="line">    <span class="function">std::unordered_set&lt;<span class="type">wchar_t</span>&gt; <span class="title">set2</span><span class="params">(s<span class="number">2.</span>begin(), s<span class="number">2.</span>end())</span></span>;</span><br><span class="line"></span><br><span class="line">    std::unordered_set&lt;<span class="type">wchar_t</span>&gt; intersection;</span><br><span class="line">    <span class="function">std::unordered_set&lt;<span class="type">wchar_t</span>&gt; <span class="title">unionSet</span><span class="params">(set1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; c : set2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (set<span class="number">1.f</span>ind(c) != set<span class="number">1.</span><span class="built_in">end</span>())</span><br><span class="line">            intersection.<span class="built_in">insert</span>(c);</span><br><span class="line">        unionSet.<span class="built_in">insert</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (unionSet.<span class="built_in">empty</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(intersection.<span class="built_in">size</span>()) / unionSet.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to compute Sift4 similarity</span></span><br><span class="line"></span><br><span class="line"><span class="function">std::unordered_set&lt;std::wstring&gt; <span class="title">generateCharacterPairs</span><span class="params">(<span class="type">const</span> std::wstring&amp; str)</span> </span>&#123;</span><br><span class="line">    std::unordered_set&lt;std::wstring&gt; pairs;</span><br><span class="line">    <span class="keyword">if</span> (str.<span class="built_in">size</span>() &lt; <span class="number">2</span>) <span class="keyword">return</span> pairs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>() - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        pairs.<span class="built_in">insert</span>(str.<span class="built_in">substr</span>(i, <span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pairs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">CSapiASRDlg::sift4Similarity</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生成字符对</span></span><br><span class="line">    <span class="keyword">auto</span> pairs1 = <span class="built_in">generateCharacterPairs</span>(s1);</span><br><span class="line">    <span class="keyword">auto</span> pairs2 = <span class="built_in">generateCharacterPairs</span>(s2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算交集</span></span><br><span class="line">    std::unordered_set&lt;std::wstring&gt; intersection;</span><br><span class="line">    <span class="function">std::unordered_set&lt;std::wstring&gt; <span class="title">unionSet</span><span class="params">(pairs1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; pair : pairs2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pairs<span class="number">1.f</span>ind(pair) != pairs<span class="number">1.</span><span class="built_in">end</span>()) &#123;</span><br><span class="line">            intersection.<span class="built_in">insert</span>(pair);</span><br><span class="line">        &#125;</span><br><span class="line">        unionSet.<span class="built_in">insert</span>(pair);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (unionSet.<span class="built_in">empty</span>()) <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算相似度</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(intersection.<span class="built_in">size</span>()) / unionSet.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h3><ol><li><p><strong>字符串长度获取</strong>:</p><ul><li><code>const size_t m(s1.size());</code> 获取第一个字符串的长度。</li><li><code>const size_t n(s2.size());</code> 获取第二个字符串的长度。</li></ul></li><li><p><strong>处理空字符串的情况</strong>:</p><ul><li>如果 <code>s1</code> 为空，返回 <code>s2</code> 的长度。</li><li>如果 <code>s2</code> 为空，返回 <code>s1</code> 的长度。</li></ul></li><li><p><strong>初始化矩阵</strong>:</p><ul><li>创建一个大小为 <code>(m+1) x (n+1)</code> 的二维矩阵 <code>matrix</code>，用于存储中间计算结果。</li><li>初始化第一列和第一行，表示将字符串转换为空字符串或从空字符串转换的代价。</li></ul></li><li><p><strong>填充矩阵</strong>:</p><ul><li>遍历每个字符，计算删除、插入和替换操作的代价，并取三者中的最小值，存储在矩阵中。</li></ul></li><li><p><strong>计算最终的 Levenshtein 距离</strong>:</p><ul><li><code>size_t distance = matrix[m][n];</code> 获取最终的 Levenshtein 距离。</li><li>计算两个字符串长度的差异，并根据比例因子 <code>lengthPenaltyFactor</code> 调整权重，添加到最终距离中。</li></ul></li></ol><p>通过这种方法，可以在计算 Levenshtein 距离时更好地考虑字符串长度的差异，同时避免相同长度字符串都跑到一个去的问题。</p><h1 id="十、语音播报"><a href="#十、语音播报" class="headerlink" title="十、语音播报"></a>十、语音播报</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::speak</span><span class="params">(<span class="type">const</span> std::wstring&amp; text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CComPtr&lt;ISpVoice&gt; pVoice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 COM 库</span></span><br><span class="line">    HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 SAPI 语音实例</span></span><br><span class="line">    hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span>**)&amp;pVoice);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 朗读文本</span></span><br><span class="line">        hr = pVoice-&gt;<span class="built_in">Speak</span>(text.<span class="built_in">c_str</span>(), SPF_DEFAULT, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Speak failed.&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to create voice instance.&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十一、数据库账号保存在文件中"><a href="#十一、数据库账号保存在文件中" class="headerlink" title="十一、数据库账号保存在文件中"></a>十一、数据库账号保存在文件中</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取配置文件函数</span></span><br><span class="line"><span class="function">std::map&lt;std::string, std::string&gt; <span class="title">readConfigFile</span><span class="params">(<span class="type">const</span> std::string&amp; filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">std::ifstream <span class="title">file</span><span class="params">(filename)</span></span>;</span><br><span class="line">    std::map&lt;std::string, std::string&gt; config;</span><br><span class="line">    std::string line;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (std::<span class="built_in">getline</span>(file, line))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">size_t</span> pos = line.<span class="built_in">find</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (pos != std::string::npos)</span><br><span class="line">        &#123;</span><br><span class="line">            std::string key = line.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">            std::string value = line.<span class="built_in">substr</span>(pos + <span class="number">1</span>);</span><br><span class="line">            config[key] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">// 读取配置文件</span></span><br><span class="line">    std::map&lt;std::string, std::string&gt; config = <span class="built_in">readConfigFile</span>(<span class="string">&quot;db_config.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* server = config[<span class="string">&quot;server&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* user = config[<span class="string">&quot;user&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* password = config[<span class="string">&quot;password&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* database = config[<span class="string">&quot;database&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>导出数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p VoiceAssistant &gt; VoiceAssistant.sql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>-u root</code> 指定 MySQL 用户名为 <code>root</code>。</li><li><code>-p</code> 提示输入密码。</li><li><code>VoiceAssistant</code> 是要导出的数据库名称。</li><li><code>&gt; VoiceAssistant.sql</code> 将输出重定向到 <code>VoiceAssistant.sql</code> 文件。</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sapi.h&gt;</span>  <span class="comment">// 添加 SAPI 头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(push)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable: 4996)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphelper.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atomic&gt;</span>  <span class="comment">// 添加 atomic 头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(pop)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mysql.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WM_USER_UPDATE_TEXT (WM_USER + 1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CSapiASRDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CSapiASRDlg</span>(CWnd* pParent = <span class="literal">nullptr</span>);</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">CSapiASRDlg</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line">    <span class="keyword">enum</span> &#123; IDD = IDD_SAPIASR_DIALOG &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStart</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStop</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">afx_msg LRESULT <span class="title">OnUpdateText</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">PerformRecognition</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">connectToDatabase</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">levenshteinDistance</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span>;</span><br><span class="line">    <span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">InitializeSAPI</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">OnRecognition</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    HICON m_hIcon;</span><br><span class="line">    CComPtr&lt;ISpRecognizer&gt; m_pRecognizer;</span><br><span class="line">    CComPtr&lt;ISpRecoContext&gt; m_pRecoContext;</span><br><span class="line">    CComPtr&lt;ISpRecoGrammar&gt; m_pGrammar;</span><br><span class="line">    CComPtr&lt;ISpAudio&gt; m_cpAudio;</span><br><span class="line">    CEdit m_edtText;</span><br><span class="line">    CString m_lastRecognizedText;</span><br><span class="line">    HANDLE m_hThread;</span><br><span class="line">    <span class="type">bool</span> m_bRunning;</span><br><span class="line"></span><br><span class="line">    std::vector&lt;CString&gt; m_database;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CEdit m_edtResult;</span><br><span class="line">    CEdit m_edtIdResult;</span><br><span class="line">    CEdit m_edtResponse;</span><br><span class="line">    CEdit m_edtIdResponse;</span><br><span class="line">    <span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonClear</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">GetReplyContent</span><span class="params">(<span class="type">const</span> std::string&amp; recognizedText)</span></span>;</span><br><span class="line">    <span class="function">CString <span class="title">GetReplyContentById</span><span class="params">(<span class="type">int</span> testId)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">(<span class="type">const</span> std::wstring&amp; text)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SapiASR.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SapiASRDlg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;afxdialogex.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sapi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(push)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable: 4996)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphelper.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(pop)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atlbase.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取配置文件函数</span></span><br><span class="line"><span class="function">std::map&lt;std::string, std::string&gt; <span class="title">readConfigFile</span><span class="params">(<span class="type">const</span> std::string&amp; filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">std::ifstream <span class="title">file</span><span class="params">(filename)</span></span>;</span><br><span class="line">    std::map&lt;std::string, std::string&gt; config;</span><br><span class="line">    std::string line;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (std::<span class="built_in">getline</span>(file, line))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">size_t</span> pos = line.<span class="built_in">find</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (pos != std::string::npos)</span><br><span class="line">        &#123;</span><br><span class="line">            std::string key = line.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">            std::string value = line.<span class="built_in">substr</span>(pos + <span class="number">1</span>);</span><br><span class="line">            config[key] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WM_USER_UPDATE_TEXT (WM_USER + 1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAboutDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CAboutDlg</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line">    <span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::<span class="built_in">CAboutDlg</span>() : <span class="built_in">CDialogEx</span>(IDD_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAboutDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAboutDlg, CDialogEx)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line">CSapiASRDlg::<span class="built_in">CSapiASRDlg</span>(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">    : <span class="built_in">CDialogEx</span>(IDD_SAPIASR_DIALOG, pParent),</span><br><span class="line">    <span class="built_in">m_pRecognizer</span>(<span class="literal">NULL</span>),</span><br><span class="line">    <span class="built_in">m_pRecoContext</span>(<span class="literal">NULL</span>),</span><br><span class="line">    <span class="built_in">m_pGrammar</span>(<span class="literal">NULL</span>),</span><br><span class="line">    <span class="built_in">m_bRunning</span>(<span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    m_hIcon = <span class="built_in">AfxGetApp</span>()-&gt;<span class="built_in">LoadIcon</span>(IDR_MAINFRAME);</span><br><span class="line">    <span class="built_in">connectToDatabase</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line">    <span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_TEXT, m_edtText);</span><br><span class="line">    <span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_RESULT, m_edtResult);</span><br><span class="line">    <span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_RESPONSE, m_edtResponse);</span><br><span class="line">    <span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_ID_RESULT, m_edtIdResult);</span><br><span class="line">    <span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_ID_RESPONSE, m_edtIdResponse);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CSapiASRDlg, CDialogEx)</span><br><span class="line">    <span class="built_in">ON_MESSAGE</span>(WM_USER_UPDATE_TEXT, &amp;CSapiASRDlg::OnUpdateText)</span><br><span class="line">    <span class="built_in">ON_WM_SYSCOMMAND</span>()</span><br><span class="line">    <span class="built_in">ON_WM_PAINT</span>()</span><br><span class="line">    <span class="built_in">ON_WM_QUERYDRAGICON</span>()</span><br><span class="line">    <span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_START, &amp;CSapiASRDlg::OnBnClickedButtonStart)</span><br><span class="line">    <span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_STOP, &amp;CSapiASRDlg::OnBnClickedButtonStop)</span><br><span class="line">    <span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_CLEAR, &amp;CSapiASRDlg::OnBnClickedButtonClear)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CSapiASRDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ASSERT</span>((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line">    <span class="built_in">ASSERT</span>(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">    CMenu* pSysMenu = <span class="built_in">GetSystemMenu</span>(FALSE);</span><br><span class="line">    <span class="keyword">if</span> (pSysMenu != <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        BOOL bNameValid;</span><br><span class="line">        CString strAboutMenu;</span><br><span class="line">        bNameValid = strAboutMenu.<span class="built_in">LoadString</span>(IDS_ABOUTBOX);</span><br><span class="line">        <span class="built_in">ASSERT</span>(bNameValid);</span><br><span class="line">        <span class="keyword">if</span> (!strAboutMenu.<span class="built_in">IsEmpty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_SEPARATOR);</span><br><span class="line">            pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">SetIcon</span>(m_hIcon, TRUE);</span><br><span class="line">    <span class="built_in">SetIcon</span>(m_hIcon, FALSE);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">InitializeSAPI</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">    &#123;</span><br><span class="line">        CAboutDlg dlgAbout;</span><br><span class="line">        dlgAbout.<span class="built_in">DoModal</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        CDialogEx::<span class="built_in">OnSysCommand</span>(nID, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnPaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">IsIconic</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">SendMessage</span>(WM_ICONERASEBKGND, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(dc.<span class="built_in">GetSafeHdc</span>()), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> cxIcon = <span class="built_in">GetSystemMetrics</span>(SM_CXICON);</span><br><span class="line">        <span class="type">int</span> cyIcon = <span class="built_in">GetSystemMetrics</span>(SM_CYICON);</span><br><span class="line">        CRect rect;</span><br><span class="line">        <span class="built_in">GetClientRect</span>(&amp;rect);</span><br><span class="line">        <span class="type">int</span> x = (rect.<span class="built_in">Width</span>() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> y = (rect.<span class="built_in">Height</span>() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        dc.<span class="built_in">DrawIcon</span>(x, y, m_hIcon);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        CDialogEx::<span class="built_in">OnPaint</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HCURSOR <span class="title">CSapiASRDlg::OnQueryDragIcon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::InitializeSAPI</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer.<span class="built_in">CoCreateInstance</span>(CLSID_SpInprocRecognizer);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognizer: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">CreateRecoContext</span>(&amp;m_pRecoContext);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create recognition context: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">CreateGrammar</span>(<span class="number">1</span>, &amp;m_pGrammar);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">LoadDictation</span>(<span class="literal">NULL</span>, SPLO_STATIC);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to load dictation grammar: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set dictation state: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetNotifyWin32Event</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set notify event: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecoContext-&gt;<span class="built_in">SetInterest</span>(<span class="built_in">SPFEI</span>(SPEI_RECOGNITION), <span class="built_in">SPFEI</span>(SPEI_RECOGNITION));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set interest for recognition events: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpMMAudioIn, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ISpAudio, (<span class="type">void</span>**)&amp;m_cpAudio);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to create audio input object: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hr = m_pRecognizer-&gt;<span class="built_in">SetInput</span>(m_cpAudio, TRUE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CString message;</span><br><span class="line">        message.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to set audio input: 0x%08X&quot;</span>), hr);</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(message);</span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Initialize SAPI is successful&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CSapiASRDlg::~<span class="built_in">CSapiASRDlg</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (m_bRunning)</span><br><span class="line">    &#123;</span><br><span class="line">        m_bRunning = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pGrammar)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pRecoContext)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pRecoContext.<span class="built_in">Release</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m_pRecognizer)</span><br><span class="line">    &#123;</span><br><span class="line">        m_pRecognizer.<span class="built_in">Release</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_ACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition started.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_bRunning)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition is not started.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HRESULT hr = m_pGrammar-&gt;<span class="built_in">SetDictationState</span>(SPRS_INACTIVE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to stop recognition.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    m_bRunning = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在这里进行语音识别，并将结果显示在编辑框中</span></span><br><span class="line">    <span class="built_in">PerformRecognition</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recognition stopped.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::PerformRecognition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = m_pRecoContext-&gt;<span class="built_in">WaitForNotifyEvent</span>(<span class="number">1000</span>);  <span class="comment">// 1-second timeout</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CSpEvent event;</span><br><span class="line">    <span class="keyword">while</span> (event.<span class="built_in">GetFrom</span>(m_pRecoContext) == S_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.eEventId == SPEI_RECOGNITION)</span><br><span class="line">        &#123;</span><br><span class="line">            ISpRecoResult* pResult = event.<span class="built_in">RecoResult</span>();</span><br><span class="line">            <span class="keyword">if</span> (pResult)</span><br><span class="line">            &#123;</span><br><span class="line">                LPWSTR pwszText = <span class="literal">nullptr</span>;</span><br><span class="line">                hr = pResult-&gt;<span class="built_in">GetText</span>(SP_GETWHOLEPHRASE, SP_GETWHOLEPHRASE, FALSE, &amp;pwszText, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">                &#123;</span><br><span class="line">                    CString* pNewText = <span class="keyword">new</span> <span class="built_in">CString</span>(pwszText);</span><br><span class="line">                    <span class="built_in">PostMessage</span>(WM_USER_UPDATE_TEXT, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(pNewText), <span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">CoTaskMemFree</span>(pwszText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::connectToDatabase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MYSQL* conn;</span><br><span class="line">    MYSQL_RES* res;</span><br><span class="line">    MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取配置文件</span></span><br><span class="line">    std::map&lt;std::string, std::string&gt; config = <span class="built_in">readConfigFile</span>(<span class="string">&quot;db_config.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* server = config[<span class="string">&quot;server&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* user = config[<span class="string">&quot;user&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* password = config[<span class="string">&quot;password&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* database = config[<span class="string">&quot;database&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line"></span><br><span class="line">    conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接数据库</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置连接的字符集</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行查询</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, <span class="string">&quot;SELECT * FROM RecognizeContent&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() success&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出查询结果</span></span><br><span class="line">    <span class="type">int</span> num_fields = <span class="built_in">mysql_num_fields</span>(res);</span><br><span class="line">    <span class="keyword">while</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">    &#123;</span><br><span class="line">        CString m_data;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_fields; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (row[i] == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m_data.<span class="built_in">Format</span>(_T(<span class="string">&quot;NULL&quot;</span>));</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                CString errorMsg;</span><br><span class="line">                errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line">                <span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">            <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 去除最后一个空字符</span></span><br><span class="line">            <span class="keyword">if</span> (!wstr.<span class="built_in">empty</span>() &amp;&amp; wstr.<span class="built_in">back</span>() == <span class="string">L&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">                wstr.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            m_data.<span class="built_in">Format</span>(_T(<span class="string">&quot;%s&quot;</span>), wstr.<span class="built_in">c_str</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        m_database.<span class="built_in">push_back</span>(m_data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放结果集</span></span><br><span class="line">    <span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭连接</span></span><br><span class="line">    <span class="built_in">mysql_close</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//// 显示查询结果</span></span><br><span class="line">    <span class="comment">//for (const auto&amp; row : m_database)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    AfxMessageBox(row);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::OnBnClickedButtonClear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_edtText.<span class="built_in">SetWindowTextW</span>(_T(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    m_edtResult.<span class="built_in">SetWindowTextW</span>(_T(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    m_edtResponse.<span class="built_in">SetWindowTextW</span>(_T(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    m_edtIdResult.<span class="built_in">SetWindowTextW</span>(_T(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    m_edtIdResponse.<span class="built_in">SetWindowTextW</span>(_T(<span class="string">&quot;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Levenshtein 距离算法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CSapiASRDlg::levenshteinDistance</span><span class="params">(<span class="type">const</span> std::wstring&amp; s1, <span class="type">const</span> std::wstring&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">m</span><span class="params">(s<span class="number">1.</span>size())</span></span>;</span><br><span class="line">    <span class="function"><span class="type">const</span> <span class="type">size_t</span> <span class="title">n</span><span class="params">(s<span class="number">2.</span>size())</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> m;</span><br><span class="line"></span><br><span class="line">    std::vector&lt;std::vector&lt;<span class="type">size_t</span>&gt;&gt; <span class="built_in">matrix</span>(m + <span class="number">1</span>, std::<span class="built_in">vector</span>&lt;<span class="type">size_t</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt;= m; ++i) matrix[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt;= n; ++j) matrix[<span class="number">0</span>][j] = j;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">size_t</span> cost = (s1[i - <span class="number">1</span>] == s2[j - <span class="number">1</span>]) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> deletion = matrix[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> insertion = matrix[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="type">size_t</span> substitution = matrix[i - <span class="number">1</span>][j - <span class="number">1</span>] + cost;</span><br><span class="line"></span><br><span class="line">            <span class="type">size_t</span> minValue = deletion;</span><br><span class="line">            <span class="keyword">if</span> (insertion &lt; minValue)</span><br><span class="line">                minValue = insertion;</span><br><span class="line">            <span class="keyword">if</span> (substitution &lt; minValue)</span><br><span class="line">                minValue = substitution;</span><br><span class="line"></span><br><span class="line">            matrix[i][j] = minValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">size_t</span> distance = matrix[m][n];</span><br><span class="line">    <span class="type">size_t</span> lengthDifference = std::<span class="built_in">abs</span>(<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(m) - <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加长度差异的惩罚项，使用比例因子调整权重</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> lengthPenaltyFactor = <span class="number">0.5f</span>; <span class="comment">// 可根据需要调整比例因子</span></span><br><span class="line">    <span class="type">size_t</span> lengthPenalty = <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(lengthDifference * lengthPenaltyFactor);</span><br><span class="line">    distance += lengthPenalty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> distance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT <span class="title">CSapiASRDlg::OnUpdateText</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CString* pNewText = <span class="built_in">reinterpret_cast</span>&lt;CString*&gt;(wParam);</span><br><span class="line">    <span class="keyword">if</span> (pNewText)</span><br><span class="line">    &#123;</span><br><span class="line">        m_edtText.<span class="built_in">SetWindowText</span>(*pNewText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::wstring <span class="title">newText</span><span class="params">((*pNewText).GetString())</span></span>;</span><br><span class="line">    std::wstring bestMatch;</span><br><span class="line">    <span class="type">int</span> bestMatchId = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">double</span> minDistance = INT_MAX;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row_data : m_database)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> distance = <span class="built_in">levenshteinDistance</span>(newText, std::<span class="built_in">wstring</span>(row_data.<span class="built_in">GetString</span>()));</span><br><span class="line">        <span class="comment">//double distance = jaroWinklerDistance(newText, std::wstring(row_data.GetString()));</span></span><br><span class="line">        <span class="comment">//double distance = cosineSimilarity(newText, std::wstring(row_data.GetString()));</span></span><br><span class="line">        <span class="comment">//double distance = jaccardSimilarity(newText, std::wstring(row_data.GetString()));</span></span><br><span class="line">        <span class="comment">//double distance = sift4Similarity(newText, std::wstring(row_data.GetString()));</span></span><br><span class="line">        <span class="keyword">if</span> (distance &lt; minDistance)</span><br><span class="line">        &#123;</span><br><span class="line">            minDistance = distance;</span><br><span class="line">            bestMatch = row_data.<span class="built_in">GetString</span>();</span><br><span class="line">            bestMatchId = i;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最相似的结果输出到编辑框</span></span><br><span class="line">    CString idResult;</span><br><span class="line">    idResult.<span class="built_in">Format</span>(_T(<span class="string">&quot;%d&quot;</span>), bestMatchId);</span><br><span class="line">    m_edtIdResult.<span class="built_in">SetWindowText</span>(idResult);</span><br><span class="line">    m_edtResult.<span class="built_in">SetWindowText</span>(bestMatch.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="comment">//CString content = GetReplyContent(bestMatch.c_str());</span></span><br><span class="line">    CString content = <span class="built_in">GetReplyContentById</span>(bestMatchId);</span><br><span class="line">    m_edtIdResponse.<span class="built_in">SetWindowTextW</span>(idResult);</span><br><span class="line">    m_edtResponse.<span class="built_in">SetWindowTextW</span>(content);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> pNewText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">CString <span class="title">CSapiASRDlg::GetReplyContentById</span><span class="params">(<span class="type">int</span> testId)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MYSQL* conn;</span><br><span class="line">    MYSQL_RES* res;</span><br><span class="line">    MYSQL_ROW row;</span><br><span class="line">    CString replyContent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取配置文件</span></span><br><span class="line">    std::map&lt;std::string, std::string&gt; config = <span class="built_in">readConfigFile</span>(<span class="string">&quot;db_config.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* server = config[<span class="string">&quot;server&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* user = config[<span class="string">&quot;user&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* password = config[<span class="string">&quot;password&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* database = config[<span class="string">&quot;database&quot;</span>].<span class="built_in">c_str</span>();</span><br><span class="line"></span><br><span class="line">    conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建查询语句</span></span><br><span class="line"></span><br><span class="line">    std::string query = <span class="string">&quot;SELECT content FROM ReplyContent WHERE id = &quot;</span> + std::<span class="built_in">to_string</span>(testId);</span><br><span class="line">    <span class="built_in">AfxMessageBox</span>(<span class="built_in">CString</span>(query.<span class="built_in">c_str</span>()));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT content FROM ReplyContent failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line">    <span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line">        <span class="built_in">mysql_close</span>(conn);</span><br><span class="line">        <span class="keyword">return</span> replyContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">            <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line">            replyContent = wstr.<span class="built_in">c_str</span>();</span><br><span class="line">            <span class="built_in">speak</span>(wstr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to convert reply content to wide string.&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No matching content found.&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">mysql_free_result</span>(res);</span><br><span class="line">    <span class="built_in">mysql_close</span>(conn);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> replyContent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CSapiASRDlg::speak</span><span class="params">(<span class="type">const</span> std::wstring&amp; text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CComPtr&lt;ISpVoice&gt; pVoice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 COM 库</span></span><br><span class="line">    HRESULT hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 SAPI 语音实例</span></span><br><span class="line">    hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span>**)&amp;pVoice);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 朗读文本</span></span><br><span class="line">        hr = pVoice-&gt;<span class="built_in">Speak</span>(text.<span class="built_in">c_str</span>(), SPF_DEFAULT, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Speak failed.&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to create voice instance.&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 语音识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音识别_查看博客(一)</title>
      <link href="/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>cmake下载：<a href="https://blog.csdn.net/didi_ya/article/details/123029415">Windows下CMake的下载与安装详解_cmake下载-CSDN博客</a></p><p>vcpkg</p><p>博客：<a href="https://blog.csdn.net/adminstate/article/details/134966644">vcpkg下载及安装-CSDN博客</a></p><p><a href="https://blog.csdn.net/m0_48095841/article/details/135639120">Windows下载安装vcpkg并使用它来安装第三方库（visualstudio）_vcpkg下载-CSDN博客</a></p><p>下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:microsoft/vcpkg.git</span><br><span class="line">cd vcpkg</span><br></pre></td></tr></table></figure><p>引导vcpkg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bootstrap-vcpkg.bat</span><br></pre></td></tr></table></figure><p>添加vcpkg路径到系统PATH</p><p><a href="https://cloud.tencent.com/developer/article/2349643">识别准确率竟如此高，实时语音识别服务-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>AaltoASR:<a href="https://github.com/aalto-speech/AaltoASR/blob/develop/INSTALLATION.md">AaltoASR&#x2F;INSTALLATION.md at develop · aalto-speech&#x2F;AaltoASR (github.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 语音识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音识别_模拟AI(三)</title>
      <link href="/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/%E6%A8%A1%E6%8B%9FAI%E5%8A%9F%E8%83%BD/"/>
      <url>/2024/08/04/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/%E6%A8%A1%E6%8B%9FAI%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="一、AI模拟功能需求"><a href="#一、AI模拟功能需求" class="headerlink" title="一、AI模拟功能需求"></a>一、AI模拟功能需求</h1><h2 id="1-功能概述"><a href="#1-功能概述" class="headerlink" title="1 功能概述"></a><strong>1</strong> 功能概述</h2><p>模拟AI进行语音对话，实现语音控制软件进行交互功能。</p><h2 id="2-详细说明"><a href="#2-详细说明" class="headerlink" title="2 详细说明"></a><strong>2</strong> 详细说明</h2><p>自定义语音助手名称，类似小爱、小度等。（数据库存储）</p><h3 id="2-1-语音助手功能"><a href="#2-1-语音助手功能" class="headerlink" title="2.1 语音助手功能"></a>2.1 <strong>语音助手功能</strong></h3><ol><li><p>软件启动后，默认启动识别功能</p></li><li><p>识别到呼唤助手名称，语音播报进行回复（我在）</p></li><li><p>识别到口呼常用语后，根据内容进行语音回复或进行内容播报</p></li></ol><h3 id="2-2-设计说明"><a href="#2-2-设计说明" class="headerlink" title="2.2 设计说明"></a>2.2 <strong>设计说明</strong></h3><h4 id="2-2-1-数据库"><a href="#2-2-1-数据库" class="headerlink" title="2.2.1 数据库"></a>2.2.1 数据库</h4><ul><li><p>口呼常用语存储本地数据库，包括语音助手的名称</p></li><li><p>回复的内容存储本地数据库</p></li></ul><h4 id="2-2-2-交互实现"><a href="#2-2-2-交互实现" class="headerlink" title="2.2.2 交互实现"></a>2.2.2 交互实现</h4><ul><li><p>识别到内容与数据库中第一条一致，语音回复数据库第一条内容 <strong>我在</strong></p></li><li><p>识别到内容与数据库中其它内容一致，语音回复数据库中对应ID的内容</p></li></ul><h1 id="二、数据库内容"><a href="#二、数据库内容" class="headerlink" title="二、数据库内容"></a>二、数据库内容</h1><table><thead><tr><th>识别数据库内容</th><th></th><th>回复数据库内容</th><th></th><th></th></tr></thead><tbody><tr><td>序号</td><td>内容</td><td></td><td>序号</td><td>内容</td></tr><tr><td>0</td><td>小度小度</td><td></td><td>0</td><td>我在</td></tr><tr><td>1</td><td>调车白灯-8</td><td></td><td>1</td><td>调车白灯</td></tr><tr><td>2</td><td>负载断开</td><td></td><td>2</td><td>负载断开</td></tr><tr><td>3</td><td>进路开通 8</td><td></td><td>3</td><td>进路开通</td></tr><tr><td>4</td><td>母线重联、负载断开</td><td></td><td>4</td><td>母线重联、负载断开</td></tr><tr><td>5</td><td>注意进站</td><td></td><td>5</td><td>注意进站</td></tr><tr><td>6</td><td>开左侧门</td><td></td><td>6</td><td>开左侧门</td></tr><tr><td>7</td><td>欢迎您乘坐5号线列车</td><td></td><td>7</td><td>欢迎您乘坐5号线列车</td></tr><tr><td>8</td><td>列车运行前方是北京站，请下车的乘客做好准备</td><td></td><td>8</td><td>列车运行前方是北京站，请下车的乘客做好准备</td></tr><tr><td>9</td><td>列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见</td><td></td><td>9</td><td>列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见</td></tr><tr><td>10</td><td>各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作</td><td></td><td>10</td><td>各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作</td></tr><tr><td>11</td><td>各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作</td><td></td><td>11</td><td>各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作</td></tr><tr><td>12</td><td>各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作</td><td></td><td>12</td><td>各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作</td></tr><tr><td>13</td><td>各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解</td><td></td><td>13</td><td>各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解</td></tr></tbody></table><h1 id="三、数据库实现"><a href="#三、数据库实现" class="headerlink" title="三、数据库实现"></a>三、数据库实现</h1><h2 id="1、启动mysql"><a href="#1、启动mysql" class="headerlink" title="1、启动mysql"></a>1、启动mysql</h2><p>用户密码：还是我的常用密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> mysql <span class="comment">--version</span></span><br><span class="line">D:\DevelopmentTools\Mysql\mysql<span class="number">-5.7</span><span class="number">.24</span><span class="operator">-</span>winx64\bin\mysql.exe  Ver <span class="number">14.14</span> Distrib <span class="number">5.7</span><span class="number">.24</span>, <span class="keyword">for</span> Win64 (x86_64)</span><br><span class="line"></span><br><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> net <span class="keyword">start</span> mysql</span><br><span class="line">请求的服务已经启动。</span><br><span class="line"></span><br><span class="line">请键入 NET HELPMSG <span class="number">2182</span> 以获得更多的帮助。</span><br><span class="line"></span><br><span class="line">PS D:\ASR\pocketsphinx<span class="operator">&gt;</span> mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></table></figure><h2 id="2、MySQL-数据库配置与插入中文数据"><a href="#2、MySQL-数据库配置与插入中文数据" class="headerlink" title="2、MySQL 数据库配置与插入中文数据"></a>2、MySQL 数据库配置与插入中文数据</h2><p>在 MySQL 中，插入中文数据需要确保数据库和表的字符集设置为支持中文的字符集（如 utf8mb4）。以下是创建数据库和表结构以及插入中文数据的正确方法。</p><h3 id="1-创建数据库和表结构"><a href="#1-创建数据库和表结构" class="headerlink" title="1. 创建数据库和表结构"></a>1. 创建数据库和表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库并设置字符集</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE VoiceAssistant <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用创建的数据库</span></span><br><span class="line">USE VoiceAssistant;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建识别内容表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> RecognizeContent (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    content <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建回复内容表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ReplyContent (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    content <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="2-插入数据"><a href="#2-插入数据" class="headerlink" title="2. 插入数据"></a>2. 插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入识别内容</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> RecognizeContent (content) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;小度小度&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;调车白灯&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;进路开通&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;母线重联、负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;注意进站&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;开左侧门&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;欢迎您乘坐5号线列车&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是北京站，请下车的乘客做好准备&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入回复内容</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReplyContent (content) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;我在&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;调车白灯&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;进路开通&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;母线重联、负载断开&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;注意进站&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;开左侧门&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;欢迎您乘坐5号线列车&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是北京站，请下车的乘客做好准备&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;列车运行前方是本次列车的终点站北京站，请您做好准备。感谢您乘坐本次列车，再见&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客，为保证正点运营，请您不要挤靠车门，以免影响正常发车，谢谢合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车现在关门，上不去车的乘客，请您等候下次列车，谢谢您的支持与合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，现在是高峰时间，乘客较多，请您配合我们抓紧时间上、下车，谢谢您的合作&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;各位乘客您好，列车自动广播系统发生故障，给您带来的不便，敬请谅解&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="语音播报"><a href="#语音播报" class="headerlink" title="语音播报"></a>语音播报</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sapi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用Windows TTS进行语音播报</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">(<span class="type">const</span> std::string&amp; text)</span> </span>&#123;</span><br><span class="line">    ISpVoice* pVoice = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">FAILED</span>(::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>)))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    HRESULT hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span> **)&amp;pVoice);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr)) &#123;</span><br><span class="line">        <span class="function">std::wstring <span class="title">wtext</span><span class="params">(text.begin(), text.end())</span></span>;</span><br><span class="line">        hr = pVoice-&gt;<span class="built_in">Speak</span>(wtext.<span class="built_in">c_str</span>(), <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        pVoice-&gt;<span class="built_in">Release</span>();</span><br><span class="line">        pVoice = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、初始语言识别代码"><a href="#四、初始语言识别代码" class="headerlink" title="四、初始语言识别代码"></a>四、初始语言识别代码</h1><p>将应用pocketsphinx,portaudio技术的语言识别代码替换到新项目AIVoiceAssistant中，作为项目修改的原始代码</p><p>代码主要在dlg.g，dlg.cpp，以及项目配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">VC++目录 的 包含目录</span><br><span class="line">D:\DevelopmentTools\vcpkg\packages\portaudio_x64-windows\include</span><br><span class="line">D:\ASR\pocketsphinx\include</span><br><span class="line">D:\ASR\sphinxbase\include\win32</span><br><span class="line">D:\ASR\sphinxbase\include</span><br><span class="line"></span><br><span class="line">VC++目录的库目录</span><br><span class="line">D:\DevelopmentTools\vcpkg\packages\portaudio_x64-windows\lib</span><br><span class="line">D:\ASR\pocketsphinx\bin\Debug\x64</span><br><span class="line">D:\ASR\sphinxbase\bin\Debug\x64</span><br><span class="line"></span><br><span class="line">链接器输入的附加依赖项</span><br><span class="line">sphinxbase.lib</span><br><span class="line">pocketsphinx.lib</span><br><span class="line">portaudio.lib</span><br><span class="line"></span><br><span class="line">链接器常规的附加库目录</span><br><span class="line">D:\DevelopmentTools\vcpkg\packages\portaudio_x64-windows\lib</span><br><span class="line">D:\ASR\pocketsphinx\bin\Debug\x64</span><br><span class="line">D:\ASR\sphinxbase\bin\Debug\x64</span><br></pre></td></tr></table></figure><p>还需要将sphinxbase.dll，pocketsphinx.dll，portaudio.dll复制文件放在代码路径下（存放编写代码的文件夹中）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// AIVoiceAssistantDlg.h: 头文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含必要的头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;portaudio.h&gt;</span>       <span class="comment">// PortAudio 库头文件，用于音频输入输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pocketsphinx.h&gt;</span>    <span class="comment">// PocketSphinx 库头文件，用于语音识别</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/ad.h&gt;</span>   <span class="comment">// SphinxBase 库头文件，用于音频录制</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/err.h&gt;</span>  <span class="comment">// SphinxBase 库头文件，用于错误处理</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span>           <span class="comment">// 文件操作头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span>            <span class="comment">// 字符串处理头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span>               <span class="comment">// 集合容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atlstr.h&gt;</span>          <span class="comment">// ATL 字符串类头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span>            <span class="comment">// 线程库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>            <span class="comment">// 向量容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>         <span class="comment">// 算法头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span>            <span class="comment">// 本地化头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span>           <span class="comment">// 编码转换头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>          <span class="comment">// 输入输出流头文件</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIMER_ID 999 <span class="comment">// 定义定时器 ID</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 对话框</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAIVoiceAssistantDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 构造</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CAIVoiceAssistantDlg</span>(CWnd* pParent = <span class="literal">nullptr</span>);<span class="comment">// 标准构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_AIVOICEASSISTANT_DIALOG &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;<span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">HICON m_hIcon;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成的消息映射函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnDestroy</span><span class="params">()</span></span>;</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">CEdit m_edtText;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStart</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>; <span class="comment">// 定时器处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">std::vector&lt;int16&gt; m_audioBuffer;   <span class="comment">// 用于存储音频数据</span></span><br><span class="line"><span class="type">bool</span> m_bListening = <span class="literal">false</span>;<span class="comment">// 语音识别信号</span></span><br><span class="line"><span class="type">cmd_ln_t</span>* m_config = <span class="literal">nullptr</span>;<span class="comment">// 配置参数指针</span></span><br><span class="line"><span class="type">ps_decoder_t</span>* m_ps = <span class="literal">nullptr</span>;<span class="comment">// PocketSphinx 解码器指针</span></span><br><span class="line"><span class="type">ad_rec_t</span>* m_ad = <span class="literal">nullptr</span>;<span class="comment">// 音频录制指针</span></span><br><span class="line">uint8 utt_started = FALSE;<span class="comment">// 标志是否开始录制</span></span><br><span class="line"></span><br><span class="line">PaStream* m_stream = <span class="literal">nullptr</span>;<span class="comment">// PortAudio 流指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">RecordAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessRecordedAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span>;</span><br><span class="line"><span class="function">CString <span class="title">ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">std::thread m_thread; <span class="comment">// 用于音频录制和处理的线程</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// AIVoiceAssistantDlg.cpp: 实现文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AIVoiceAssistant.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AIVoiceAssistantDlg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;afxdialogex.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PortAudio 参数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAMPLE_RATE 16000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAMES_PER_BUFFER (2048) <span class="comment">// 调整缓冲区大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">paCallback</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* inputBuffer, <span class="type">void</span>* outputBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">unsigned</span> <span class="type">long</span> framesPerBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">const</span> PaStreamCallbackTimeInfo* timeInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">PaStreamCallbackFlags statusFlags,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">void</span>* userData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">float</span>* in = (<span class="type">float</span>*)inputBuffer;</span><br><span class="line"><span class="type">float</span>* monoBuffer = (<span class="type">float</span>*)userData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inputBuffer == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; framesPerBuffer; ++i) &#123;</span><br><span class="line">monoBuffer[i] = (in[i * <span class="number">2</span>] + in[i * <span class="number">2</span> + <span class="number">1</span>]) * <span class="number">0.5f</span>; <span class="comment">// 双声道转单声道</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于应用程序“关于”菜单项的 CAboutDlg 对话框</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAboutDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CAboutDlg</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::<span class="built_in">CAboutDlg</span>() : <span class="built_in">CDialogEx</span>(IDD_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAboutDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAboutDlg, CDialogEx)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 对话框</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CAIVoiceAssistantDlg::<span class="built_in">CAIVoiceAssistantDlg</span>(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">: <span class="built_in">CDialogEx</span>(IDD_AIVOICEASSISTANT_DIALOG, pParent)</span><br><span class="line">&#123;</span><br><span class="line">m_hIcon = <span class="built_in">AfxGetApp</span>()-&gt;<span class="built_in">LoadIcon</span>(IDR_MAINFRAME);</span><br><span class="line">m_config = <span class="built_in">cmd_ln_init</span>(<span class="literal">NULL</span>, <span class="built_in">ps_args</span>(), TRUE,</span><br><span class="line"><span class="string">&quot;-hmm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn&quot;</span>,</span><br><span class="line"><span class="string">&quot;-lm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.lm.bin&quot;</span>,</span><br><span class="line"><span class="string">&quot;-dict&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.dic&quot;</span>,</span><br><span class="line"><span class="comment">/*       &quot;-hmm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-lm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us.lm.bin&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-dict&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\cmudict-en-us.dict&quot;,*/</span></span><br><span class="line"><span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (m_config == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config fail&quot;</span>));</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m_ps = <span class="built_in">ps_init</span>(m_config);</span><br><span class="line"><span class="keyword">if</span> (m_ps == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps fail&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((m_ad = <span class="built_in">ad_open_dev</span>(<span class="string">&quot;sysdefault&quot;</span>, (<span class="type">int</span>)<span class="number">48000</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Failed to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Success to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnDestroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 音频设备</span></span><br><span class="line"><span class="keyword">if</span> (m_ad)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ad_close</span>(m_ad);</span><br><span class="line">m_ad = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放解码器</span></span><br><span class="line"><span class="keyword">if</span> (m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ps_free</span>(m_ps);</span><br><span class="line">m_ps = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放配置参数</span></span><br><span class="line"><span class="keyword">if</span> (m_config)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">m_config = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line"><span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_TEXT, m_edtText);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAIVoiceAssistantDlg, CDialogEx)</span><br><span class="line"><span class="built_in">ON_WM_SYSCOMMAND</span>()</span><br><span class="line"><span class="built_in">ON_WM_PAINT</span>()</span><br><span class="line"><span class="built_in">ON_WM_QUERYDRAGICON</span>()</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_START, &amp;CAIVoiceAssistantDlg::OnBnClickedButtonStart)</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_STOP, &amp;CAIVoiceAssistantDlg::OnBnClickedButtonStop)</span><br><span class="line"><span class="built_in">ON_WM_DESTROY</span>()</span><br><span class="line"><span class="built_in">ON_WM_TIMER</span>()</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 消息处理程序</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CAIVoiceAssistantDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将“关于...”菜单项添加到系统菜单中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IDM_ABOUTBOX 必须在系统命令范围内。</span></span><br><span class="line"><span class="built_in">ASSERT</span>((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">CMenu* pSysMenu = <span class="built_in">GetSystemMenu</span>(FALSE);</span><br><span class="line"><span class="keyword">if</span> (pSysMenu != <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">BOOL bNameValid;</span><br><span class="line">CString strAboutMenu;</span><br><span class="line">bNameValid = strAboutMenu.<span class="built_in">LoadString</span>(IDS_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(bNameValid);</span><br><span class="line"><span class="keyword">if</span> (!strAboutMenu.<span class="built_in">IsEmpty</span>())</span><br><span class="line">&#123;</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_SEPARATOR);</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span></span><br><span class="line"><span class="comment">//  执行此操作</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, TRUE);<span class="comment">// 设置大图标</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, FALSE);<span class="comment">// 设置小图标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加额外的初始化代码</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">CAboutDlg dlgAbout;</span><br><span class="line">dlgAbout.<span class="built_in">DoModal</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnSysCommand</span>(nID, lParam);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span></span><br><span class="line"><span class="comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span></span><br><span class="line"><span class="comment">//  这将由框架自动完成。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnPaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsIconic</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">SendMessage</span>(WM_ICONERASEBKGND, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(dc.<span class="built_in">GetSafeHdc</span>()), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使图标在工作区矩形中居中</span></span><br><span class="line"><span class="type">int</span> cxIcon = <span class="built_in">GetSystemMetrics</span>(SM_CXICON);</span><br><span class="line"><span class="type">int</span> cyIcon = <span class="built_in">GetSystemMetrics</span>(SM_CYICON);</span><br><span class="line">CRect rect;</span><br><span class="line"><span class="built_in">GetClientRect</span>(&amp;rect);</span><br><span class="line"><span class="type">int</span> x = (rect.<span class="built_in">Width</span>() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> y = (rect.<span class="built_in">Height</span>() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制图标</span></span><br><span class="line">dc.<span class="built_in">DrawIcon</span>(x, y, m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnPaint</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span></span><br><span class="line"><span class="comment">//显示。</span></span><br><span class="line"><span class="function">HCURSOR <span class="title">CAIVoiceAssistantDlg::OnQueryDragIcon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 清空音频缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 PortAudio</span></span><br><span class="line">PaError err = <span class="built_in">Pa_Initialize</span>();</span><br><span class="line"><span class="keyword">if</span> (err != paNoError)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize PortAudio.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置音频流参数</span></span><br><span class="line">PaStreamParameters inputParameters;</span><br><span class="line">inputParameters.device = <span class="built_in">Pa_GetDefaultInputDevice</span>(); <span class="comment">// 获取默认输入设备</span></span><br><span class="line"><span class="keyword">if</span> (inputParameters.device == paNoDevice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No default input device.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">inputParameters.channelCount = <span class="number">2</span>; <span class="comment">// 双声道</span></span><br><span class="line">inputParameters.sampleFormat = paInt16; <span class="comment">// 16 位整数</span></span><br><span class="line">inputParameters.suggestedLatency = <span class="built_in">Pa_GetDeviceInfo</span>(inputParameters.device)-&gt;defaultLowInputLatency;</span><br><span class="line">inputParameters.hostApiSpecificStreamInfo = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开音频流</span></span><br><span class="line">err = <span class="built_in">Pa_OpenStream</span>(</span><br><span class="line">&amp;m_stream,</span><br><span class="line">&amp;inputParameters,</span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有输出</span></span><br><span class="line"><span class="number">48000</span>, <span class="comment">// 采样率</span></span><br><span class="line"><span class="number">2048</span>, <span class="comment">// 缓冲区大小</span></span><br><span class="line">paClipOff, <span class="comment">// 禁用剪切</span></span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有回调</span></span><br><span class="line"><span class="literal">nullptr</span>  <span class="comment">// 没有用户数据</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (err != paNoError)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to open PortAudio stream: %s&quot;</span>), <span class="built_in">Pa_GetErrorText</span>(err));</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动音频流</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Pa_StartStream</span>(m_stream) != paNoError)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start PortAudio stream.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标志以启动录音</span></span><br><span class="line">m_bListening = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording started. Please speak now...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动录音线程</span></span><br><span class="line"><span class="function">std::thread <span class="title">t</span><span class="params">(&amp;CAIVoiceAssistantDlg::RecordAudio, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">t.<span class="built_in">detach</span>();  <span class="comment">// 分离线程</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置定时器，在15秒后停止录音</span></span><br><span class="line"><span class="built_in">SetTimer</span>(TIMER_ID, <span class="number">15000</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止 PortAudio 流</span></span><br><span class="line"><span class="keyword">if</span> (m_stream)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示用户停止录音</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording stopped. Processing data...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::RecordAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"><span class="type">int16_t</span> stereoBuffer[<span class="number">2048</span> * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (m_bListening)</span><br><span class="line">&#123;</span><br><span class="line">PaError err = <span class="built_in">Pa_ReadStream</span>(m_stream, stereoBuffer, <span class="number">2048</span>);</span><br><span class="line"><span class="keyword">if</span> (err != paNoError)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">WCHAR* wcsErrorText = <span class="keyword">new</span> WCHAR[len];</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, wcsErrorText, len);</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to read audio: %s&quot;</span>), wcsErrorText);</span><br><span class="line"><span class="keyword">delete</span>[] wcsErrorText;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">errorMsg = _T(<span class="string">&quot;Failed to read audio: Unknown error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将双声道数据转换为单声道数据，并添加到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="type">int16_t</span>&gt; <span class="title">monoBuffer</span><span class="params">(<span class="number">2048</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; <span class="number">2048</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">monoBuffer[i] = (stereoBuffer[i * <span class="number">2</span>] + stereoBuffer[i * <span class="number">2</span> + <span class="number">1</span>]) / <span class="number">2</span>; <span class="comment">// 简单平均以获得单声道数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将单声道数据添加到缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">insert</span>(m_audioBuffer.<span class="built_in">end</span>(), monoBuffer.<span class="built_in">begin</span>(), monoBuffer.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, monoBuffer.<span class="built_in">data</span>(), monoBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止音频流</span></span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (nIDEvent == TIMER_ID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CDialogEx::<span class="built_in">OnTimer</span>(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::ProcessRecordedAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_audioBuffer.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No audio data to process.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, m_audioBuffer.<span class="built_in">data</span>(), m_audioBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;Failed to convert recognition result.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">CString <span class="title">CAIVoiceAssistantDlg::ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CString</span>(hyp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">std::ifstream <span class="title">file</span><span class="params">(filePath, std::ios::binary)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!file.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to open audio file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;int16&gt; <span class="title">audioData</span><span class="params">((std::istreambuf_iterator&lt;<span class="type">char</span>&gt;(file)), std::istreambuf_iterator&lt;<span class="type">char</span>&gt;())</span></span>;</span><br><span class="line">file.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (audioData.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No audio data read from file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, audioData.<span class="built_in">data</span>(), audioData.<span class="built_in">size</span>() * <span class="built_in">sizeof</span>(int16), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString result = <span class="built_in">CString</span>(hyp);</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="五、连接MYSQL数据库"><a href="#五、连接MYSQL数据库" class="headerlink" title="五、连接MYSQL数据库"></a>五、连接MYSQL数据库</h1><p><a href="https://blog.csdn.net/qq_31762741/article/details/115044657">Visual Studio 2019连接MySQL数据库详细教程_visual studio服务器资源管理器 数据连接-CSDN博客</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::connectToDatabase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MYSQL* conn;</span><br><span class="line">MYSQL_RES* res;</span><br><span class="line">MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;password&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))<span class="comment">// 设置连接的字符集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行查询</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, <span class="string">&quot;SELECT * FROM RecognizeContent&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出查询结果</span></span><br><span class="line"><span class="type">int</span> num_fields = <span class="built_in">mysql_num_fields</span>(res);</span><br><span class="line"><span class="keyword">while</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_fields; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (row[i] == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;NULL value detected&quot;</span>));</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放结果集</span></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h2><h3 id="1、找不到mysql-h"><a href="#1、找不到mysql-h" class="headerlink" title="1、找不到mysql.h"></a>1、找不到mysql.h</h3><p>解决方案：将mysql的include路径和lib路径设置在项目属性中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\DevelopmentTools\Mysql\mysql-5.7.24-winx64\include</span><br><span class="line"></span><br><span class="line">D:\DevelopmentTools\Mysql\mysql-5.7.24-winx64\lib</span><br><span class="line"></span><br><span class="line">链接器找到libmysql.lib,添加进去即可</span><br></pre></td></tr></table></figure><h3 id="2、mysql查找的数据是？乱码"><a href="#2、mysql查找的数据是？乱码" class="headerlink" title="2、mysql查找的数据是？乱码"></a>2、mysql查找的数据是？乱码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))<span class="comment">// 设置连接的字符集为utf8mb4</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时，对得到的字符还要转换为宽字节</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(result);</span><br></pre></td></tr></table></figure><h1 id="六、制作关键字字库"><a href="#六、制作关键字字库" class="headerlink" title="六、制作关键字字库"></a>六、制作关键字字库</h1><p>新建关键字文件ai.txt，输入若干关键词，每行一个关键词。注意这个关键字文件要求utf-8编码，无BOM头，\n换行，因此最好在Linux下面编辑。用UE等高级编辑器也可以。</p><p>使用在线lm工具<br> <a href="http://www.speech.cs.cmu.edu/tools/lmtool-new.html">http://www.speech.cs.cmu.edu/tools/lmtool-new.html</a></p><p>将keyword.txt上传上去，会生成一堆.dic .lm .vocab等文件。直接下载.tgz的整合文件，解压缩，里面有用的只有.dic和.lm文件。由于lmtool不识别中文，因此.dic文件是空的。需要自己手动添加注音</p><p>到官网下载普通话的完整hmm模型 zh_broadcastnews_16k_ptm256_8000.tar.bz2 和完整的字典 zh_broadcastnews_utf8.dic<br> [<a href="https://sourceforge.net/projects/cmusphinx/files/Acoustic%20and%20Language%20Models/Mandarin/]">https://sourceforge.net/projects/cmusphinx/files/Acoustic%20and%20Language%20Models/Mandarin/]</a>(<a href="https://sourceforge.net/projects/cmusphinx/files/Acoustic">https://sourceforge.net/projects/cmusphinx/files/Acoustic</a> and Language Models&#x2F;Mandarin&#x2F;)</p><p>参照完整的字典 zh_broadcastnews_utf8.dic，对lmtool生成的.dic文件进行注音，例如</p><p>哈密瓜 h a m i g ua</p><p>有些名词zh_broadcastnews_utf8.dic里面没有，需要自己一个个字拼起来，例如山竹没有，但是有山和竹的拼音</p><p>北山 b ei sh an<br> 成竹 ch eng zh u</p><p>则<br> 山竹 sh an zh u</p><p>拼音还是比较好办的</p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="1、关键字太长"><a href="#1、关键字太长" class="headerlink" title="1、关键字太长"></a>1、关键字太长</h3><p>在 PocketSphinx 中，关键字过长可能导致识别问题，因为默认情况下，PocketSphinx 对每个单词的字符数有一个限制（通常是 34 个字符）。</p><p>针对关键字太长的问题，采用划分长句子，应用模糊匹配的方法去寻找mysql中的句子</p><h1 id="七、语音识别结果处理"><a href="#七、语音识别结果处理" class="headerlink" title="七、语音识别结果处理"></a>七、语音识别结果处理</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::processRecognitionResult</span><span class="params">(<span class="type">const</span> std::string&amp; recognizedText)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MYSQL* conn;</span><br><span class="line">MYSQL_RES* res;</span><br><span class="line">MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;password&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>)) <span class="comment">// 设置连接的字符集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用LIKE进行模糊匹配</span></span><br><span class="line">std::string query = <span class="string">&quot;SELECT id FROM RecognizeContent WHERE content LIKE &#x27;%&quot;</span> + recognizedText + <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line">id = std::<span class="built_in">stoi</span>(row[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (id != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">query = <span class="string">&quot;SELECT content FROM ReplyContent WHERE id = &quot;</span> + std::<span class="built_in">to_string</span>(id);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 将UTF-8字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试输出</span></span><br><span class="line"><span class="comment">//AfxMessageBox(result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将CString转换为std::string</span></span><br><span class="line"><span class="function">CT2CA <span class="title">pszConvertedAnsiString</span><span class="params">(result)</span></span>;</span><br><span class="line"><span class="function">std::string <span class="title">replyContent</span><span class="params">(pszConvertedAnsiString)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用speak函数</span></span><br><span class="line"><span class="built_in">speak</span>(replyContent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to convert reply content to wide string.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No matching content found.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="八、语音播报"><a href="#八、语音播报" class="headerlink" title="八、语音播报"></a>八、语音播报</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Windows TTS进行语音播报</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::speak</span><span class="params">(<span class="type">const</span> std::string&amp; text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ISpVoice* pVoice = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HRESULT hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span>**)&amp;pVoice);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 使用MultiByteToWideChar将std::string转换为std::wstring</span></span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="type">int</span> slength = (<span class="type">int</span>)text.<span class="built_in">length</span>() + <span class="number">1</span>;</span><br><span class="line">len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, text.<span class="built_in">c_str</span>(), slength, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="function">std::wstring <span class="title">wtext</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, text.<span class="built_in">c_str</span>(), slength, &amp;wtext[<span class="number">0</span>], len);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出调试信息</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(<span class="built_in">CString</span>(wtext.<span class="built_in">c_str</span>()));</span><br><span class="line"></span><br><span class="line">hr = pVoice-&gt;<span class="built_in">Speak</span>(wtext.<span class="built_in">c_str</span>(), <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Speak failed.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">pVoice-&gt;<span class="built_in">Release</span>();</span><br><span class="line">pVoice = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to create voice instance.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>识别率低，无法控制识别的文本</p><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// AIVoiceAssistantDlg.h: 头文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含必要的头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;portaudio.h&gt;</span>       <span class="comment">// PortAudio 库头文件，用于音频输入输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pocketsphinx.h&gt;</span>    <span class="comment">// PocketSphinx 库头文件，用于语音识别</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/ad.h&gt;</span>   <span class="comment">// SphinxBase 库头文件，用于音频录制</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphinxbase/err.h&gt;</span>  <span class="comment">// SphinxBase 库头文件，用于错误处理</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span>           <span class="comment">// 文件操作头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span>            <span class="comment">// 字符串处理头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span>               <span class="comment">// 集合容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atlstr.h&gt;</span>          <span class="comment">// ATL 字符串类头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span>            <span class="comment">// 线程库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>            <span class="comment">// 向量容器头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>         <span class="comment">// 算法头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span>            <span class="comment">// 本地化头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span>           <span class="comment">// 编码转换头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>          <span class="comment">// 输入输出流头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sapi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIMER_ID 999 <span class="comment">// 定义定时器 ID</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 对话框</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAIVoiceAssistantDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 构造</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CAIVoiceAssistantDlg</span>(CWnd* pParent = <span class="literal">nullptr</span>);<span class="comment">// 标准构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_AIVOICEASSISTANT_DIALOG &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;<span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">HICON m_hIcon;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成的消息映射函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> BOOL <span class="title">OnInitDialog</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg HCURSOR <span class="title">OnQueryDragIcon</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnDestroy</span><span class="params">()</span></span>;</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">CEdit m_edtText;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStart</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnBnClickedButtonStop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span>; <span class="comment">// 定时器处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">std::vector&lt;int16&gt; m_audioBuffer;   <span class="comment">// 用于存储音频数据</span></span><br><span class="line"><span class="type">bool</span> m_bListening = <span class="literal">false</span>;<span class="comment">// 语音识别信号</span></span><br><span class="line"><span class="type">cmd_ln_t</span>* m_config = <span class="literal">nullptr</span>;<span class="comment">// 配置参数指针</span></span><br><span class="line"><span class="type">ps_decoder_t</span>* m_ps = <span class="literal">nullptr</span>;<span class="comment">// PocketSphinx 解码器指针</span></span><br><span class="line"><span class="type">ad_rec_t</span>* m_ad = <span class="literal">nullptr</span>;<span class="comment">// 音频录制指针</span></span><br><span class="line">uint8 utt_started = FALSE;<span class="comment">// 标志是否开始录制</span></span><br><span class="line"></span><br><span class="line">PaStream* m_stream = <span class="literal">nullptr</span>;<span class="comment">// PortAudio 流指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">RecordAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessRecordedAudio</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span>;</span><br><span class="line"><span class="function">CString <span class="title">ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">std::thread m_thread; <span class="comment">// 用于音频录制和处理的线程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">connectToDatabase</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processRecognitionResult</span><span class="params">(<span class="type">const</span> std::string&amp; recognizedText)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">(<span class="type">const</span> std::string&amp; text)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// AIVoiceAssistantDlg.cpp: 实现文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AIVoiceAssistant.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AIVoiceAssistantDlg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;afxdialogex.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mysql.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PortAudio 参数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAMPLE_RATE 16000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAMES_PER_BUFFER (2048) <span class="comment">// 调整缓冲区大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">paCallback</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* inputBuffer, <span class="type">void</span>* outputBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">unsigned</span> <span class="type">long</span> framesPerBuffer,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">const</span> PaStreamCallbackTimeInfo* timeInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">PaStreamCallbackFlags statusFlags,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">void</span>* userData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">float</span>* in = (<span class="type">float</span>*)inputBuffer;</span><br><span class="line"><span class="type">float</span>* monoBuffer = (<span class="type">float</span>*)userData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inputBuffer == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; framesPerBuffer; ++i) &#123;</span><br><span class="line">monoBuffer[i] = (in[i * <span class="number">2</span>] + in[i * <span class="number">2</span> + <span class="number">1</span>]) * <span class="number">0.5f</span>; <span class="comment">// 双声道转单声道</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> paContinue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于应用程序“关于”菜单项的 CAboutDlg 对话框</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAboutDlg</span> : <span class="keyword">public</span> CDialogEx</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CAboutDlg</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对话框数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> AFX_DESIGN_TIME</span></span><br><span class="line"><span class="keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span>;    <span class="comment">// DDX/DDV 支持</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CAboutDlg::<span class="built_in">CAboutDlg</span>() : <span class="built_in">CDialogEx</span>(IDD_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAboutDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAboutDlg, CDialogEx)</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 对话框</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CAIVoiceAssistantDlg::<span class="built_in">CAIVoiceAssistantDlg</span>(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">: <span class="built_in">CDialogEx</span>(IDD_AIVOICEASSISTANT_DIALOG, pParent)</span><br><span class="line">&#123;</span><br><span class="line">m_hIcon = <span class="built_in">AfxGetApp</span>()-&gt;<span class="built_in">LoadIcon</span>(IDR_MAINFRAME);</span><br><span class="line">m_config = <span class="built_in">cmd_ln_init</span>(<span class="literal">NULL</span>, <span class="built_in">ps_args</span>(), TRUE,</span><br><span class="line"><span class="string">&quot;-hmm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn&quot;</span>,</span><br><span class="line"><span class="comment">//&quot;-lm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.lm.bin&quot;,</span></span><br><span class="line"><span class="comment">//&quot;-dict&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\zh-cn.dic&quot;,</span></span><br><span class="line"><span class="string">&quot;-lm&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\ai3.lm&quot;</span>,</span><br><span class="line"><span class="string">&quot;-dict&quot;</span>, <span class="string">&quot;D:\\ASR\\pocketsphinx\\model\\zh-cn\\ai3.dic&quot;</span>,</span><br><span class="line"><span class="comment">/*       &quot;-hmm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-lm&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\en-us.lm.bin&quot;,</span></span><br><span class="line"><span class="comment">   &quot;-dict&quot;, &quot;D:\\ASR\\pocketsphinx\\model\\en-us\\cmudict-en-us.dict&quot;,*/</span></span><br><span class="line"><span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (m_config == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config fail&quot;</span>));</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;1、m_config success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m_ps = <span class="built_in">ps_init</span>(m_config);</span><br><span class="line"><span class="keyword">if</span> (m_ps == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps fail&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;2、m_ps success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((m_ad = <span class="built_in">ad_open_dev</span>(<span class="string">&quot;sysdefault&quot;</span>, (<span class="type">int</span>)<span class="number">48000</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Failed to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;3、Success to open audio device&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//connectToDatabase();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnDestroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 音频设备</span></span><br><span class="line"><span class="keyword">if</span> (m_ad)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ad_close</span>(m_ad);</span><br><span class="line">m_ad = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放解码器</span></span><br><span class="line"><span class="keyword">if</span> (m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ps_free</span>(m_ps);</span><br><span class="line">m_ps = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放配置参数</span></span><br><span class="line"><span class="keyword">if</span> (m_config)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cmd_ln_free_r</span>(m_config);</span><br><span class="line">m_config = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">DoDataExchange</span>(pDX);</span><br><span class="line"><span class="built_in">DDX_Control</span>(pDX, IDC_EDIT_TEXT, m_edtText);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CAIVoiceAssistantDlg, CDialogEx)</span><br><span class="line"><span class="built_in">ON_WM_SYSCOMMAND</span>()</span><br><span class="line"><span class="built_in">ON_WM_PAINT</span>()</span><br><span class="line"><span class="built_in">ON_WM_QUERYDRAGICON</span>()</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_START, &amp;CAIVoiceAssistantDlg::OnBnClickedButtonStart)</span><br><span class="line"><span class="built_in">ON_BN_CLICKED</span>(IDC_BUTTON_STOP, &amp;CAIVoiceAssistantDlg::OnBnClickedButtonStop)</span><br><span class="line"><span class="built_in">ON_WM_DESTROY</span>()</span><br><span class="line"><span class="built_in">ON_WM_TIMER</span>()</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CAIVoiceAssistantDlg 消息处理程序</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CAIVoiceAssistantDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将“关于...”菜单项添加到系统菜单中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IDM_ABOUTBOX 必须在系统命令范围内。</span></span><br><span class="line"><span class="built_in">ASSERT</span>((IDM_ABOUTBOX &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(IDM_ABOUTBOX &lt; <span class="number">0xF000</span>);</span><br><span class="line"></span><br><span class="line">CMenu* pSysMenu = <span class="built_in">GetSystemMenu</span>(FALSE);</span><br><span class="line"><span class="keyword">if</span> (pSysMenu != <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">BOOL bNameValid;</span><br><span class="line">CString strAboutMenu;</span><br><span class="line">bNameValid = strAboutMenu.<span class="built_in">LoadString</span>(IDS_ABOUTBOX);</span><br><span class="line"><span class="built_in">ASSERT</span>(bNameValid);</span><br><span class="line"><span class="keyword">if</span> (!strAboutMenu.<span class="built_in">IsEmpty</span>())</span><br><span class="line">&#123;</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_SEPARATOR);</span><br><span class="line">pSysMenu-&gt;<span class="built_in">AppendMenu</span>(MF_STRING, IDM_ABOUTBOX, strAboutMenu);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span></span><br><span class="line"><span class="comment">//  执行此操作</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, TRUE);<span class="comment">// 设置大图标</span></span><br><span class="line"><span class="built_in">SetIcon</span>(m_hIcon, FALSE);<span class="comment">// 设置小图标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加额外的初始化代码</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnSysCommand</span><span class="params">(UINT nID, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((nID &amp; <span class="number">0xFFF0</span>) == IDM_ABOUTBOX)</span><br><span class="line">&#123;</span><br><span class="line">CAboutDlg dlgAbout;</span><br><span class="line">dlgAbout.<span class="built_in">DoModal</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnSysCommand</span>(nID, lParam);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span></span><br><span class="line"><span class="comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span></span><br><span class="line"><span class="comment">//  这将由框架自动完成。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnPaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsIconic</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">SendMessage</span>(WM_ICONERASEBKGND, <span class="built_in">reinterpret_cast</span>&lt;WPARAM&gt;(dc.<span class="built_in">GetSafeHdc</span>()), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使图标在工作区矩形中居中</span></span><br><span class="line"><span class="type">int</span> cxIcon = <span class="built_in">GetSystemMetrics</span>(SM_CXICON);</span><br><span class="line"><span class="type">int</span> cyIcon = <span class="built_in">GetSystemMetrics</span>(SM_CYICON);</span><br><span class="line">CRect rect;</span><br><span class="line"><span class="built_in">GetClientRect</span>(&amp;rect);</span><br><span class="line"><span class="type">int</span> x = (rect.<span class="built_in">Width</span>() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> y = (rect.<span class="built_in">Height</span>() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制图标</span></span><br><span class="line">dc.<span class="built_in">DrawIcon</span>(x, y, m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnPaint</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span></span><br><span class="line"><span class="comment">//显示。</span></span><br><span class="line"><span class="function">HCURSOR <span class="title">CAIVoiceAssistantDlg::OnQueryDragIcon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnBnClickedButtonStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 清空音频缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 PortAudio</span></span><br><span class="line">PaError err = <span class="built_in">Pa_Initialize</span>();</span><br><span class="line"><span class="keyword">if</span> (err != paNoError)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize PortAudio.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置音频流参数</span></span><br><span class="line">PaStreamParameters inputParameters;</span><br><span class="line">inputParameters.device = <span class="built_in">Pa_GetDefaultInputDevice</span>(); <span class="comment">// 获取默认输入设备</span></span><br><span class="line"><span class="keyword">if</span> (inputParameters.device == paNoDevice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No default input device.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">inputParameters.channelCount = <span class="number">2</span>; <span class="comment">// 双声道</span></span><br><span class="line">inputParameters.sampleFormat = paInt16; <span class="comment">// 16 位整数</span></span><br><span class="line">inputParameters.suggestedLatency = <span class="built_in">Pa_GetDeviceInfo</span>(inputParameters.device)-&gt;defaultLowInputLatency;</span><br><span class="line">inputParameters.hostApiSpecificStreamInfo = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开音频流</span></span><br><span class="line">err = <span class="built_in">Pa_OpenStream</span>(</span><br><span class="line">&amp;m_stream,</span><br><span class="line">&amp;inputParameters,</span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有输出</span></span><br><span class="line"><span class="number">48000</span>, <span class="comment">// 采样率</span></span><br><span class="line"><span class="number">2048</span>, <span class="comment">// 缓冲区大小</span></span><br><span class="line">paClipOff, <span class="comment">// 禁用剪切</span></span><br><span class="line"><span class="literal">nullptr</span>, <span class="comment">// 没有回调</span></span><br><span class="line"><span class="literal">nullptr</span>  <span class="comment">// 没有用户数据</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动音频流</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Pa_StartStream</span>(m_stream) != paNoError)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to start PortAudio stream.&quot;</span>));</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标志以启动录音</span></span><br><span class="line">m_bListening = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording started. Please speak now...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动录音线程</span></span><br><span class="line"><span class="function">std::thread <span class="title">t</span><span class="params">(&amp;CAIVoiceAssistantDlg::RecordAudio, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">t.<span class="built_in">detach</span>();  <span class="comment">// 分离线程</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置定时器，在15秒后停止录音</span></span><br><span class="line"><span class="built_in">SetTimer</span>(TIMER_ID, <span class="number">15000</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnBnClickedButtonStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止 PortAudio 流</span></span><br><span class="line"><span class="keyword">if</span> (m_stream)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示用户停止录音</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Recording stopped. Processing data...&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::RecordAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps); <span class="comment">// 开始新的语音识别</span></span><br><span class="line"><span class="type">int16_t</span> stereoBuffer[<span class="number">2048</span> * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (m_bListening)</span><br><span class="line">&#123;</span><br><span class="line">PaError err = <span class="built_in">Pa_ReadStream</span>(m_stream, stereoBuffer, <span class="number">2048</span>);</span><br><span class="line"><span class="keyword">if</span> (err != paNoError)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">WCHAR* wcsErrorText = <span class="keyword">new</span> WCHAR[len];</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, <span class="built_in">Pa_GetErrorText</span>(err), <span class="number">-1</span>, wcsErrorText, len);</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;Failed to read audio: %s&quot;</span>), wcsErrorText);</span><br><span class="line"><span class="keyword">delete</span>[] wcsErrorText;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">errorMsg = _T(<span class="string">&quot;Failed to read audio: Unknown error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将双声道数据转换为单声道数据，并添加到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="type">int16_t</span>&gt; <span class="title">monoBuffer</span><span class="params">(<span class="number">2048</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; <span class="number">2048</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">monoBuffer[i] = (stereoBuffer[i * <span class="number">2</span>] + stereoBuffer[i * <span class="number">2</span> + <span class="number">1</span>]) / <span class="number">2</span>; <span class="comment">// 简单平均以获得单声道数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将单声道数据添加到缓冲区</span></span><br><span class="line">m_audioBuffer.<span class="built_in">insert</span>(m_audioBuffer.<span class="built_in">end</span>(), monoBuffer.<span class="built_in">begin</span>(), monoBuffer.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, monoBuffer.<span class="built_in">data</span>(), monoBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps); <span class="comment">// 结束当前的语音识别</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止音频流</span></span><br><span class="line"><span class="built_in">Pa_StopStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_CloseStream</span>(m_stream);</span><br><span class="line"><span class="built_in">Pa_Terminate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::ProcessRecordedAudio</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_audioBuffer.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No audio data to process.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, m_audioBuffer.<span class="built_in">data</span>(), m_audioBuffer.<span class="built_in">size</span>(), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, hyp, <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">result = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="built_in">processRecognitionResult</span>(hyp);</span><br><span class="line">hyp = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;Failed to convert recognition result.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (nIDEvent == TIMER_ID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 停止录音</span></span><br><span class="line">m_bListening = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理录音数据</span></span><br><span class="line"><span class="built_in">ProcessRecordedAudio</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止定时器</span></span><br><span class="line"><span class="built_in">KillTimer</span>(TIMER_ID);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CDialogEx::<span class="built_in">OnTimer</span>(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">CString <span class="title">CAIVoiceAssistantDlg::ExtractTextFromHyp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* hyp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CString</span>(hyp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::ProcessAudioFile</span><span class="params">(<span class="type">const</span> std::string&amp; filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">std::ifstream <span class="title">file</span><span class="params">(filePath, std::ios::binary)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!file.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to open audio file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容到缓冲区</span></span><br><span class="line"><span class="function">std::vector&lt;int16&gt; <span class="title">audioData</span><span class="params">((std::istreambuf_iterator&lt;<span class="type">char</span>&gt;(file)), std::istreambuf_iterator&lt;<span class="type">char</span>&gt;())</span></span>;</span><br><span class="line">file.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (audioData.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No audio data read from file.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保 PocketSphinx 正确初始化</span></span><br><span class="line"><span class="keyword">if</span> (!m_ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;PocketSphinx not initialized.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始语音识别</span></span><br><span class="line"><span class="built_in">ps_start_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理音频数据</span></span><br><span class="line"><span class="built_in">ps_process_raw</span>(m_ps, audioData.<span class="built_in">data</span>(), audioData.<span class="built_in">size</span>() * <span class="built_in">sizeof</span>(int16), FALSE, FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束语音识别</span></span><br><span class="line"><span class="built_in">ps_end_utt</span>(m_ps);</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* hyp = <span class="built_in">ps_get_hyp</span>(m_ps, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hyp != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString result = <span class="built_in">CString</span>(hyp);</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">m_edtText.<span class="built_in">SetWindowText</span>(_T(<span class="string">&quot;No result detected&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------------------------- 数据库连接 ----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::processRecognitionResult</span><span class="params">(<span class="type">const</span> std::string&amp; recognizedText)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MYSQL* conn;</span><br><span class="line">MYSQL_RES* res;</span><br><span class="line">MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;13525681378.Ll&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>)) <span class="comment">// 设置连接的字符集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用LIKE进行模糊匹配</span></span><br><span class="line">std::string query = <span class="string">&quot;SELECT id FROM RecognizeContent WHERE content LIKE &#x27;%&quot;</span> + recognizedText + <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line">id = std::<span class="built_in">stoi</span>(row[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (id != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">query = <span class="string">&quot;SELECT content FROM ReplyContent WHERE id = &quot;</span> + std::<span class="built_in">to_string</span>(id);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, query.<span class="built_in">c_str</span>()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 将UTF-8字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[<span class="number">0</span>], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试输出</span></span><br><span class="line"><span class="comment">//AfxMessageBox(result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将CString转换为std::string</span></span><br><span class="line"><span class="function">CT2CA <span class="title">pszConvertedAnsiString</span><span class="params">(result)</span></span>;</span><br><span class="line"><span class="function">std::string <span class="title">replyContent</span><span class="params">(pszConvertedAnsiString)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用speak函数</span></span><br><span class="line"><span class="built_in">speak</span>(replyContent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to convert reply content to wide string.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;No matching content found.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用Windows TTS进行语音播报</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::speak</span><span class="params">(<span class="type">const</span> std::string&amp; text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ISpVoice* pVoice = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to initialize COM library.&quot;</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HRESULT hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span>**)&amp;pVoice);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 使用MultiByteToWideChar将std::string转换为std::wstring</span></span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="type">int</span> slength = (<span class="type">int</span>)text.<span class="built_in">length</span>() + <span class="number">1</span>;</span><br><span class="line">len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, text.<span class="built_in">c_str</span>(), slength, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="function">std::wstring <span class="title">wtext</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, text.<span class="built_in">c_str</span>(), slength, &amp;wtext[<span class="number">0</span>], len);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出调试信息</span></span><br><span class="line"><span class="built_in">AfxMessageBox</span>(<span class="built_in">CString</span>(wtext.<span class="built_in">c_str</span>()));</span><br><span class="line"></span><br><span class="line">hr = pVoice-&gt;<span class="built_in">Speak</span>(wtext.<span class="built_in">c_str</span>(), <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Speak failed.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">pVoice-&gt;<span class="built_in">Release</span>();</span><br><span class="line">pVoice = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;Failed to create voice instance.&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAIVoiceAssistantDlg::connectToDatabase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MYSQL* conn;</span><br><span class="line">MYSQL_RES* res;</span><br><span class="line">MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* server = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;13525681378.Ll&quot;</span>; <span class="comment">// 请替换为您的 MySQL 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* database = <span class="string">&quot;VoiceAssistant&quot;</span>;</span><br><span class="line"></span><br><span class="line">conn = <span class="built_in">mysql_init</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(conn, server, user, password, database, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_real_connect() success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_set_character_set</span>(conn, <span class="string">&quot;utf8mb4&quot;</span>))<span class="comment">// 设置连接的字符集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_set_character_set() failed&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql is utf8mb4&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行查询</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">mysql_query</span>(conn, <span class="string">&quot;SELECT * FROM RecognizeContent&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;SELECT * FROM RecognizeContent success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">mysql_store_result</span>(conn);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (res == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() failed&quot;</span>));</span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;mysql_store_result() success&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出查询结果</span></span><br><span class="line"><span class="type">int</span> num_fields = <span class="built_in">mysql_num_fields</span>(res);</span><br><span class="line"><span class="keyword">while</span> ((row = <span class="built_in">mysql_fetch_row</span>(res)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_fields; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (row[i] == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(_T(<span class="string">&quot;NULL value detected&quot;</span>));</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 UTF-8 编码的字符串转换为宽字符字符串</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CString errorMsg;</span><br><span class="line">errorMsg.<span class="built_in">Format</span>(_T(<span class="string">&quot;MultiByteToWideChar failed with error code: %d&quot;</span>), <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(errorMsg);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::wstring <span class="title">wstr</span><span class="params">(len, <span class="string">L&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, row[i], <span class="number">-1</span>, &amp;wstr[<span class="number">0</span>], len);</span><br><span class="line"><span class="function">CString <span class="title">result</span><span class="params">(wstr.c_str())</span></span>;</span><br><span class="line"><span class="built_in">AfxMessageBox</span>(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放结果集</span></span><br><span class="line"><span class="built_in">mysql_free_result</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line"><span class="built_in">mysql_close</span>(conn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 语音识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV_开发环境搭建(一）</title>
      <link href="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/"/>
      <url>/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Mac环境下命令方式搭建"><a href="#一、Mac环境下命令方式搭建" class="headerlink" title="一、Mac环境下命令方式搭建"></a>一、Mac环境下命令方式搭建</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install python@3.9</span><br><span class="line"></span><br><span class="line">pip3 install numpy matplotlib opencv_python</span><br><span class="line">// numpy：矩阵相关操作</span><br><span class="line">// matplotlib：图形相关</span><br></pre></td></tr></table></figure><p><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240717231410147-17231264469961.png" alt="image-20240717231410147"></p><h1 id="二、Windows命令行搭建环境"><a href="#二、Windows命令行搭建环境" class="headerlink" title="二、Windows命令行搭建环境"></a>二、Windows命令行搭建环境</h1><ul><li>下载并安装python3</li><li>配置python3环境变量</li><li>使用pip命令安装numpy等库</li></ul><ol><li>如果没有安装过python，则从<a href="https://www.python.org/ftp/python/3.7.8/%E6%89%BE%E5%88%B0python-3.7.8-amd64.exe%E4%B8%8B%E8%BD%BDpython3%EF%BC%8C%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%E4%B9%9F%E7%B1%BB%E4%BC%BC">https://www.python.org/ftp/python/3.7.8/找到python-3.7.8-amd64.exe下载python3，其他版本也类似</a></li><li>安装之后，在编辑环境变量的系统变量的Path里面添加python路径<br><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240717234510993-17231264469962.png" alt="image-20240717234510993"></li><li>python命令可用后，可以执行python -m pip –version查看是否安装了pip命令。pip可以用来安装各种包</li><li>命令行安装python -m pip install numpy matplotlib opencv-python</li><li>如果访问不了外网，可以手动下载文件<a href="https://pypi.org/project%EF%BC%8C%E5%9C%A8%E9%87%8C%E9%9D%A2%E6%9F%A5%E6%89%BE%E7%BC%BA%E5%A4%B1%E7%9A%84%E5%8C%85%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E4%BD%BF%E7%94%A8python">https://pypi.org/project，在里面查找缺失的包，然后再使用python</a> -m pip install xxx(下载的名字)</li></ol><p><strong>其他解决方案：</strong></p><p><a href="https://blog.csdn.net/allway2/article/details/120691222">如何在 Windows 上为 Python 安装 OpenCV？_windows python安装opencv-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_41627235/article/details/87692748">OpenCV-python安装教程_opencv python安装-CSDN博客</a></p><h1 id="三、Ubuntu-命令行搭建"><a href="#三、Ubuntu-命令行搭建" class="headerlink" title="三、Ubuntu 命令行搭建"></a>三、Ubuntu 命令行搭建</h1><ul><li>apt install python3</li><li>使用pip命令安装numpy、matplotlib和opencv库</li><li>apt install …</li></ul><h1 id="四、Windows-源码下载"><a href="#四、Windows-源码下载" class="headerlink" title="四、Windows 源码下载"></a>四、Windows 源码下载</h1><p><strong>源码编译方式步骤</strong></p><ul><li><h2 id="安装必要的库和工具"><a href="#安装必要的库和工具" class="headerlink" title="安装必要的库和工具"></a>安装必要的库和工具</h2><ul><li><h3 id="安装python3和numpy库"><a href="#安装python3和numpy库" class="headerlink" title="安装python3和numpy库"></a>安装python3和numpy库</h3><ol><li>如果没有安装过python，则从<a href="https://www.python.org/ftp/python/3.7.8/%E6%89%BE%E5%88%B0python-3.7.8-amd64.exe%E4%B8%8B%E8%BD%BDpython3%EF%BC%8C%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%E4%B9%9F%E7%B1%BB%E4%BC%BC">https://www.python.org/ftp/python/3.7.8/找到python-3.7.8-amd64.exe下载python3，其他版本也类似</a></li><li>安装VS，社区版即可，下载地址：<a href="https://visualstudio.microsoft.com/zh-hans/downloads/">https://visualstudio.microsoft.com/zh-hans/downloads/</a></li><li>安装 make，下载地址：<a href="https://github.com/Kitware/CMake/releases/download/v3.20.0-rc1/cmake-3.20.0-rc1-windows-x86_64.msi">https://github.com/Kitware/CMake/releases/download/v3.20.0-rc1/cmake-3.20.0-rc1-windows-x86_64.msi</a></li></ol></li><li><h3 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h3></li></ul></li><li><h2 id="下载OpenCV源码"><a href="#下载OpenCV源码" class="headerlink" title="下载OpenCV源码"></a>下载OpenCV源码</h2><ul><li>OpenCV 源码地址: git clone <a href="https://github.com/opencv/opencv.git">https://github.com/opencv/opencv.git</a></li><li>OpenCV-contribue 源码地址：git clone <a href="https://github.com/opencv/opecv_contrib.git">https://github.com/opencv/opecv_contrib.git</a></li></ul></li><li><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><ol><li><p>在存放opencv源码目录中创建build目录：mkdir build</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存放源码目录，如</span><br><span class="line">learnOpenCV</span><br><span class="line">opencv</span><br><span class="line">opencv-contrib</span><br><span class="line">build</span><br></pre></td></tr></table></figure></li><li><p>运行cmake，生成编译脚本</p><ol><li>选择opencv源码目录</li><li>选择编译目录</li><li>选择CPU架构</li><li>增加opencv-contrib选项</li><li>检查编译选项</li><li>生成编译脚本</li></ol><p><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240718010011912-17231264469963.png" alt="image-20240718010011912"></p><p><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240718010137273-17231264469964.png" alt="image-20240718010137273"></p><p><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240718010702210-17231264469965.png" alt="image-20240718010702210"></p></li><li><p>打开opencv工程文件OpenCV.sln</p><ol><li>选择输出版本文件</li><li>进行编译，编译好的文件都在build目录下的install文件夹中</li></ol></li></ol></li></ul><p><img src="/2024/07/18/OpenCV/OpenCV_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%80)/image-20240718011322647-17231264469966.png" alt="image-20240718011322647"></p><h1 id="五、Windows-下C-使用OpenCV库"><a href="#五、Windows-下C-使用OpenCV库" class="headerlink" title="五、Windows 下C++使用OpenCV库"></a>五、Windows 下C++使用OpenCV库</h1><h1 id="六、利用工具高效开发OpenCV"><a href="#六、利用工具高效开发OpenCV" class="headerlink" title="六、利用工具高效开发OpenCV"></a>六、利用工具高效开发OpenCV</h1>]]></content>
      
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收藏</title>
      <link href="/2024/07/07/%E6%94%B6%E8%97%8F/"/>
      <url>/2024/07/07/%E6%94%B6%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<p>搭建博客：<a href="https://zhuanlan.zhihu.com/p/102592286">https://zhuanlan.zhihu.com/p/102592286</a><br>博客分类：<a href="https://www.jianshu.com/p/e17711e44e00">https://www.jianshu.com/p/e17711e44e00</a></p><p><a href="https://cloud.tencent.com/developer/article/1970544">Hexo + Typora + 开发Hexo插件 解决图片路径不一致-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h1 id="优化博客"><a href="#优化博客" class="headerlink" title="优化博客"></a>优化博客</h1><ul><li><p>解决图片不显示的问题</p><ol><li><p>要添加图片，先npm install 一个hexo-asset-image的依赖</p><ul><li><pre><code class="shell">npm install https://github.com/CodeFalling/hexo-asset-image --save<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  2. 把_config.yml中的post_asset_folder设为true，这里是获得一个同名的文件夹，保存图片</span><br><span class="line"></span><br><span class="line">     - 我之前用md文档是默认设置”复制图片到 ./$&#123;filename&#125;.assets 文件夹</span><br><span class="line">     - 改为复制到指定路径 ./$&#123;filename&#125;</span><br><span class="line">     - 然后将之前的文件复制一遍，其中保存的图片信息就自动更改到了新文件夹中，删除之前的文件</span><br><span class="line">     - 命令行输入</span><br><span class="line">       - hexo clean</span><br><span class="line">       - hexo g</span><br><span class="line">       - hexo d </span><br><span class="line">       - 刷新网站，即可看到图片</span><br><span class="line"></span><br><span class="line"># 将Git仓库作为博客的资源文件</span><br><span class="line"></span><br><span class="line">1. **添加子模块**：</span><br><span class="line"></span><br><span class="line">   - 首先，添加子模块：</span><br><span class="line"></span><br><span class="line">     ```bash</span><br><span class="line">     git submodule add git仓库地址 source/_posts/Blogs</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ol><ul><li>这会将 <code>Blogs</code> 仓库的内容克隆 <code>source/_posts/Blogs</code> 目录中。</li></ul></li></ul><ol start="2"><li><p>**配置 <code>.gitignore</code>**：</p><ul><li><p>在 Blog 仓库中编辑 <code>.gitignore</code></p><p> 文件，添加要忽略的规则：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plaintext复制代码# 忽略子模块中的特定文件夹或文件</span><br><span class="line">source/_posts/Blogs/ignore_this_folder/</span><br><span class="line">source/_posts/Blogs/ignore_this_file.md</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>确认并提交更改</strong>：</p><ul><li><p>确认 <code>.gitignore</code> 设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li><li><p>提交 <code>.gitignore</code></p><p> 更改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash复制代码git add .gitignore</span><br><span class="line">git commit -m &quot;Update .gitignore to ignore certain submodule files&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="3-说明"><a href="#3-说明" class="headerlink" title="3. 说明"></a>3. <strong>说明</strong></h3><ul><li><strong>添加子模块后的配置</strong>：子模块被添加到父仓库后，你才能具体设置 <code>.gitignore</code> 文件来忽略子模块中的某些内容。这是因为在添加子模块之前，父仓库的 <code>.gitignore</code> 文件中不会存在子模块的目录结构。</li><li><strong>子模块管理</strong>：子模块在 <code>.gitignore</code> 中的设置仅影响父仓库（<code>Blog</code>），不会影响子模块（<code>Blogs</code>）。子模块仍会在其自身的 Git 仓库中正常管理和更新。</li></ul><p>如果你按照这些步骤进行操作，你将能够有效地管理和忽略子模块中的内容。如果有其他问题或需要进一步的帮助，请随时告诉我！</p><p>了解了，你的 <code>Blog</code> 仓库（用于 Hexo + Next 博客）和 <code>Blogs</code> 仓库（用于存放 Markdown 文档）的远程地址都是 GitHub。下面是具体操作步骤，以确保你理解如何处理 <code>.gitignore</code> 和提交的地址：</p><h3 id="1-提交-gitignore-到-Blog-仓库"><a href="#1-提交-gitignore-到-Blog-仓库" class="headerlink" title="1. 提交 .gitignore 到 Blog 仓库"></a>1. <strong>提交 <code>.gitignore</code> 到 <code>Blog</code> 仓库</strong></h3><p><code>Blog</code> 仓库是你用 Hexo + Next 搭建博客的地方。<code>Blog</code> 的 <code>.gitignore</code> 文件的更改应当提交到这个仓库中。这个仓库的远程地址是 <code>git@github.com:lxq-02/lxq-02.github.io.git</code>。</p><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p><strong>检查 <code>.gitignore</code> 文件</strong>：</p><ul><li>确保 <code>.gitignore</code> 文件中包含了你想忽略的子模块文件夹或文件路径。例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source/_posts/Blogs/ignore_this_folder/</span><br><span class="line">source/_posts/Blogs/ignore_this_file.md</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>将 <code>.gitignore</code> 文件的更改添加到 <code>Blog</code> 仓库</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/Blog</span><br><span class="line">git add .gitignore</span><br><span class="line">git commit -m <span class="string">&quot;Update .gitignore to ignore certain submodule files&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这将把 <code>.gitignore</code> 的更改推送到 <code>Blog</code> 仓库的 <code>master</code> 分支。</p></li></ol><h3 id="2-提交和更新-Blogs-子模块"><a href="#2-提交和更新-Blogs-子模块" class="headerlink" title="2. 提交和更新 Blogs 子模块"></a>2. <strong>提交和更新 <code>Blogs</code> 子模块</strong></h3><p><code>Blogs</code> 是一个子模块，它独立于 <code>Blog</code> 仓库管理。你在 <code>Blogs</code> 中的更改（如 Markdown 文件的更改）需要推送到 <code>Blogs</code> 仓库，但不涉及 <code>.gitignore</code> 的管理。</p><h4 id="步骤：-1"><a href="#步骤：-1" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p><strong>在 <code>Blogs</code> 中进行更改</strong>：</p><ul><li>例如，修改或添加 Markdown 文件。</li></ul></li><li><p><strong>提交和推送 <code>Blogs</code> 的更改</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/Blogs</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Update blog content&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-更新子模块"><a href="#3-更新子模块" class="headerlink" title="3. 更新子模块"></a>3. <strong>更新子模块</strong></h3><p>在 <code>Blog</code> 中更新子模块以获取 <code>Blogs</code> 中的最新内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/Blog</span><br><span class="line">git submodule update --remote</span><br><span class="line">git add <span class="built_in">source</span>/_posts/Blogs</span><br><span class="line">git commit -m <span class="string">&quot;Update Blogs submodule to latest commit&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="4-使用-Hexo-更新和部署博客"><a href="#4-使用-Hexo-更新和部署博客" class="headerlink" title="4. 使用 Hexo 更新和部署博客"></a>4. <strong>使用 Hexo 更新和部署博客</strong></h3><p>在 <code>Blog</code> 仓库中，使用 Hexo 更新博客内容并部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/Blog</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><p><strong><code>Blog</code> 仓库</strong>（<code>lxq-02.github.io</code>）：</p><ul><li><code>.gitignore</code> 文件的更改需要提交到这里。</li><li>用 Hexo 命令生成和部署博客内容。</li></ul></li><li><p><strong><code>Blogs</code> 仓库</strong>：</p><ul><li>只用于存储 Markdown 文件，子模块的更改在 <code>Blogs</code> 仓库中提交和推送。</li></ul></li></ul><p>如果还有其他问题或需要进一步的帮助，请告诉我！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CIR</title>
      <link href="/2024/07/07/CIR/CIR/"/>
      <url>/2024/07/07/CIR/CIR/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>研发</th><th>CIR初版开发</th><th>8月25日</th><th>根据需求说明书完成基础界面与通讯功能</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h1><p>使用：</p><p>VS2022</p><p>QT5.15.2</p><p><img src="/2024/07/07/CIR/CIR/image-20240813112624374.png" alt="image-20240813112624374"></p><h1 id="二、仿真界面开发"><a href="#二、仿真界面开发" class="headerlink" title="二、仿真界面开发"></a>二、仿真界面开发</h1><p>仿真界面分为两部分，一部分为窗口显示区域，一部分为模拟按钮区域。</p><p>将两部分分别设置为自定义控件，然后分别设置界面内容和响应操作。</p><p>软件启动后默认带外侧按键，主界面黑屏。</p><p>竖屏MMI分辨率768*1024，主界面640 * 480.</p><p>主界面640*480 ViewWidget</p><p>按钮界面（768 * 480） ButtonWidget</p><p><img src="/2024/07/07/CIR/CIR/image-20240814160522265.png" alt="image-20240814160522265"></p><h1 id="三、ButtonWidget开发"><a href="#三、ButtonWidget开发" class="headerlink" title="三、ButtonWidget开发"></a>三、ButtonWidget开发</h1><p><a href="https://blog.csdn.net/qq_43376782/article/details/130478962">【五一创作】VS+Qt主界面内嵌自定义控件的四种方法以及不同自定义控件数据交互_qt交互控件-CSDN博客</a></p><p>ButtonWidget为主要包含下面的按钮，我分为了几类：</p><ol><li>上方8个功能按钮</li><li>左侧比较重要的几个按钮</li><li>中间包含列尾控制和数字的15个按钮</li><li>右侧的各种按钮</li></ol><p>按钮为QPushButton，保存在vector容器中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;QPushButton*&gt; m_topButtons;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createTopButtons</span><span class="params">(<span class="type">int</span> count)</span></span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;QPushButton*&gt; m_leftButtons;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createLeftButtons</span><span class="params">(<span class="type">int</span> count)</span></span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;QPushButton*&gt; m_midButtons;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createMidButtons</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;QPushButton*&gt; m_rightButtons;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createRightButtons</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="3-1、上方按钮"><a href="#3-1、上方按钮" class="headerlink" title="3.1、上方按钮"></a>3.1、上方按钮</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ButtonWidget::createTopButtons</span><span class="params">(<span class="type">int</span> count)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m_btnWidth = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> m_btnHeight = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">44</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">&#123;</span><br><span class="line">QPushButton* button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="keyword">this</span>);</span><br><span class="line">button-&gt;<span class="built_in">setGeometry</span>(x, y, m_btnWidth, m_btnHeight);</span><br><span class="line">button-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(i + <span class="number">1</span>)); <span class="comment">// 设置按钮文本为按钮编号</span></span><br><span class="line">button-&gt;<span class="built_in">setStyleSheet</span>(</span><br><span class="line"><span class="string">&quot;QPushButton &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #f0f0f0;&quot;</span>  <span class="comment">// 基础背景颜色</span></span><br><span class="line"><span class="string">&quot;color: black;&quot;</span>  <span class="comment">// 按钮文字颜色</span></span><br><span class="line"><span class="string">&quot;border: 2px solid #d0d0d0;&quot;</span>  <span class="comment">// 按钮边框颜色</span></span><br><span class="line"><span class="string">&quot;border-radius: 10px;&quot;</span>  <span class="comment">// 按钮圆角</span></span><br><span class="line"><span class="string">&quot;font-size: 16px;&quot;</span>  <span class="comment">// 按钮文字大小</span></span><br><span class="line"><span class="string">&quot;padding: 5px;&quot;</span>  <span class="comment">// 按钮内边距</span></span><br><span class="line"><span class="string">&quot;box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);&quot;</span>  <span class="comment">// 按钮阴影</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:hover &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #e0e0e0;&quot;</span>  <span class="comment">// 鼠标悬停时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:pressed &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #d0d0d0;&quot;</span>  <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">m_topButtons.<span class="built_in">push_back</span>(button);</span><br><span class="line">x += <span class="number">85</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-2、左侧按钮"><a href="#3-2、左侧按钮" class="headerlink" title="3.2、左侧按钮"></a>3.2、左侧按钮</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ButtonWidget::createLeftButtons</span><span class="params">(<span class="type">int</span> count)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m_btnWidth = <span class="number">90</span>;</span><br><span class="line"><span class="type">int</span> m_btnHeight = <span class="number">80</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">70</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标签文本</span></span><br><span class="line">QStringList labelTexts = &#123;</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;列尾\n排风&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;紧急\n呼叫&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;报警&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;主控&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;没看清&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">QPushButton* button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="built_in">QString</span>(<span class="string">&quot;Button %1&quot;</span>).<span class="built_in">arg</span>(i + <span class="number">1</span>), <span class="keyword">this</span>);</span><br><span class="line">button-&gt;<span class="built_in">setGeometry</span>(x, y, m_btnWidth, m_btnHeight);</span><br><span class="line">button-&gt;<span class="built_in">setText</span>(labelTexts[i]);</span><br><span class="line">button-&gt;<span class="built_in">setStyleSheet</span>(</span><br><span class="line"><span class="string">&quot;QPushButton &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: red;&quot;</span>  <span class="comment">// 基础背景颜色</span></span><br><span class="line"><span class="string">&quot;color: white;&quot;</span>  <span class="comment">// 按钮文字颜色</span></span><br><span class="line"><span class="string">&quot;border: 2px solid #880000;&quot;</span>  <span class="comment">// 按钮边框颜色</span></span><br><span class="line"><span class="string">&quot;border-radius: 10px;&quot;</span>  <span class="comment">// 按钮圆角</span></span><br><span class="line"><span class="string">&quot;font-size: 16px;&quot;</span>  <span class="comment">// 按钮文字大小</span></span><br><span class="line"><span class="string">&quot;padding: 5px;&quot;</span>  <span class="comment">// 按钮内边距</span></span><br><span class="line"><span class="string">&quot;box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);&quot;</span>  <span class="comment">// 按钮阴影</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:hover &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #ff6666;&quot;</span>  <span class="comment">// 鼠标悬停时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:pressed &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #cc0000;&quot;</span>  <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line">);</span><br><span class="line">m_leftButtons.<span class="built_in">push_back</span>(button);</span><br><span class="line"></span><br><span class="line">y += <span class="number">85</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x += <span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt; count; i++)</span><br><span class="line">&#123;</span><br><span class="line">QPushButton* button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="built_in">QString</span>(<span class="string">&quot;Button %1&quot;</span>).<span class="built_in">arg</span>(i + <span class="number">1</span>), <span class="keyword">this</span>);</span><br><span class="line">button-&gt;<span class="built_in">setGeometry</span>(x, y, <span class="number">75</span>, <span class="number">75</span>);</span><br><span class="line">button-&gt;<span class="built_in">setText</span>(labelTexts[i]);</span><br><span class="line">button-&gt;<span class="built_in">setStyleSheet</span>(</span><br><span class="line"><span class="string">&quot;QPushButton &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: black;&quot;</span>  <span class="comment">// 基础背景颜色</span></span><br><span class="line"><span class="string">&quot;color: white;&quot;</span>  <span class="comment">// 按钮文字颜色</span></span><br><span class="line"><span class="string">&quot;border: 2px solid #555555;&quot;</span>  <span class="comment">// 按钮边框颜色</span></span><br><span class="line"><span class="string">&quot;border-radius: 10px;&quot;</span>  <span class="comment">// 按钮圆角</span></span><br><span class="line"><span class="string">&quot;font-size: 16px;&quot;</span>  <span class="comment">// 按钮文字大小</span></span><br><span class="line"><span class="string">&quot;padding: 5px;&quot;</span>  <span class="comment">// 按钮内边距</span></span><br><span class="line"><span class="string">&quot;box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);&quot;</span>  <span class="comment">// 按钮阴影</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:hover &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #444444;&quot;</span>  <span class="comment">// 鼠标悬停时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:pressed &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #222222;&quot;</span>  <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line">);</span><br><span class="line">m_leftButtons.<span class="built_in">push_back</span>(button);</span><br><span class="line"></span><br><span class="line">y += <span class="number">80</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3、中间按钮"><a href="#3-3、中间按钮" class="headerlink" title="3.3、中间按钮"></a>3.3、中间按钮</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ButtonWidget::createMidButtons</span><span class="params">()</span><span class="comment">// 创建中间的按钮</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m_btnWidth = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> m_btnHeight = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">200</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标签文本</span></span><br><span class="line">QStringList labelTexts = &#123;</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;列尾\n消号&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;紧急\n确认&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;风压\n查询&quot;</span>),</span><br><span class="line"> <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;#&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">QPushButton* button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(labelTexts[i*<span class="number">3</span> + j], <span class="keyword">this</span>);</span><br><span class="line">button-&gt;<span class="built_in">setGeometry</span>(x, y, m_btnWidth, m_btnHeight);</span><br><span class="line">button-&gt;<span class="built_in">setStyleSheet</span>(</span><br><span class="line"><span class="string">&quot;QPushButton &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: white;&quot;</span>  <span class="comment">// 基础背景颜色</span></span><br><span class="line"><span class="string">&quot;color: black;&quot;</span>  <span class="comment">// 按钮文字颜色</span></span><br><span class="line"><span class="string">&quot;border: 2px solid #d0d0d0;&quot;</span>  <span class="comment">// 按钮边框颜色</span></span><br><span class="line"><span class="string">&quot;border-radius: 10px;&quot;</span>  <span class="comment">// 按钮圆角</span></span><br><span class="line"><span class="string">&quot;font-size: 17px;&quot;</span>  <span class="comment">// 按钮文字大小</span></span><br><span class="line"><span class="string">&quot;padding: 5px;&quot;</span>  <span class="comment">// 按钮内边距</span></span><br><span class="line"><span class="string">&quot;box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);&quot;</span>  <span class="comment">// 按钮阴影</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:hover &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #f0f0f0;&quot;</span>  <span class="comment">// 鼠标悬停时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:pressed &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #e0e0e0;&quot;</span>  <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line">);</span><br><span class="line">m_midButtons.<span class="built_in">push_back</span>(button);</span><br><span class="line"></span><br><span class="line">x += <span class="number">90</span>;</span><br><span class="line">&#125;</span><br><span class="line">y += <span class="number">80</span>;</span><br><span class="line">x = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4、右侧按钮"><a href="#3-4、右侧按钮" class="headerlink" title="3.4、右侧按钮"></a>3.4、右侧按钮</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ButtonWidget::createRightButtons</span><span class="params">()</span><span class="comment">// 创建右边的按钮</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m_btnWidth = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> m_btnHeight = <span class="number">75</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">500</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置标签文本</span></span><br><span class="line">QStringList labelTexts = &#123;</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;呼叫&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;切换&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;挂断&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;设置&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;↑&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;界面&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;←&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;确认\n签收&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;→&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;查询&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;↓&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;回格&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;打印&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;调车\n请求&quot;</span>),</span><br><span class="line">QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;退出&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">QPushButton* button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(labelTexts[i*<span class="number">3</span> + j], <span class="keyword">this</span>);</span><br><span class="line">button-&gt;<span class="built_in">setGeometry</span>(x, y, m_btnWidth, m_btnHeight);</span><br><span class="line">button-&gt;<span class="built_in">setStyleSheet</span>(</span><br><span class="line"><span class="string">&quot;QPushButton &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: white;&quot;</span>  <span class="comment">// 基础背景颜色</span></span><br><span class="line"><span class="string">&quot;color: black;&quot;</span>  <span class="comment">// 按钮文字颜色</span></span><br><span class="line"><span class="string">&quot;border: 2px solid #d0d0d0;&quot;</span>  <span class="comment">// 按钮边框颜色</span></span><br><span class="line"><span class="string">&quot;border-radius: 10px;&quot;</span>  <span class="comment">// 按钮圆角</span></span><br><span class="line"><span class="string">&quot;font-size: 17px;&quot;</span>  <span class="comment">// 按钮文字大小</span></span><br><span class="line"><span class="string">&quot;padding: 5px;&quot;</span>  <span class="comment">// 按钮内边距</span></span><br><span class="line"><span class="string">&quot;box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);&quot;</span>  <span class="comment">// 按钮阴影</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:hover &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #f0f0f0;&quot;</span>  <span class="comment">// 鼠标悬停时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;QPushButton:pressed &#123;&quot;</span></span><br><span class="line"><span class="string">&quot;background-color: #e0e0e0;&quot;</span>  <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br><span class="line">);</span><br><span class="line">m_rightButtons.<span class="built_in">push_back</span>(button);</span><br><span class="line"></span><br><span class="line">x += <span class="number">85</span>;</span><br><span class="line">&#125;</span><br><span class="line">y += <span class="number">80</span>;</span><br><span class="line">x = <span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、主界面"><a href="#四、主界面" class="headerlink" title="四、主界面"></a>四、主界面</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ViewWidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPixmap&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFrame&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFontDatabase&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ViewWidget::<span class="built_in">ViewWidget</span>(QWidget *parent)</span><br><span class="line">: <span class="built_in">QWidget</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    ui.<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建主布局</span></span><br><span class="line">    QVBoxLayout* mainLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建并设置6个显示区域</span></span><br><span class="line">    QWidget* basicWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    basicWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">80</span>);</span><br><span class="line">    basicWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/backgroundimage.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建标签并设置文本和样式</span></span><br><span class="line">    QLabel* trainNumlabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(basicWidget);</span><br><span class="line">    QString str = str.<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;车次号：&quot;</span>);</span><br><span class="line">    trainNumlabel-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    QFont font;</span><br><span class="line">    font.<span class="built_in">setFamily</span>(<span class="string">&quot;Microsoft YaHei UI&quot;</span>);  <span class="comment">// 设置字体为宋体</span></span><br><span class="line">    font.<span class="built_in">setPointSize</span>(<span class="number">17</span>);     <span class="comment">// 设置字体大小</span></span><br><span class="line">    trainNumlabel-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    trainNumlabel-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color: white;&quot;</span>);</span><br><span class="line">    trainNumlabel-&gt;<span class="built_in">setGeometry</span>(<span class="number">110</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>);  <span class="comment">// 设置 QLabel 的位置和大小</span></span><br><span class="line"></span><br><span class="line">    QLabel* locoNumLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(basicWidget);</span><br><span class="line">    str = str.<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;机车号：&quot;</span>);</span><br><span class="line">    locoNumLabel-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    locoNumLabel-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    locoNumLabel-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color: white;&quot;</span>);</span><br><span class="line">    locoNumLabel-&gt;<span class="built_in">setGeometry</span>(<span class="number">300</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    QWidget* endOfTrainStatusWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    endOfTrainStatusWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">80</span>);</span><br><span class="line">    endOfTrainStatusWidget-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="number">80</span>);</span><br><span class="line">    endOfTrainStatusWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/backgroundimage1.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建标签并设置文本和样式</span></span><br><span class="line">    QLabel* endOfTrainStatuslabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(endOfTrainStatusWidget);</span><br><span class="line">    str = str.<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;列尾状态：&quot;</span>);</span><br><span class="line">    endOfTrainStatuslabel-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    endOfTrainStatuslabel-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    endOfTrainStatuslabel-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color: black;&quot;</span>);</span><br><span class="line">    endOfTrainStatuslabel-&gt;<span class="built_in">setGeometry</span>(<span class="number">80</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>);  <span class="comment">// 设置 QLabel 的位置和大小</span></span><br><span class="line"></span><br><span class="line">    QLabel* endOfPressLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(endOfTrainStatusWidget);</span><br><span class="line">    str = str.<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;尾部风压：&quot;</span>);</span><br><span class="line">    endOfPressLabel-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    endOfPressLabel-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    endOfPressLabel-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color: black;&quot;</span>);</span><br><span class="line">    endOfPressLabel-&gt;<span class="built_in">setGeometry</span>(<span class="number">320</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    QWidget* safeWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    safeWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">120</span>);</span><br><span class="line">    safeWidget-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="number">160</span>);</span><br><span class="line">    safeWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/black.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QWidget* workWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    workWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">40</span>);</span><br><span class="line">    workWidget-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="number">280</span>);</span><br><span class="line">    workWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/black.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QWidget* dispatchWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    dispatchWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">80</span>);</span><br><span class="line">    dispatchWidget-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="number">320</span>);</span><br><span class="line">    dispatchWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/backgroundimage1.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QWidget* funcKeyWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    funcKeyWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">640</span>, <span class="number">80</span>);</span><br><span class="line">    funcKeyWidget-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="number">400</span>);</span><br><span class="line">    funcKeyWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;background-image: url(:/image/backgroundimage.png);&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置标签文本</span></span><br><span class="line">    QStringList labelTexts = &#123;</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;第一个&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;调度&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;第三个&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;第四个&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;隧道\n司机&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;隧道\n车站&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;平原\n司机&quot;</span>),</span><br><span class="line">        QString::<span class="built_in">fromLocal8Bit</span>(<span class="string">&quot;平原\n车站&quot;</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        QLabel* label = <span class="keyword">new</span> <span class="built_in">QLabel</span>(funcKeyWidget);</span><br><span class="line">        label-&gt;<span class="built_in">setText</span>(labelTexts[i]);</span><br><span class="line">        label-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color: white; font-size: 23px; border: 2px solid black&quot;</span>);</span><br><span class="line">        label-&gt;<span class="built_in">setGeometry</span>(i * <span class="number">80</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>);</span><br><span class="line">        label-&gt;<span class="built_in">setMargin</span>(<span class="number">5</span>);</span><br><span class="line">        labels.<span class="built_in">push_back</span>(label);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加显示区域到主布局</span></span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(basicWidget);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(endOfTrainStatusWidget);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(safeWidget);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(workWidget);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(dispatchWidget);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addWidget</span>(funcKeyWidget);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setLayout</span>(mainLayout);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="五、数据通信"><a href="#五、数据通信" class="headerlink" title="五、数据通信"></a>五、数据通信</h1><p>&#x3D;&#x3D;使用SMTNet&#x3D;&#x3D;</p><p>先将SMTNet文件夹放在写代码的文件路径中，然后新建筛选器，将文件导入到VS中</p><p>将config.dat和.dll文件放入写代码的文件路径中，不需要把SMTnet.dll加到链接器中</p><p>将SMTnet.dll放到写代码的文件路径中</p><p>SMTNET是在32位系统下的，切记</p><h1 id="六、文本转语音"><a href="#六、文本转语音" class="headerlink" title="六、文本转语音"></a>六、文本转语音</h1><p>使用的是SAPI，代码如下，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sapi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(push)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable: 4996)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sphelper.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;qlogging.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(pop)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VoiceController</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">VoiceController</span>() : <span class="built_in">pVoice</span>(<span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 初始化 COM 库</span></span><br><span class="line">        hr = ::<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;Failed to initialize COM library.&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 SAPI 语音实例</span></span><br><span class="line">        hr = <span class="built_in">CoCreateInstance</span>(CLSID_SpVoice, <span class="literal">NULL</span>, CLSCTX_ALL, IID_ISpVoice, (<span class="type">void</span>**)&amp;pVoice);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;Failed to create voice instance.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~<span class="built_in">VoiceController</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pVoice)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 停止任何正在进行的朗读</span></span><br><span class="line">            pVoice-&gt;<span class="built_in">Speak</span>(<span class="literal">NULL</span>, SPF_PURGEBEFORESPEAK, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放 COM 库</span></span><br><span class="line">        ::<span class="built_in">CoUninitialize</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">(<span class="type">const</span> std::wstring&amp; text)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pVoice)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 异步朗读文本</span></span><br><span class="line">            hr = pVoice-&gt;<span class="built_in">Speak</span>(text.<span class="built_in">c_str</span>(), SPF_ASYNC, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;Speak failed.&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">stop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pVoice)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 停止当前的朗读</span></span><br><span class="line">            pVoice-&gt;<span class="built_in">Speak</span>(<span class="literal">NULL</span>, SPF_PURGEBEFORESPEAK, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    HRESULT hr;</span><br><span class="line">    CComPtr&lt;ISpVoice&gt; pVoice;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="七、长按按钮3秒运行功能"><a href="#七、长按按钮3秒运行功能" class="headerlink" title="七、长按按钮3秒运行功能"></a>七、长按按钮3秒运行功能</h1><p>首先，创建一个定时器，可以用来检测3秒的时间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">QTimer* m_pressTimer;   <span class="comment">// 用于检测3秒的定时器</span></span><br><span class="line"><span class="type">bool</span> m_confirmButtonPressed;    <span class="comment">// 用于检测“列尾确认”键是否按下</span></span><br><span class="line"><span class="type">bool</span> m_airDischargeInitiated; <span class="comment">// 用于检测是否已经启动排风</span></span><br><span class="line"><span class="type">bool</span> m_airDischarge = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"> m_pressTimer = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line"> m_pressTimer-&gt;<span class="built_in">setInterval</span>(<span class="number">3000</span>); <span class="comment">// 3秒</span></span><br></pre></td></tr></table></figure><p>然后，一个按钮控件设置3个槽函数，一个pressed按压，一个released释放，还有一个是定时器超时的槽函数</p><p>按压启动定时器，释放关闭定时器，</p><p>如果按压时间超过3秒，启动定时器超时槽函数，判断功能是否已经实现，如果未实现，实现功能</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onAirDischargeButtonPressed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_airDischargeInitiated = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动定时器，开始计时</span></span><br><span class="line">    m_pressTimer-&gt;<span class="built_in">start</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onAirDischargeButtonReleased</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 停止定时器</span></span><br><span class="line">    m_pressTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onPressTimerTimeout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 停止定时器</span></span><br><span class="line">    m_pressTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定时器超时后，如果排风动作还未触发，则触发</span></span><br><span class="line">    <span class="keyword">if</span> (!m_airDischargeInitiated)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">initiateAirDischarge</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、点击按钮之后，5秒内点击确认键"><a href="#八、点击按钮之后，5秒内点击确认键" class="headerlink" title="八、点击按钮之后，5秒内点击确认键"></a>八、点击按钮之后，5秒内点击确认键</h1><p>如果有两个按钮一起点击才可以运行的功能，可以设置筛选器，其实就是给每个按钮的点击设置一个bool变量，如果点击了，bool变量为真，其他的bool变量全部置false；如果按钮绑定实现功能，则在第二个按钮点击时，先判断绑定的按钮是否是true，如果是true，则代表两个按钮是连续点击的，再继续判读是否满足其他实现功能的条件</p><p>例子如下：</p><p>按钮warning 和按钮Confirm是绑定的，如果中间有其他按钮点击了，如按钮Right，则组合按键功能失败</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::handleButtonWarningPressed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">setButtonStateFalse</span>();</span><br><span class="line">    m_btnLeft[<span class="number">2</span>] = <span class="literal">true</span>;    <span class="comment">// 按下了“报警”键，等待点击“确认”</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onButtonRight</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">setButtonStateFalse</span>();<span class="comment">// 没有绑定的按钮的话，自动将所有按钮的bool变量置false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::handleButtonConfirm</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 前一次按下了“报警”键</span></span><br><span class="line">    <span class="keyword">if</span> (m_btnLeft[<span class="number">2</span>] == <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!m_warningTriggered &amp;&amp; m_warningConfirmTimer-&gt;<span class="built_in">isActive</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">initiateWarning</span>();</span><br><span class="line">            m_warningConfirmTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">setButtonStateFalse</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 欣远 </tag>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux_基础(一)</title>
      <link href="/2024/07/07/Linux/Linux/"/>
      <url>/2024/07/07/Linux/Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h1><h2 id="1-1、操作系统概述"><a href="#1-1、操作系统概述" class="headerlink" title="1.1、操作系统概述"></a>1.1、操作系统概述</h2><p><strong>操作系统：</strong>软件的一类</p><p><strong>作用：</strong>协助用户调度硬件工作，充当用户和计算机硬件之间的桥梁</p><p>常见的操作系统：</p><p>PC端：Windows、Linux、MacOS</p><p>移动端：Android、IOS、鸿蒙系统</p><h2 id="1-2、初始Linux"><a href="#1-2、初始Linux" class="headerlink" title="1.2、初始Linux"></a>1.2、初始Linux</h2><h3 id="1-2-1-Linux的诞生"><a href="#1-2-1-Linux的诞生" class="headerlink" title="1.2.1 Linux的诞生"></a>1.2.1 Linux的诞生</h3><p>Linux由林纳斯·托瓦兹在1991年创立并发展至今成为服务器操作系统领域的核心系统。</p><h3 id="1-2-2-Linux系统的内核"><a href="#1-2-2-Linux系统的内核" class="headerlink" title="1.2.2 Linux系统的内核"></a>1.2.2 Linux系统的内核</h3><p>内核提供了Linux系统的主要功能，如硬件调度管理的能力。</p><p>Linux内核是免费开源的，任何人都可以查看内核的源代码，甚至是贡献源代码</p><p>网站：<a href="https://www.kernel.org/">https://www.kernel.org</a></p><p><img src="/2024/07/07/Linux/Linux/image-20221207212358655.png" alt="image-20221207212358655"></p><p>比如，播放音乐，无论用户使用自带音乐播放器还是自行安装的第三方播放器</p><p>均是由播放器程序，调用内核提供的相关功能，由内核调用CPU解码、音响发声等</p><h3 id="1-2-3-Linux系统发行版"><a href="#1-2-3-Linux系统发行版" class="headerlink" title="1.2.3 Linux系统发行版"></a>1.2.3 Linux系统发行版</h3><p>内核无法被用户直接使用，需要配合应用程序才能被用户使用。</p><p>在内核之上，封装系统级应用程序，组合在一起就称之为Linux发行版。</p><p>centOS，ubuntu</p><h2 id="1-3、虚拟机介绍"><a href="#1-3、虚拟机介绍" class="headerlink" title="1.3、虚拟机介绍"></a>1.3、虚拟机介绍</h2><p>虚拟机：通过虚拟化技术，在电脑内，虚拟出计算机硬件，并给虚拟的硬件安装操作系统，即可得到一台虚拟的电脑，称之为虚拟机</p><p>使用虚拟机的原因：</p><p>在其他其他系统中配置Linux环境进行学习</p><h2 id="1-4、VMware-WorkStation安装"><a href="#1-4、VMware-WorkStation安装" class="headerlink" title="1.4、VMware WorkStation安装"></a>1.4、VMware WorkStation安装</h2><h3 id="1-4-1、VMware-WorkStation软件"><a href="#1-4-1、VMware-WorkStation软件" class="headerlink" title="1.4.1、VMware WorkStation软件"></a>1.4.1、VMware WorkStation软件</h3><p><strong>虚拟化软件</strong></p><p>通过虚拟化集市，虚拟出计算机的硬件。</p><p><strong>下载地址：</strong><a href="https://www.vmware.com/cn/products/workstation-pro.html">https://www.vmware.com/cn/products/workstation-pro.html</a></p><h3 id="1-4-2、软件的安装"><a href="#1-4-2、软件的安装" class="headerlink" title="1.4.2、软件的安装"></a>1.4.2、软件的安装</h3><p>软件安装完成后，验证一下网络适配器是否正常配置。</p><p>或者通过快捷键：win + r<br>输入ncpa.cpl回车即可打开</p><h2 id="1-5、在VMware上安装Linux"><a href="#1-5、在VMware上安装Linux" class="headerlink" title="1.5、在VMware上安装Linux"></a>1.5、在VMware上安装Linux</h2><h3 id="1-5-1-下载CentOS操作系统"><a href="#1-5-1-下载CentOS操作系统" class="headerlink" title="1.5.1 下载CentOS操作系统"></a>1.5.1 下载CentOS操作系统</h3><p>首先，我们需要下载操作系统的安装文件，本次使用CentOS7.6版本进行学习：<br><a href="https://vault.centos.org/7.6.1810/isos/x86_64/">https://vault.centos.org/7.6.1810/isos/x86_64/</a>   (最后的&#x2F;不要漏掉）</p><p><img src="/2024/07/07/Linux/Linux/image-20221208115950907.png" alt="image-20221208115950907"></p><p>或者直接使用如下链接下载：<br><a href="https://vault.centos.org/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso">https://vault.centos.org/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso</a></p><h3 id="1-5-2-在VMware中安装CentOS操作系统"><a href="#1-5-2-在VMware中安装CentOS操作系统" class="headerlink" title="1.5.2 在VMware中安装CentOS操作系统"></a>1.5.2 在VMware中安装CentOS操作系统</h3><p>打开VMware软件</p><p><img src="/2024/07/07/Linux/Linux/image-20221208120052453.png" alt="image-20221208120052453"> </p><p>按照步骤创建虚拟机：</p><p><img src="/2024/07/07/Linux/Linux/image-20221208120138387.png" alt="image-20221208120138387"></p><p>点击完成后，即开启了CentOS系统的安装，耐心等待安装完成即可，后续都是自动化的。</p><p><img src="/2024/07/07/Linux/Linux/image-20221208120153131.png" alt="image-20221208120153131"> </p><p>点击用户名：<br><img src="/2024/07/07/Linux/Linux/image-20221208120206976.png" alt="image-20221208120206976"></p><p>输入密码：</p><p><img src="/2024/07/07/Linux/Linux/image-20221208120214175.png" alt="image-20221208120214175"></p><h2 id="1-6、远程连接Linux系统"><a href="#1-6、远程连接Linux系统" class="headerlink" title="1.6、远程连接Linux系统"></a>1.6、远程连接Linux系统</h2><h3 id="1-6-1-图形化和命令行"><a href="#1-6-1-图形化和命令行" class="headerlink" title="1.6.1 图形化和命令行"></a>1.6.1 图形化和命令行</h3><ul><li>图形化操作是指使用操作系统附带的图形化页面，以图形化的窗口形式获得操作反馈，从而对操作系统进行操作、使用</li><li>命令行操作是指使用各种命令，以文字字符的形式获得操作反馈，从而对操作系统进行操作、使用</li></ul><h3 id="1-6-2-FinalShell"><a href="#1-6-2-FinalShell" class="headerlink" title="1.6.2 FinalShell"></a>1.6.2 FinalShell</h3><p>我们使用VMware可以得到Linux虚拟机，但是在VMware中操作Linux的命令行页面不太方便，主要是：<br>内容的复制、粘贴跨越VMware不方便<br>文件的上传、下载跨越VMware不方便<br>也就是和Linux系统的各类交互，跨越VMware不方便</p><p>我们可以通过第三方软件，FinalShell，远程连接到Linux操作系统之上。<br>并通过FinalShell去操作Linux系统。<br>这样各类操作都会十分的方便。</p><p>FinalShell的下载地址为：<br>Windows:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.exe">http://www.hostbuf.com/downloads/finalshell_install.exe</a><br>Mac:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.pkg">http://www.hostbuf.com/downloads/finalshell_install.pkg</a><br>下载完成后双击打开安装。</p><h3 id="1-6-3-连接到Linux系统"><a href="#1-6-3-连接到Linux系统" class="headerlink" title="1.6.3 连接到Linux系统"></a>1.6.3 连接到Linux系统</h3><p>首先，先查询到Linux系统的IP地址<br><img src="/2024/07/07/Linux/Linux/image-20221208120523327.png" alt="image-20221208120523327"> </p><p>打开Finshell软件，配置到Linux系统的连接（Mac和Windows系统的操作一致，不再分开赘述）<br><img src="/2024/07/07/Linux/Linux/image-20221208120551815.png" alt="image-20221208120551815"> </p><p>按图示配置连接，并点击确定<br><img src="/2024/07/07/Linux/Linux/image-20221208120611311.png" alt="image-20221208120611311"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221208120626447.png" alt="image-20221208120626447"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221208120635094.png" alt="image-20221208120635094"> </p><p>如图，连接成功<br><img src="/2024/07/07/Linux/Linux/image-20221208120705488.png" alt="image-20221208120705488"> </p><p>注意：<br>Linux虚拟机如果重启，有可能，发生IP改变<br>如果改变IP需要在FinalShell中修改连接的IP地址</p><h2 id="1-7、扩展：WSL（Windows-Subsystem-for-Linux）"><a href="#1-7、扩展：WSL（Windows-Subsystem-for-Linux）" class="headerlink" title="1.7、扩展：WSL（Windows Subsystem for Linux）"></a>1.7、扩展：WSL（Windows Subsystem for Linux）</h2><p>WSL：Windows Subsystem for Linux，是用于Windows系统之上的Linux子系统。<br>作用很简单，可以在Windows系统中获得Linux系统环境，并完全直连计算机硬件，无需通过虚拟机虚拟硬件。</p><p>简而言之：<br>Windows10的WSL功能，可以无需单独虚拟一套硬件设备<br>就可以直接使用主机的物理硬件，构建Linux操作系统<br>并不会影响Windows系统本身的运行</p><p>安装：<a href="https://zhuanlan.zhihu.com/p/475462241">Windows 11 安装 WSL2 - 知乎 (zhihu.com)</a></p><h2 id="1-8、快照"><a href="#1-8、快照" class="headerlink" title="1.8、快照"></a>1.8、快照</h2><ol><li>快照有什么作用？<br>快照可以保存虚拟机的状态， 当虚拟机出现问题的时候， 可以通过预先制作的快照恢复到制作时候的状态， 用作备份用。</li><li>VMware Workstation 和 VMware Fusion 都支持制作快照去使用</li></ol><h1 id="二、Linux基础命令"><a href="#二、Linux基础命令" class="headerlink" title="二、Linux基础命令"></a>二、Linux基础命令</h1><h2 id="2-1、Linux的目录结构"><a href="#2-1、Linux的目录结构" class="headerlink" title="2.1、Linux的目录结构"></a>2.1、Linux的目录结构</h2><p><img src="/2024/07/07/Linux/Linux/20221027214128.png" alt="image-20221027214128453"></p><ul><li><code>/</code>，根目录是最顶级的目录了</li><li>Linux只有一个顶级目录：<code>/</code></li><li>路径描述的层次关系同样适用<code>/</code>来表示</li><li>&#x2F;home&#x2F;itheima&#x2F;a.txt，表示根目录下的home文件夹内有itheima文件夹，内有a.txt</li></ul><h2 id="2-2、Linux命令入门"><a href="#2-2、Linux命令入门" class="headerlink" title="2.2、Linux命令入门"></a>2.2、Linux命令入门</h2><h3 id="2-2-1-Linux命令基础"><a href="#2-2-1-Linux命令基础" class="headerlink" title="2.2.1 Linux命令基础"></a>2.2.1 Linux命令基础</h3><ul><li><p><strong>命令：</strong>即Linux操作指令，是系统内置的程序，可以以字符化的形式去使用</p></li><li><p><strong>命令行：</strong>即Linux终端，可以提供字符化的操作页面提供命令行</p></li></ul><p>Linux命令的通用格式</p><p><code>command [-options] [parameter]</code></p><ul><li>命令本体，即命令本身</li><li>可选选项，控制命令的行为细节</li><li>可选参数，控制命令的指向目标</li></ul><h3 id="2-2-2-ls命令入门"><a href="#2-2-2-ls命令入门" class="headerlink" title="2.2.2 ls命令入门"></a>2.2.2 ls命令入门</h3><p>功能：列出文件夹信息</p><p>语法：<code>ls [-l -h -a] [参数]</code></p><ul><li>参数：被查看的文件夹，不提供参数，表示查看当前工作目录</li><li>-l，以列表形式查看</li><li>-h，配合-l，以更加人性化的方式显示文件大小</li><li>-a，显示隐藏文件<ul><li>隐藏文件是以<code>.</code>开头的</li></ul></li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221208205542925.png" alt="image-20221208205542925"></p><p><strong>命令的选项组合使用</strong></p><ul><li>命令的选项是可以组合使用的，比如：ls -lah，等同于ls -l -a -h</li></ul><p>HOME目录</p><p>每一个用户在Linux系统中都有自己的专属工作目录，称之为HOME目录。</p><ul><li><p>普通用户的HOME目录，默认在：<code>/home/用户名</code></p></li><li><p>root用户的HOME目录，在：<code>/root</code></p></li></ul><p>FinalShell登陆终端后，默认的工作目录就是用户的HOME目录</p><h2 id="2-3、目录切换指令（cd-pwd"><a href="#2-3、目录切换指令（cd-pwd" class="headerlink" title="2.3、目录切换指令（cd&#x2F;pwd)"></a>2.3、目录切换指令（cd&#x2F;pwd)</h2><h3 id="2-3-1-cd-切换工作目录"><a href="#2-3-1-cd-切换工作目录" class="headerlink" title="2.3.1 cd 切换工作目录"></a>2.3.1 cd 切换工作目录</h3><p>功能：切换工作目录</p><p>语法：<code>cd [目标目录]</code></p><p>来自英文：Change Directory</p><p>参数：目标目录，要切换去的地方，不提供默认切换到<code>当前登录用户HOME目录</code></p><p><img src="/2024/07/07/Linux/Linux/image-20221208211409101.png" alt="image-20221208211409101"></p><h3 id="2-3-2-pwd-查看当前工作目录"><a href="#2-3-2-pwd-查看当前工作目录" class="headerlink" title="2.3.2 pwd 查看当前工作目录"></a>2.3.2 pwd 查看当前工作目录</h3><p>功能：展示当前工作目录</p><p>来自英文：Print Work Directory</p><p>语法：<code>pwd</code></p><p><img src="/2024/07/07/Linux/Linux/image-20221208211533134.png" alt="image-20221208211533134"> </p><h3 id="2-3-3-相对路径、绝对路径"><a href="#2-3-3-相对路径、绝对路径" class="headerlink" title="2.3.3 相对路径、绝对路径"></a>2.3.3 相对路径、绝对路径</h3><ul><li><p>相对路径，&#x3D;&#x3D;非&#x3D;&#x3D;<code>/</code>开头的称之为相对路径</p><p>相对路径表示以<code>当前目录</code>作为起点，去描述路径，如<code>test/a.txt</code>，表示当前工作目录内的test文件夹内的a.txt文件</p></li><li><p>绝对路径，&#x3D;&#x3D;以&#x3D;&#x3D;<code>/</code>开头的称之为绝对路径</p><p>绝对路径从<code>根</code>开始描述路径</p></li></ul><h3 id="2-3-4-特殊路径符"><a href="#2-3-4-特殊路径符" class="headerlink" title="2.3.4 特殊路径符"></a>2.3.4 特殊路径符</h3><ul><li><code>.</code>，表示当前，比如.&#x2F;a.txt，表示当前文件夹内的<code>a.txt</code>文件</li><li><code>..</code>，表示上级目录，比如<code>../</code>表示上级目录，<code>../../</code>表示上级的上级目录</li><li><code>~</code>，表示用户的HOME目录，比如<code>cd ~</code>，即可切回用户HOME目录</li></ul><h2 id="2-4、创建目录指令（mkdir）"><a href="#2-4、创建目录指令（mkdir）" class="headerlink" title="2.4、创建目录指令（mkdir）"></a>2.4、创建目录指令（mkdir）</h2><p>功能：创建文件夹</p><p>来自英文：Make Directory </p><p>语法：<code>mkdir [-p] 参数</code></p><ul><li>参数：被创建文件夹的路径</li><li>选项：-p，可选，表示创建前置路径，表示自动创建不存在的父目录，适用于创建连续多层级的目录</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221208214054343.png" alt="image-20221208214054343"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221208214113063.png" alt="image-20221208214113063"> </p><p>注意：创建文件夹需要修改权限，请确保操作均在HOME目录内，不要在HOME外操作<br>涉及到权限问题，HOME外无法成功</p><h2 id="2-5、文件操作指令"><a href="#2-5、文件操作指令" class="headerlink" title="2.5、文件操作指令"></a>2.5、文件操作指令</h2><p>（touch、cat、more、cp、mv）</p><h3 id="2-5-1-touch命令"><a href="#2-5-1-touch命令" class="headerlink" title="2.5.1 touch命令"></a>2.5.1 touch命令</h3><p>功能：创建文件</p><p>语法：<code>touch 参数</code></p><ul><li>参数：被创建的文件路径</li><li>touch命令无选项，参数必填，表示要创建的文件路径，相对、绝对、特殊路径符均可以使用</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221208214659002.png" alt="image-20221208214659002"></p><h3 id="2-5-2-cat命令"><a href="#2-5-2-cat命令" class="headerlink" title="2.5.2 cat命令"></a>2.5.2 cat命令</h3><p>功能：查看文件内容</p><p>语法：<code>cat 参数</code></p><ul><li>参数：被查看的文件路径</li><li>cat是直接将内容全部显示出来</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221208214955238.png" alt="image-20221208214955238"> </p><h3 id="2-5-3-more命令"><a href="#2-5-3-more命令" class="headerlink" title="2.5.3 more命令"></a>2.5.3 more命令</h3><p>功能：查看文件，可以支持翻页查看</p><p>语法：<code>more 参数</code></p><ul><li>参数：被查看的文件路径</li><li>在查看过程中：<ul><li><code>空格</code>键翻页</li><li><code>q</code>退出查看</li></ul></li></ul><h3 id="2-5-4-cp命令"><a href="#2-5-4-cp命令" class="headerlink" title="2.5.4 cp命令"></a>2.5.4 cp命令</h3><p>功能：复制文件、文件夹</p><p>语法：<code>cp [-r] 参数1 参数2</code></p><ul><li>参数1，被复制的</li><li>参数2，要复制去的地方</li><li>选项：-r，可选，复制文件夹使用</li></ul><p>示例：</p><ul><li>cp a.txt b.txt，复制当前目录下a.txt为b.txt</li><li>cp a.txt test&#x2F;，复制当前目录a.txt到test文件夹内</li><li>cp -r test test2，复制文件夹test到当前文件夹内为test2存在</li></ul><h3 id="2-5-5-mv命令"><a href="#2-5-5-mv命令" class="headerlink" title="2.5.5 mv命令"></a>2.5.5 mv命令</h3><p>功能：移动文件、文件夹</p><p>语法：<code>mv 参数1 参数2</code></p><ul><li>参数1：被移动的</li><li>参数2：要移动去的地方，参数2如果不存在，则会进行改名</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221208220054878.png" alt="image-20221208220054878"> </p><h3 id="2-5-6-rm命令"><a href="#2-5-6-rm命令" class="headerlink" title="2.5.6 rm命令"></a>2.5.6 rm命令</h3><p>功能：删除文件、文件夹</p><p>语法：<code>rm [-r -f] 参数...参数</code></p><ul><li>参数：支持多个，每一个表示被删除的，空格进行分隔</li><li>选项：-r，删除文件夹使用</li><li>选项：-f，强制删除，不会给出确认提示，一般root用户会用到</li></ul><blockquote><p>rm命令很危险，一定要注意，特别是切换到root用户的时候。</p></blockquote><h2 id="2-6、查找命令（which、find）"><a href="#2-6、查找命令（which、find）" class="headerlink" title="2.6、查找命令（which、find）"></a>2.6、查找命令（which、find）</h2><h3 id="2-6-1-which命令"><a href="#2-6-1-which命令" class="headerlink" title="2.6.1 which命令"></a>2.6.1 which命令</h3><p>功能：查看命令的程序本体文件路径</p><p>语法：<code>which 参数</code></p><ul><li>参数：被查看的命令</li></ul><h3 id="2-6-2-find命令"><a href="#2-6-2-find命令" class="headerlink" title="2.6.2 find命令"></a>2.6.2 find命令</h3><p>功能：搜索文件</p><p>语法1按文件名搜索：<code>find 路径 -name 参数</code></p><ul><li>路径，搜索的起始路径</li><li>参数，搜索的关键字，支持通配符*， 比如：<code>*</code>test表示搜索任意以test结尾的文件</li></ul><p>语法：<code>find 起始路径 -size +|-n[KMG]</code><br>+、- 表示大于和小于<br>n表示大小数字<br>kMG表示大小单位，k(小写字母)表示kb，M表示MB，G表示GB</p><p>示例：<br>查找小于10KB的文件： find &#x2F; -size -10k<br>查找大于100MB的文件：find &#x2F; -size +100M<br>查找大于1GB的文件：find &#x2F; -size +1G</p><h3 id="2-6-3-通配符"><a href="#2-6-3-通配符" class="headerlink" title="2.6.3 通配符"></a>2.6.3 通配符</h3><p>被查找文件名，支持使用通配符 * 来做模糊查询。<br>符号* 表示通配符，即匹配任意内容（包含空），示例：<br>test*，表示匹配任何以test开头的内容<br>*test，表示匹配任何以test结尾的内容<br><em>test</em>，表示匹配任何包含test的内容<br>基于通配符的含义，可以结合find命令做文件的模糊查询。</p><h2 id="2-7、grep、wc和管道符"><a href="#2-7、grep、wc和管道符" class="headerlink" title="2.7、grep、wc和管道符"></a>2.7、grep、wc和管道符</h2><h3 id="2-7-1-grep命令"><a href="#2-7-1-grep命令" class="headerlink" title="2.7.1 grep命令"></a>2.7.1 grep命令</h3><p>功能：过滤关键字</p><p>语法：<code>grep [-n] 关键字 文件路径</code></p><ul><li>选项-n，可选，表示在结果中显示匹配的行的行号。</li><li>参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用””将关键字包围起来</li><li>参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可以作为管道符的输入</p></blockquote><h3 id="2-7-2-wc命令"><a href="#2-7-2-wc命令" class="headerlink" title="2.7.2 wc命令"></a>2.7.2 wc命令</h3><p>功能：统计</p><p>语法：<code>wc [-c -m -l -w] 文件路径</code></p><ul><li>选项，-c，统计bytes数量</li><li>选项，-m，统计字符数量</li><li>选项，-l，统计行数</li><li>选项，-w，统计单词数量</li><li>参数，文件路径，被统计的文件，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可作为管道符的输入</p></blockquote><h3 id="2-7-3-管道符"><a href="#2-7-3-管道符" class="headerlink" title="2.7.3 管道符|"></a>2.7.3 管道符|</h3><p>写法：<code>|</code></p><p>功能：将符号左边的结果，作为符号右边的输入</p><p>示例：</p><p><code>cat a.txt | grep itheima</code>，将</p><p> a.txt的结果，作为grep命令的输入，用来过滤<code>itheima</code>关键字</p><p>可以支持嵌套：</p><p><code>cat a.txt | grep itheima | grep itcast</code></p><h2 id="2-8、echo和重定向符"><a href="#2-8、echo和重定向符" class="headerlink" title="2.8、echo和重定向符"></a>2.8、echo和重定向符</h2><h3 id="2-8-1-echo命令"><a href="#2-8-1-echo命令" class="headerlink" title="2.8.1 echo命令"></a>2.8.1 echo命令</h3><p>功能：输出内容</p><p>语法：<code>echo 参数</code></p><ul><li>参数：被输出的内容</li></ul><h3 id="2-8-2-反引号"><a href="#2-8-2-反引号" class="headerlink" title="2.8.2 &#96;反引号"></a>2.8.2 &#96;反引号</h3><p>功能：被两个反引号包围的内容，会作为命令执行</p><p>示例：</p><ul><li>echo `pwd`，会输出当前工作目录</li></ul><h3 id="2-8-3-tail命令"><a href="#2-8-3-tail命令" class="headerlink" title="2.8.3 tail命令"></a>2.8.3 tail命令</h3><p>功能：查看文件尾部内容</p><p>语法：<code>tail [-f] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-f，持续跟踪文件修改</li></ul><h3 id="2-8-4-head命令"><a href="#2-8-4-head命令" class="headerlink" title="2.8.4 head命令"></a>2.8.4 head命令</h3><p>功能：查看文件头部内容</p><p>语法：<code>head [-n] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-n，查看的行数</li></ul><h3 id="2-8-5-重定向符"><a href="#2-8-5-重定向符" class="headerlink" title="2.8.5 重定向符"></a>2.8.5 重定向符</h3><p>功能：将符号左边的结果，输出到右边指定的文件中去</p><ul><li><code>&gt;</code>，表示覆盖输出</li><li><code>&gt;&gt;</code>，表示追加输出</li></ul><h2 id="2-9、vi编辑器"><a href="#2-9、vi编辑器" class="headerlink" title="2.9、vi编辑器"></a>2.9、vi编辑器</h2><p><img src="/2024/07/07/Linux/Linux/image-20221220160623738.png" alt="image-20221220160623738"></p><h3 id="命令模式快捷键"><a href="#命令模式快捷键" class="headerlink" title="命令模式快捷键"></a>命令模式快捷键</h3><p><img src="/2024/07/07/Linux/Linux/20221027215841.png" alt="image-20221027215841573"></p><p><img src="/2024/07/07/Linux/Linux/20221027215846.png" alt="image-20221027215846581"></p><p><img src="/2024/07/07/Linux/Linux/20221027215849.png" alt="image-20221027215849668"></p><h3 id="底线命令快捷键"><a href="#底线命令快捷键" class="headerlink" title="底线命令快捷键"></a>底线命令快捷键</h3><p><img src="/2024/07/07/Linux/Linux/20221027215858.png" alt="image-20221027215858967"></p><h2 id="2-10-命令的选项"><a href="#2-10-命令的选项" class="headerlink" title="2.10 命令的选项"></a>2.10 命令的选项</h2><p>我们学习的一系列Linux命令，它们所拥有的选项都是非常多的。</p><p>比如，简单的ls命令就有：-a -A -b -c -C -d -D -f -F -g -G -h -H -i -I -k -l -L -m -n -N -o -p -q -Q -r-R -s -S -t -T -u -U -v -w -x -X -1等选项，可以发现选项是极其多的。</p><p>课程中， 并不会将全部的选项都进行讲解，否则，一个ls命令就可能讲解2小时之久。</p><p>课程中，会对常见的选项进行讲解， 足够满足绝大多数的学习、工作场景。</p><h3 id="查看命令的帮助"><a href="#查看命令的帮助" class="headerlink" title="查看命令的帮助"></a>查看命令的帮助</h3><p>可以通过：<code>命令 --help</code>查看命令的帮助手册</p><p><img src="/2024/07/07/Linux/Linux/20221027220005.png" alt="image-20221027220005610"></p><h3 id="查看命令的详细手册"><a href="#查看命令的详细手册" class="headerlink" title="查看命令的详细手册"></a>查看命令的详细手册</h3><p>可以通过：<code>man 命令</code>查看某命令的详细手册</p><p>man ls，就是查看ls命令的详细手册<br>man cd，就是查看cd命令的详细手册</p><p><img src="/2024/07/07/Linux/Linux/20221027220010.png" alt="image-20221027220009949"></p><p>大多数手册都是全英文的，如果阅读吃力，可以通过重定向符：man ls &gt; ls-man.txt，输出手册到文件<br>然后通过翻译软件翻译内容查看哦</p><h1 id="三、用户和权限"><a href="#三、用户和权限" class="headerlink" title="三、用户和权限"></a>三、用户和权限</h1><h2 id="3-1、root用户"><a href="#3-1、root用户" class="headerlink" title="3.1、root用户"></a>3.1、root用户</h2><h3 id="3-1-1-root用户（超级管理员）"><a href="#3-1-1-root用户（超级管理员）" class="headerlink" title="3.1.1 root用户（超级管理员）"></a>3.1.1 root用户（超级管理员）</h3><p>无论是Windows、MacOS、Linux均采用多用户的管理模式进行权限管理。</p><ul><li>在Linux系统中，拥有最大权限的账户名为：root（超级管理员）</li><li>而在前期，我们一直使用的账户是普通的用户：lixinqian</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221220161459179.png" alt="image-20221220161459179"> </p><h3 id="3-1-2-su和exit指令"><a href="#3-1-2-su和exit指令" class="headerlink" title="3.1.2 su和exit指令"></a>3.1.2 su和exit指令</h3><p>su指令</p><p>作用：账户切换的系统命令，</p><p>来源英文单词：Switch User<br>语法：<code>su [-] [用户名]</code></p><ul><li>符号是可选的，表示是否在切换用户后加载环境变量（后续讲解），建议带上<br>参数：用户名，表示要切换的用户，用户名也可以省略，省略表示切换到root<br>切换用户后，可以通过exit命令退回上一个用户，也可以使用快捷键：ctrl + d</li></ul><p>使用普通用户，切换到其它用户需要输入密码，如切换到root用户<br>使用root用户切换到其它用户，无需密码，可以直接切换</p><h3 id="3-1-3-sudo命令"><a href="#3-1-3-sudo命令" class="headerlink" title="3.1.3 sudo命令"></a>3.1.3 sudo命令</h3><p>在我们得知root密码的时候，可以通过su命令切换到root得到最大权限。<br>但是我们不建议长期使用root用户，避免带来系统损坏。</p><p>我们可以使用sudo命令，为普通的命令授权，临时以root身份执行。</p><p>语法：<code>sudo 其他命令</code><br>在其它命令之前，带上sudo，即可为这一条命令临时赋予root授权</p><p>但是并不是所有的用户，都有权利使用sudo，我们需要为普通用户配置sudo认证</p><p><img src="/2024/07/07/Linux/Linux/image-20221220161727878.png" alt="image-20221220161727878"> </p><h2 id="3-2、用户、用户组管理"><a href="#3-2、用户、用户组管理" class="headerlink" title="3.2、用户、用户组管理"></a>3.2、用户、用户组管理</h2><h3 id="3-2-1-Linux用户管理模式"><a href="#3-2-1-Linux用户管理模式" class="headerlink" title="3.2.1 Linux用户管理模式"></a>3.2.1 Linux用户管理模式</h3><ul><li>Linux可以支持多用户、多用户组、用户加入多个组</li><li>Linux权限管控的单元是用户级别和用户组级别</li></ul><h3 id="3-2-2-用户组管理"><a href="#3-2-2-用户组管理" class="headerlink" title="3.2.2 用户组管理"></a>3.2.2 用户组管理</h3><p>以下命令需root用户执行</p><ul><li>创建用户组<ul><li><code>groupadd 用户组名</code></li></ul></li><li>删除用户组<ul><li><code>groupdel 用户组名</code></li></ul></li></ul><h3 id="3-2-3-用户管理"><a href="#3-2-3-用户管理" class="headerlink" title="3.2.3 用户管理"></a>3.2.3 用户管理</h3><p>以下命令需root用户执行</p><ul><li>创建用户<ul><li><code>useradd [-g -d] 用户名</code></li><li>选项：-g指定用户的组，不指定-g，会创建同名组并自动加入，指定-g需要组已经存在，如已存在同名组，必须使用-g</li><li>选项：-d指定用户HOME路径，不指定，HOME目录默认在：&#x2F;home&#x2F;用户名</li></ul></li><li>删除用户<ul><li><code>userdel [-r] 用户名</code></li><li>选项：-r，删除用户的HOME目录，不使用-r，删除用户时，HOME目录保留</li></ul></li><li>产看用户所属组<ul><li><code>id [用户名]</code></li><li>参数：用户名，被查看的用户，如果不提供则查看自身</li></ul></li><li>修改用户所属组<ul><li><code>usermod -aG 用户组 用户名</code></li><li>将指定用户加入指定用户组</li></ul></li></ul><h3 id="3-2-4-getent"><a href="#3-2-4-getent" class="headerlink" title="3.2.4 getent"></a>3.2.4 getent</h3><p><img src="/2024/07/07/Linux/Linux/image-20221220163811465.png" alt="image-20221220163811465"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221220163820246.png" alt="image-20221220163820246"> </p><h2 id="3-3、查看权限控制"><a href="#3-3、查看权限控制" class="headerlink" title="3.3、查看权限控制"></a>3.3、查看权限控制</h2><h3 id="3-3-1-认知权限信息"><a href="#3-3-1-认知权限信息" class="headerlink" title="3.3.1 认知权限信息"></a>3.3.1 认知权限信息</h3><p>通过ls -l 可以以列表形式查看内容，并显示权限细节<br><img src="/2024/07/07/Linux/Linux/image-20221220165137119.png" alt="image-20221220165137119"></p><p>序号1，表示文件、文件夹的权限控制信息<br>序号2，表示文件、文件夹所属用户<br>序号3，表示文件、文件夹所属用户组</p><p><img src="/2024/07/07/Linux/Linux/image-20221220165215384.png" alt="image-20221220165215384"> </p><h3 id="3-3-2-rwx"><a href="#3-3-2-rwx" class="headerlink" title="3.3.2 rwx"></a>3.3.2 rwx</h3><p>那么，rwx到底代表什么呢？</p><ul><li>r表示读权限</li><li>w表示写权限</li><li>x表示执行权限</li></ul><p>针对文件、文件夹的不同，rwx的含义有细微差别</p><ul><li>r，针对文件可以查看文件内容<ul><li>针对文件夹，可以查看文件夹内容，如ls命令</li></ul></li><li>w，针对文件表示可以修改此文件<ul><li>针对文件夹，可以在文件夹内：创建、删除、改名等操作</li></ul></li><li>x，针对文件表示可以将文件作为程序执行<ul><li>针对文件夹，表示可以更改工作目录到此文件夹，即cd进入</li></ul></li></ul><h2 id="3-4、修改权限控制"><a href="#3-4、修改权限控制" class="headerlink" title="3.4、修改权限控制"></a>3.4、修改权限控制</h2><h3 id="3-4-1-chmod"><a href="#3-4-1-chmod" class="headerlink" title="3.4.1 chmod"></a>3.4.1 chmod</h3><p>功能：修改文件、文件夹的权限细节</p><p>限制：只能是文件、文件夹的所属用户或root有权修改</p><p>语法：<code>chmod [-R] 权限 文件或文件夹</code></p><p>选项：-R，对文件夹内的全部内容应用同样规则</p><p>示例：</p><ul><li><code>chmod u=rwx,g=rx,o=x hello.txt</code> ，将文件权限修改为：<code>rwxr-x--x</code><ul><li>其中：u表示user所属用户权限，g表示group组权限，o表示other其它用户权限</li></ul></li><li><code>chmod -R u=rwx,g=rx,o=x test</code>，将文件夹test以及文件夹内全部内容权限设置为：<code>rwxr-x--x</code></li><li>除此之外，还有快捷写法：<code>chmod 751 hello.txt</code></li><li>快捷写法：就是将用户、用户组、其他用户的权限都按照二进制的形式表示</li></ul><h3 id="3-4-2-chown"><a href="#3-4-2-chown" class="headerlink" title="3.4.2 chown"></a>3.4.2 chown</h3><p>功能：修改文件、文件夹的所属用户、组<br>限制，只可root执行<br>语法：<code>chown [-R] [用户][:][用户组] 文件或文件夹</code><br>选项，-R，同chmod，对文件夹内全部内容应用相同规则<br>选项，用户，修改所属用户<br>选项，用户组，修改所属用户组<br>:用于分隔用户和用户组</p><p>示例：<br>chown root hello.txt，将hello.txt所属用户修改为root<br>chown :root hello.txt，将hello.txt所属用户组修改为root<br>chown root:itheima hello.txt，将hello.txt所属用户修改为root，用户组修改为itheima<br>chown -R root test，将文件夹test的所属用户修改为root并对文件夹内全部内容应用同样规则</p><h1 id="四、Linux使用操作"><a href="#四、Linux使用操作" class="headerlink" title="四、Linux使用操作"></a>四、Linux使用操作</h1><h2 id="4-1、快捷键"><a href="#4-1、快捷键" class="headerlink" title="4.1、快捷键"></a>4.1、快捷键</h2><ol><li>ctrl + c 强制停止<ol><li>停止程序</li><li>停止输入错误的命令</li></ol></li><li>ctrl + d 退出登出<ol><li>退出账户登录</li><li>退出某些特定程序的专属页面</li><li>不能退出vi&#x2F;vim</li></ol></li><li>history 查看历史命令</li><li>!命令前缀，自动匹配上一个命令<ol><li><code>!py 自动搜索上面相同前缀的命令</code></li><li><img src="/2024/07/07/Linux/Linux/image-20221222150710168.png" alt="image-20221222150710168"></li></ol></li><li>ctrl + r，搜索历史命令<ol><li><img src="/2024/07/07/Linux/Linux/image-20221222150745830.png" alt="image-20221222150745830"></li><li>如果搜索到的内容是你需要的，那么：<br>回车键可以直接执行<br>键盘左右键，可以得到此命令（不执行）</li></ol></li><li>ctrl + a | e，光标移动到命令开始或结束</li><li>ctrl + ← | →，左右跳单词</li><li>ctrl + l 或 clear命令 清屏</li></ol><h2 id="4-2、软件安装"><a href="#4-2、软件安装" class="headerlink" title="4.2、软件安装"></a>4.2、软件安装</h2><ul><li><p>CentOS系统使用：</p><ul><li>yum：RPM包软件管理器，用于自动化安装配置Linux软件，并可以自动解决依赖问题。</li><li>yum [-y] [install | remove | search] 软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li><li><p>Ubuntu系统使用</p><ul><li>apt  [-y] [install | remove | search]软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li></ul><blockquote><p>yum 和 apt 均需要root权限</p></blockquote><h2 id="4-3、systemctl"><a href="#4-3、systemctl" class="headerlink" title="4.3、systemctl"></a>4.3、systemctl</h2><p>功能：控制系统服务的启动关闭等</p><p>系统内置服务均可被systemctl控制<br>第三方软件，如果自动注册了可以被systemctl控制<br>第三方软件，如果没有自动注册，可以手动注册（后续学习</p><p>语法：<code>systemctl start | stop | restart | disable | enable | status 服务名</code></p><ul><li>start，启动</li><li>stop，停止</li><li>status，查看状态</li><li>disable，关闭开机自启</li><li>enable，开启开机自启</li><li>restart，重启</li></ul><h2 id="4-4、软链接"><a href="#4-4、软链接" class="headerlink" title="4.4、软链接"></a>4.4、软链接</h2><p>功能：创建文件、文件夹软链接（快捷方式）</p><p>语法：<code>ln -s 参数1 参数2</code></p><ul><li>参数1：被链接的</li><li>参数2：要链接去的地方（快捷方式的名称和存放位置）</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221222162246791.png" alt="image-20221222162246791"> </p><h2 id="4-5、日期和时区"><a href="#4-5、日期和时区" class="headerlink" title="4.5、日期和时区"></a>4.5、日期和时区</h2><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><p>语法：<code>date [-d] [+格式化字符串]</code></p><ul><li><p>-d 按照给定的字符串显示日期，一般用于日期计算</p></li><li><p>格式化字符串：通过特定的字符串标记，来控制显示的日期格式</p><ul><li>%Y   年%y   年份后两位数字 (00..99)</li><li>%m   月份 (01..12)</li><li>%d   日 (01..31)</li><li>%H   小时 (00..23)</li><li>%M   分钟 (00..59)</li><li>%S   秒 (00..60)</li><li>%s   自 1970-01-01 00:00:00 UTC 到现在的秒数</li></ul></li></ul><p>示例：</p><ul><li><p>按照2022-01-01的格式显示日期</p><p><img src="/2024/07/07/Linux/Linux/20221027220514.png" alt="image-20221027220514640"></p></li><li><p>按照2022-01-01 10:00:00的格式显示日期</p><p><img src="/2024/07/07/Linux/Linux/20221027220525.png" alt="image-20221027220525625"></p></li><li><p>-d选项日期计算</p><p><img src="/2024/07/07/Linux/Linux/20221027220429.png" alt="image-20221027220429831"></p><ul><li><p>支持的时间标记为：</p><p><img src="/2024/07/07/Linux/Linux/20221027220449.png" alt="image-20221027220449312"></p></li></ul></li></ul><h3 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h3><p>修改时区为中国时区</p><p><img src="/2024/07/07/Linux/Linux/20221027220554.png" alt="image-20221027220554654"></p><h3 id="ntp"><a href="#ntp" class="headerlink" title="ntp"></a>ntp</h3><p>功能：同步时间</p><p>安装：<code>yum install -y ntp</code></p><p>启动管理：<code>systemctl start | stop | restart | status | disable | enable ntpd</code></p><p>手动校准时间：<code>ntpdate -u ntp.aliyun.com</code></p><h2 id="4-6、IP地址和主机名"><a href="#4-6、IP地址和主机名" class="headerlink" title="4.6、IP地址和主机名"></a>4.6、IP地址和主机名</h2><h3 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h3><p>格式：a.b.c.d</p><ul><li>abcd为0~255的数字</li></ul><p>特殊IP：</p><ul><li>127.0.0.1，表示本机</li><li>0.0.0.0<ul><li>可以表示本机</li><li>也可以表示任意IP（看使用场景）</li></ul></li></ul><p>查看ip：<code>ifconfig</code></p><h3 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h3><p>功能：Linux系统的名称</p><p>查看：<code>hostname</code></p><p>设置：<code>hostnamectl set-hostname 主机名</code></p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>可以通过主机名找到对应计算机的IP地址，这就是主机名映射（域名解析）<br>先通过系统本地的记录去查找，如果找不到就联网去公开DNS服务器去查找<br>比如，我们在浏览器内打开：<a href="http://www.baidu.com,会打开百度的网址/">www.baidu.com，会打开百度的网址</a><br>其中，<a href="http://www.baidu.com，是百度的网址，我们称之为：域名">www.baidu.com，是百度的网址，我们称之为：域名</a></p><p><img src="/2024/07/07/Linux/Linux/image-20221222173301043.png" alt="image-20221222173301043"> </p><ul><li>先查看本机的记录（私人地址本）<ul><li>Windows看：C:\Windows\System32\drivers\etc\hosts</li><li>Linux看：&#x2F;etc&#x2F;hosts</li></ul></li><li>再联网去DNS服务器（如114.114.114.114，8.8.8.8等）询问</li></ul><h3 id="配置VMware固定IP"><a href="#配置VMware固定IP" class="headerlink" title="配置VMware固定IP"></a>配置VMware固定IP</h3><p>当前我们虚拟机的Linux操作系统，其IP地址是通过DHCP服务获取的。<br>DHCP：动态获取IP地址，即每次重启设备后都会获取一次，可能导致IP地址频繁变更</p><p>原因1：办公电脑IP地址变化无所谓，但是我们要远程连接到Linux系统，如果IP地址经常变化我们就要频繁修改适配很麻烦</p><p>原因2：在刚刚我们配置了虚拟机IP地址和主机名的映射，如果IP频繁更改，我们也需要频繁更新映射关系</p><p>综上所述，我们需要IP地址固定下来，不要变化了。</p><p><img src="/2024/07/07/Linux/Linux/image-20221223103330084.png" alt="image-20221223103330084"></p><ol><li><p>修改VMware网络，参阅PPT，图太多</p></li><li><p>设置Linux内部固定IP</p><p>修改文件：<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>示例文件内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;# 改为static，固定IP</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;1b0011cb-0d2e-4eaa-8a11-af7d50ebc876&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=&quot;192.168.152.128&quot;# IP地址，自己设置，要匹配网络范围</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;# 子网掩码，固定写法255.255.255.0</span><br><span class="line">GATEWAY=&quot;192.168.152.2&quot;# 网关，要和VMware中配置的一致</span><br><span class="line">DNS1=&quot;192.168.152.2&quot;# DNS1服务器，和网关一致即可</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-7、网络传输"><a href="#4-7、网络传输" class="headerlink" title="4.7、网络传输"></a>4.7、网络传输</h2><h3 id="4-7-1、下载和网络请求"><a href="#4-7-1、下载和网络请求" class="headerlink" title="4.7.1、下载和网络请求"></a>4.7.1、下载和网络请求</h3><h3 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h3><p>测试网络是否联通</p><p>语法：<code>ping [-c num] 参数</code></p><p><img src="/2024/07/07/Linux/Linux/20221027221129.png" alt="image-20221027221129782"></p><h3 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h3><p><img src="/2024/07/07/Linux/Linux/20221027221149.png" alt="image-20221027221148964"></p><h3 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h3><p><img src="/2024/07/07/Linux/Linux/20221027221201.png" alt="image-20221027221201079"></p><p><img src="/2024/07/07/Linux/Linux/20221027221210.png" alt="image-20221027221210518"></p><h3 id="4-7-2、端口"><a href="#4-7-2、端口" class="headerlink" title="4.7.2、端口"></a>4.7.2、端口</h3><p>什么是端口？</p><ul><li><p>端口是指计算机和外部交互的出入口，可以分为物理端口和虚拟端口</p></li><li><p>物理端口：USB、HDMI、DP、VGA、RJ45等</p></li><li><p>虚拟端口：操作系统和外部交互的出入口</p></li></ul><p>IP只能确定计算机，通过端口才能锁定要交互的程序</p><p>端口的划分</p><ul><li><p>公认端口：1~1023，用于系统内置或常用知名软件绑定使用</p></li><li><p>注册端口：1024~49151，用于松散绑定使用（用户自定义）</p></li><li><p>动态端口：49152~65535，用于临时使用（多用于出口）</p></li></ul><p>查看端口占用</p><p>nmap IP地址，查看指定IP的对外暴露端口<br><img src="/2024/07/07/Linux/Linux/20221027221241.png" alt="image-20221027221241123"></p><p>netstat -anp | grep 端口号，查看本机指定端口号的占用情况</p><p>功能：查看端口占用</p><p>用法：<code>netstat -anp | grep xxx</code></p><p><img src="/2024/07/07/Linux/Linux/image-20221223110120135.png" alt="image-20221223110120135"></p><h2 id="4-8、进程管理"><a href="#4-8、进程管理" class="headerlink" title="4.8、进程管理"></a>4.8、进程管理</h2><ol><li>什么是进程？</li></ol><p>进程是指程序在操作系统内运行后被注册为系统内的一个进程，并拥有独立的进程ID（进程号）</p><ol start="2"><li>管理进程的命令</li></ol><p>ps -ef 查看进程信息<br><img src="/2024/07/07/Linux/Linux/image-20221223111253580.png" alt="image-20221223111253580"></p><p>ps -ef | grep 关键字 过滤指定关键字进程信息<br><img src="/2024/07/07/Linux/Linux/image-20221223111320996.png" alt="image-20221223111320996"></p><p>kill [-9] 进程号 关闭指定进程号的进程<br><img src="/2024/07/07/Linux/Linux/image-20221223111332360.png" alt="image-20221223111332360"></p><h2 id="4-9、主机状态监控"><a href="#4-9、主机状态监控" class="headerlink" title="4.9、主机状态监控"></a>4.9、主机状态监控</h2><h3 id="4-9-1、系统资源监控top命令"><a href="#4-9-1、系统资源监控top命令" class="headerlink" title="4.9.1、系统资源监控top命令"></a>4.9.1、系统资源监控top命令</h3><p>功能：查看主机运行状态</p><p>语法：<code>top</code>，查看基础信息</p><p><img src="/2024/07/07/Linux/Linux/image-20221223145308409.png" alt="image-20221223145308409"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221223145320545.png" alt="image-20221223145320545"> </p><p><img src="/2024/07/07/Linux/Linux/image-20221223145329645.png" alt="image-20221223145329645"> </p><p>可用选项：</p><p><img src="/2024/07/07/Linux/Linux/20221027221340.png" alt="image-20221027221340729"></p><p>交互式模式中，可用快捷键：</p><p><img src="/2024/07/07/Linux/Linux/20221027221354.png" alt="image-20221027221354137"></p><h3 id="4-9-2、磁盘监控"><a href="#4-9-2、磁盘监控" class="headerlink" title="4.9.2、磁盘监控"></a>4.9.2、磁盘监控</h3><p>查看磁盘占用</p><p><img src="/2024/07/07/Linux/Linux/20221027221413.png" alt="image-20221027221413787"></p><h3 id="4-9-3、网络监控"><a href="#4-9-3、网络监控" class="headerlink" title="4.9.3、网络监控"></a>4.9.3、网络监控</h3><p>iostat命令</p><p>查看CPU、磁盘的相关信息</p><p><img src="/2024/07/07/Linux/Linux/20221027221440.png" alt="image-20221027221439990"></p><p><img src="/2024/07/07/Linux/Linux/20221027221514.png" alt="image-20221027221514237"></p><p>sar命令</p><p>查看网络统计</p><p><img src="/2024/07/07/Linux/Linux/20221027221545.png" alt="image-20221027221545822"></p><h2 id="4-10、环境变量"><a href="#4-10、环境变量" class="headerlink" title="4.10、环境变量"></a>4.10、环境变量</h2><h3 id="env命令"><a href="#env命令" class="headerlink" title="env命令"></a>env命令</h3><p>查看系统全部的环境变量</p><p>语法：<code>env</code></p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>环境变量是操作系统（Windows、Linux、Mac）在运行的时候，记录的一些关键性信息，用以辅助系统运行。<br>在Linux系统中执行：env命令即可查看当前系统中记录的环境变量</p><p><img src="/2024/07/07/Linux/Linux/image-20221223145453912.png" alt="image-20221223145453912"> </p><ul><li>临时设置：export 变量名&#x3D;变量值</li><li>永久设置：<ul><li>针对用户，设置用户HOME目录内：<code>.bashrc</code>文件</li><li>针对全局，设置<code>/etc/profile</code></li></ul></li><li><img src="/2024/07/07/Linux/Linux/image-20221223145535989.png" alt="image-20221223145535989"></li></ul><h3 id="PATH变量"><a href="#PATH变量" class="headerlink" title="PATH变量"></a>PATH变量</h3><p>记录了执行程序的搜索路径</p><p>可以将自定义路径加入PATH内，实现自定义命令在任意地方均可执行的效果</p><h3 id="符号"><a href="#符号" class="headerlink" title="$符号"></a>$符号</h3><p>可以取出指定的环境变量的值</p><p>语法：<code>$变量名</code></p><p>示例：</p><p><code>echo $PATH</code>，输出PATH环境变量的值</p><p><code>echo $&#123;PATH&#125;ABC</code>，输出PATH环境变量的值以及ABC</p><p>如果变量名和其它内容混淆在一起，可以使用${}</p><p><img src="/2024/07/07/Linux/Linux/image-20221223145559821.png" alt="image-20221223145559821"></p><h2 id="4-11、上传、下载"><a href="#4-11、上传、下载" class="headerlink" title="4.11、上传、下载"></a>4.11、上传、下载</h2><p>我们可以通过FinalShell工具，方便的和虚拟机进行数据交换。</p><p>在FinalShell软件的下方窗体中，提供了Linux的文件系统视图，可以方便的：</p><ul><li>浏览文件系统，找到合适的文件，右键点击下载，即可传输到本地电脑</li><li>浏览文件系统，找到合适的目录，将本地电脑的文件拓展进入，即可方便的上传数据到Linux中</li></ul><p><img src="/2024/07/07/Linux/Linux/image-20221223150445424.png" alt="image-20221223150445424"></p><p>rz、sz命令</p><p>当然，除了通过FinalShell的下方窗体进行文件的传输以外，也可以通过rz、sz命令进行文件传输。</p><p>rz、sz命令需要安装，可以通过：yum -y install lrzsz，即可安装。</p><ul><li>rz命令，进行上传，语法：直接输入rz即可</li><li><img src="/2024/07/07/Linux/Linux/image-20221223150554747.png" alt="image-20221223150554747"></li><li>sz命令进行下载，语法：sz 要下载的文件</li><li><img src="/2024/07/07/Linux/Linux/image-20221223150610423.png" alt="image-20221223150610423"></li></ul><p>文件会自动下载到桌面的：fsdownload文件夹中。<br>注意，rz、sz命令需要终端软件支持才可正常运行<br>FinalShell、SecureCRT、XShell等常用终端软件均支持此操作</p><h2 id="4-12、压缩解压"><a href="#4-12、压缩解压" class="headerlink" title="4.12、压缩解压"></a>4.12、压缩解压</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p><code>tar -zcvf 压缩包 被压缩1...被压缩2...被压缩N</code></p><ul><li>-z表示使用gzip，可以不写</li></ul><p><code>zip [-r] 参数1 参数2 参数N</code></p><p><img src="/2024/07/07/Linux/Linux/20221027221906-167178047054416.png" alt="image-20221027221906247"></p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p><code>tar -zxvf 被解压的文件 -C 要解压去的地方</code></p><ul><li>-z表示使用gzip，可以省略</li><li>-C，可以省略，指定要解压去的地方，不写解压到当前目录</li></ul><p><code>unzip [-d] 参数</code></p><p><img src="/2024/07/07/Linux/Linux/20221027221939.png" alt="image-20221027221939899"></p><h2 id="genenv命令"><a href="#genenv命令" class="headerlink" title="genenv命令"></a>genenv命令</h2><ul><li><p><code>getenv group</code>，查看系统全部的用户组</p></li><li><p><code>getenv passwd</code>，查看系统全部的用户</p><p><img src="/2024/07/07/Linux/Linux/20221027222512-167178047054822.png" alt="image-20221027222512274"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux_基础(二)-系统软件安装</title>
      <link href="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="实战章节：在Linux上部署各类软件"><a href="#实战章节：在Linux上部署各类软件" class="headerlink" title="实战章节：在Linux上部署各类软件"></a>实战章节：在Linux上部署各类软件</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="为什么学习各类软件在Linux上的部署"><a href="#为什么学习各类软件在Linux上的部署" class="headerlink" title="为什么学习各类软件在Linux上的部署"></a>为什么学习各类软件在Linux上的部署</h2><p>在前面，我们学习了许多的Linux命令和高级技巧，这些知识点比较零散，同学们跟随着课程的内容进行练习虽然可以基础掌握这些命令和技巧的使用，但是并没有一些具体的实操能够串联起来这些知识点。</p><p>所以，现在我们设计了各类软件在Linux上部署安装的实战章节，可以让同学们：</p><ul><li>对前面学习的各类操作命令进行复习和练习，从而深度掌握它们</li><li>本章节中演示部署的软件，包含了IT行业各类岗位中所必须使用的，如：Java后台、大数据开发、运维开发、测试、AI等。无论学习Linux后从事什么岗位，这些内容都会给你带来帮助</li></ul><blockquote><p>对于零基础学员，实战课程中所讲解的软件大概率多数大家并不了解。</p><p>所以，课程仅涉及到安装部署，不对软件的使用做详细说明。</p><p>同学们在这个过程中，可能会遇到各种各样的错误，<code>不要怕</code>，解决它，将会给你带来极大的提升。</p></blockquote><h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h3><p>对于本部分的内容学习，我们设计两个目标：</p><ul><li><p>对于零基础或未从业的学员，不要求深入理解所安装部署的软件是什么，仅仅能够跟随课程成功的将其部署安装并运行成功即可</p><p>在这个过程中，主要锻炼大家对Linux操作系统的熟练度，此乃零基础未从业学员的第一学习目标</p></li><li><p>对于有基础或已从业的学员，本章节讲解的软件涵盖了大多数IT从业者所能接触到的，特别是大数据开发、后端开发两个主流方向，可以作为参考资料，以便在工作中有所帮助。</p></li></ul><p>本章节内的各类软件安装，&#x3D;&#x3D;不强制要求全部学习&#x3D;&#x3D;</p><ol><li>零基础学员，建议全部学习，作为前面学习内容的总结和实战</li><li>IT从业者、有经验学员，可以按需选择，选择工作中需要用到的进行学习</li></ol><blockquote><p>章节内包含的软件并非100%涵盖了IT开发领域中所需要的内容。</p><p>如果您对某些软件的安装有强烈需求，且课程中没有提供教程，可以私信B站：”黑马大数据曹老师”，老师会酌情根据时间安排补充上去哦。</p></blockquote><h2 id="为什么不使用PPT而是使用文档进行授课"><a href="#为什么不使用PPT而是使用文档进行授课" class="headerlink" title="为什么不使用PPT而是使用文档进行授课"></a>为什么不使用PPT而是使用文档进行授课</h2><p>从现在开始，将要进入到Linux的实操阶段，在这个阶段我们将会涉及到非常多的软件部署等操作，涉及到：</p><ul><li>各类命令的使用</li><li>各种过程的结果</li><li>复杂的流程步骤</li><li>等</li></ul><p>这些信息的展示，并不适合于使用PPT作为载体进行授课，所以从现在开始我们将使用操作文档的模式为大家进行讲解。</p><blockquote><p>使用文档模式还有一个好处，除了学习视频以外，拿到课程中使用的操作文档，同样可以作为重要的参考手册进行使用。</p><p>一举两得</p></blockquote><h2 id="前置要求"><a href="#前置要求" class="headerlink" title="前置要求"></a>前置要求</h2><ol><li>实战章节要求同学们&#x3D;&#x3D;务必全部学习前面的知识点&#x3D;&#x3D;，即：初识Linux、Linux基础命令、Linux权限管理、Linux高阶技巧这4个章节，请勿跳过前面的章节学习实战章节。</li><li>实战章节中会开启多台虚拟机，请尽量确保电脑的内存在：8GB（包含8GB）以上。如内存不足可以扩充内存条或购买阿里云、UCloud等云服务器临时使用（1个月多台低配服务器几十块左右）</li></ol><blockquote><p>对于云平台上购买服务器，可以参阅最后的章节（云服务）</p></blockquote><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>下面全部的软件安装的相关流程，90%都是取自软件自身的官方网站。</p><p>一个合格的程序员要有良好的信息收集能力哦</p><h1 id="MySQL数据库管理系统安装部署【简单】"><a href="#MySQL数据库管理系统安装部署【简单】" class="headerlink" title="MySQL数据库管理系统安装部署【简单】"></a>MySQL数据库管理系统安装部署【简单】</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MySQL数据库管理系统（后续简称MySQL），是一款知名的数据库系统，其特点是：轻量、简单、功能丰富。</p><p>MySQL数据库可谓是软件行业的明星产品，无论是后端开发、大数据、AI、运维、测试等各类岗位，基本上都会和MySQL打交道。</p><p>让我们从MySQL开始，进行实战的Linux软件安装部署。</p><p>本次课程分为2个版本进行安装：</p><ul><li>MySQL 5.7版本安装</li><li>MySQL 8.x版本安装</li></ul><blockquote><p>由于MySQL5.x和8.x各自有许多使用者，所以这两个版本我们都演示安装一遍</p></blockquote><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>MySQL的安装过程中，除了会使用Linux命令外，还会使用到少量的数据库专用的：SQL语句</p><p>对于SQL语句我们并未涉及，所以可以跟随教程的内容，复制粘贴即可</p><p>如对MySQL感兴趣，可以学习BiliBili黑马程序员视频：<a href="https://www.bilibili.com/video/BV1iF411z7Pu">2022新版黑马程序员MySQL知识精讲+mysql实战案例_零基础mysql数据库入门到高级全套教程</a></p><blockquote><p>如有时间，建议可以在学习完Linux系统之后，学习一下MySQL数据库</p><p>无论从事什么方面的开发，Java后端、大数据、AI、前端、Linux运维等，都会要求掌握MySQL数据库的</p><p>可以说，MySQL是IT开发从业者必备的技能了。</p></blockquote><h2 id="MySQL5-7版本在CentOS系统安装"><a href="#MySQL5-7版本在CentOS系统安装" class="headerlink" title="MySQL5.7版本在CentOS系统安装"></a>MySQL5.7版本在CentOS系统安装</h2><blockquote><p>注意：安装操作需要root权限</p></blockquote><p>MySQL的安装我们可以通过前面学习的yum命令进行。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>配置yum仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新密钥</span></span><br><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Mysql yum库</span></span><br><span class="line">rpm -Uvh http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012182514.png" alt="image-20221012182514865"></p><blockquote><p>由于MySQL并不在CentOS的官方仓库中，所以我们通过上述rpm命令：</p><ul><li>导入MySQL仓库的密钥</li><li>配置MySQLQ的yum仓库</li></ul></blockquote></li><li><p>使用yum安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum安装Mysql</span></span><br><span class="line">yum module disable mysql</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012182556.png" alt="image-20221012182555420"></p></li><li><p>安装完成后，启动MySQL并配置开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld# 启动</span><br><span class="line">systemctl enable mysqld# 开机自启</span><br></pre></td></tr></table></figure><blockquote><p>MySQL安装完成后，会自动配置为名称叫做：<code>mysqld</code>的服务，可以被systemctl所管理</p></blockquote></li><li><p>检查MySQL的运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012182716.png" alt="image-20221012182716598"></p></li></ol><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>主要配置管理员用户root的密码以及配置允许远程登录的权限。</p><ol><li><p>获取MySQL的初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span></span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012182744.png" alt="image-20221012182744115"></p></li><li><p>登陆MySQL数据库系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解释</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-u，登陆的用户，MySQL数据库的管理员用户同Linux一样，是root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p，表示使用密码登陆</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行完毕后输入刚刚得到的初始密码，即可进入MySQL数据库</span></span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012182806.png" alt="image-20221012182805966"></p></li><li><p>修改root用户密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在MySQL控制台内执行</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;<span class="comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span></span><br></pre></td></tr></table></figure></li><li><p>[扩展]，配置root的简单密码</p><blockquote><p>我们可以给root设置简单密码，如123456.</p><p>请注意，此配置仅仅是用于测试环境或学习环境的MySQL，如果是正式使用，请勿设置简单密码</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 如果你想设置简单密码，需要降低Mysql的密码安全级别</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_policy<span class="operator">=</span>LOW; # 密码安全级别低</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_length<span class="operator">=</span><span class="number">4</span>; # 密码长度最低<span class="number">4</span>位即可</span><br><span class="line"></span><br><span class="line"># 然后就可以用简单密码了（课程中使用简单密码，为了方便，生产中不要这样）</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;简单密码&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>[扩展]，配置root运行远程登录</p><blockquote><p>默认情况下，root用户是不运行远程登录的，只允许在MySQL所在的Linux服务器登陆MySQL系统</p><p>请注意，允许root远程登录会带来安全风险</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 授权root远程登录</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> root@&quot;IP地址&quot; identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;  </span><br><span class="line"># IP地址即允许登陆的IP地址，也可以填写<span class="operator">%</span>，表示允许任何地址</span><br><span class="line"># 密码表示给远程登录独立设置密码，和本地登陆的密码可以不同</span><br><span class="line"></span><br><span class="line"># 刷新权限，生效</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>退出MySQL控制台页面</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 退出命令</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># 或者通过快捷键退出：ctrl <span class="operator">+</span> d</span><br></pre></td></tr></table></figure></li><li><p>检查端口</p><p>MySQL默认绑定了3306端口，可以通过端口占用检查MySQL的网络状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep 3306</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012183746.png" alt="image-20221012183746802"></p></li></ol><p>至此，MySQL就安装完成并可用了，请妥善保存好MySQL的root密码。</p><h2 id="MySQL8-0版本在CentOS系统安装"><a href="#MySQL8-0版本在CentOS系统安装" class="headerlink" title="MySQL8.0版本在CentOS系统安装"></a>MySQL8.0版本在CentOS系统安装</h2><blockquote><p>注意：安装操作需要root权限</p></blockquote><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><ol><li><p>配置yum仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新密钥</span></span><br><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Mysql8.x版本 yum库</span></span><br><span class="line">rpm -Uvh https://dev.mysql.com/get/mysql80-community-release-el7-2.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>使用yum安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum安装Mysql</span></span><br><span class="line">yum module disable mysql</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，启动MySQL并配置开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld# 启动</span><br><span class="line">systemctl enable mysqld# 开机自启</span><br></pre></td></tr></table></figure><blockquote><p>MySQL安装完成后，会自动配置为名称叫做：<code>mysqld</code>的服务，可以被systemctl所管理</p></blockquote></li><li><p>检查MySQL的运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>主要修改root密码和允许root远程登录</p><ol><li><p>获取MySQL的初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span></span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure></li><li><p>登录MySQL数据库系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解释</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-u，登陆的用户，MySQL数据库的管理员用户同Linux一样，是root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p，表示使用密码登陆</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行完毕后输入刚刚得到的初始密码，即可进入MySQL数据库</span></span><br></pre></td></tr></table></figure></li><li><p>修改root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;<span class="comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span></span><br></pre></td></tr></table></figure></li><li><p>[扩展]，配置root的简单密码</p><blockquote><p>我们可以给root设置简单密码，如123456.</p><p>请注意，此配置仅仅是用于测试环境或学习环境的MySQL，如果是正式使用，请勿设置简单密码</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password.policy<span class="operator">=</span><span class="number">0</span>;# 密码安全级别低</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password.length<span class="operator">=</span><span class="number">4</span>;# 密码长度最低<span class="number">4</span>位即可</span><br></pre></td></tr></table></figure></li><li><p>允许root远程登录，并设置远程登录密码</p><blockquote><p>默认情况下，root用户是不运行远程登录的，只允许在MySQL所在的Linux服务器登陆MySQL系统</p><p>请注意，允许root远程登录会带来安全风险</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 第一次设置root远程登录，并配置远程密码使用如下<span class="keyword">SQL</span>命令</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;密码!&#x27;</span>;<span class="comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span></span><br><span class="line"></span><br><span class="line"># 后续修改密码使用如下<span class="keyword">SQL</span>命令</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>退出MySQL控制台页面</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 退出命令</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># 或者通过快捷键退出：ctrl <span class="operator">+</span> d</span><br></pre></td></tr></table></figure></li><li><p>检查端口</p><p>MySQL默认绑定了3306端口，可以通过端口占用检查MySQL的网络状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep 3306</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221012192303.png" alt="image-20221012192303607"></p></li></ol><p>至此，MySQL就安装完成并可用了，请妥善保存好MySQL的root密码。</p><h2 id="MySQL5-7版本在Ubuntu（WSL环境）系统安装"><a href="#MySQL5-7版本在Ubuntu（WSL环境）系统安装" class="headerlink" title="MySQL5.7版本在Ubuntu（WSL环境）系统安装"></a>MySQL5.7版本在Ubuntu（WSL环境）系统安装</h2><blockquote><p>课程中配置的WSL环境是最新的Ubuntu22.04版本，这个版本的软件商店内置的MySQL是8.0版本</p><p>所以我们需要额外的步骤才可以安装5.7版本的MySQL</p></blockquote><p>安装操作需root权限，你可以：</p><ol><li><p>通过 sudo su -，切换到root用户</p><blockquote><p>课程中选择这种方式操作</p></blockquote></li><li><p>或在每一个命令前，加上sudo，用来临时提升权限</p></li></ol><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><ol><li><p>下载apt仓库文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载apt仓库的安装包，Ubuntu的安装包是.deb文件</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094103.png" alt="image-20221016094103315"></p></li><li><p>配置apt仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用dpkg命令安装仓库</span></span><br><span class="line">dpkg -i mysql-apt-config_0.8.12-1_all.deb</span><br></pre></td></tr></table></figure><p>弹出框中选择：<code>ubuntu bionic</code> （Ubuntu18.04系统的代号是bionic，选择18.04的版本库用来安装）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094142.png" alt="image-20221016094142343"></p><p>弹出框中选择：<code>MySQL Server &amp; Cluster</code></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094216.png" alt="image-20221016094216377"></p><p>弹出框中选择：<code>mysql-5.7</code></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094254.png" alt="image-20221016094254397"></p><p>最后选择：<code>ok</code></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094306.png" alt="image-20221016094306917"></p></li><li><p>更新apt仓库的信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首先导入仓库的密钥信息</span></span><br><span class="line">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新仓库信息</span></span><br><span class="line">apt update</span><br></pre></td></tr></table></figure></li><li><p>检查是否成功配置MySQL5.7的仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache policy mysql-server</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094546.png" alt="image-20221016094546943"></p><p>看到如图所示字样，即成功</p></li><li><p>安装MySQL5.7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用apt安装mysql客户端和mysql服务端</span></span><br><span class="line">apt install -f -y mysql-client=5.7* mysql-community-server=5.7*</span><br></pre></td></tr></table></figure><p>弹出框中输入root密码并选择ok，密码任意，课程中以123456代替</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094941.png" alt="image-20221016094941439"></p><p>再次输入root密码确认</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016094954.png" alt="image-20221016094954505"></p></li><li><p>启动MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql start# 启动</span><br><span class="line">/etc/init.d/mysql stop# 停止</span><br><span class="line">/etc/init.d/mysql status# 查看状态</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095259.png" alt="image-20221016095259172"></p></li><li><p>对MySQL进行初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行如下命令，此命令是MySQL安装后自带的配置程序</span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可以通过<span class="built_in">which</span>命令查看到这个自带程序所在的位置</span></span><br><span class="line">root@DESKTOP-Q89USRE:~# which mysql_secure_installation</span><br><span class="line">/usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><ol><li><p>输入密码：</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095458.png" alt="image-20221016095458755"></p></li><li><p>是否开启密码验证插件，如果需要增强密码安全性，输入<code>y</code>并回车，不需要直接回车（课程中选择直接回车）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095537.png" alt="image-20221016095537716"></p></li><li><p>是否更改root密码，需要输入<code>y</code>回车，不需要直接回车（课程不更改）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095621.png" alt="image-20221016095621386"></p></li><li><p>是否移除匿名用户，移除输入<code>y</code>回车，不移除直接回车（课程选择移除）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101232.png" alt="image-20221016101232827"></p></li><li><p>是否进制root用户远程登录，禁止输入<code>y</code>回车，不禁止直接回车（课程选择不禁止）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101324.png" alt="image-20221016101324577"></p></li><li><p>是否移除自带的测试数据库，移除输入<code>y</code>回车，不移除直接回车（课程选择不移除）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101404.png" alt="image-20221016101404392"></p></li><li><p>是否刷新权限，刷新输入<code>y</code>回车，不刷新直接回车（课程选择刷新）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101442.png" alt="image-20221016101442459"></p></li></ol></li><li><p>登陆MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入密码即可登陆成功</span></span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101524.png" alt="image-20221016101524498"></p></li></ol><p>至此，在Ubuntu上安装MySQL5.7版本成功。</p><h2 id="MySQL8-0版本在Ubuntu（WSL环境）系统安装"><a href="#MySQL8-0版本在Ubuntu（WSL环境）系统安装" class="headerlink" title="MySQL8.0版本在Ubuntu（WSL环境）系统安装"></a>MySQL8.0版本在Ubuntu（WSL环境）系统安装</h2><blockquote><p>课程中配置的WSL环境是最新的Ubuntu22.04版本，这个版本的软件商店内置的MySQL是8.0版本</p><p>所以直接可以通过apt安装即可</p></blockquote><blockquote><p>注意，课程是以WSL获得的Ubuntu操作系统环境。</p><p>如果你通过VMware虚拟机的方式获得了Ubuntu操作系统环境，操作步骤不用担心，和课程中使用WSL环境是&#x3D;&#x3D;完全一致的&#x3D;&#x3D;</p></blockquote><p>安装操作需root权限，你可以：</p><ol><li><p>通过 sudo su -，切换到root用户</p><blockquote><p>课程中选择这种方式操作</p></blockquote></li><li><p>或在每一个命令前，加上sudo，用来临时提升权限</p></li></ol><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><ol><li><p>如果已经安装过MySQL5.7版本，需要卸载仓库信息哦</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载MySQL5.7版本</span></span><br><span class="line">apt remove -y mysql-client=5.7* mysql-community-server=5.7*</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载5.7的仓库信息</span></span><br><span class="line">dpkg -l | grep mysql | awk &#x27;&#123;print $2&#125;&#x27; | xargs dpkg -P</span><br></pre></td></tr></table></figure></li><li><p>更新apt仓库信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure></li><li><p>安装mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y mysql-server</span><br></pre></td></tr></table></figure></li><li><p>启动MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql start# 启动</span><br><span class="line">/etc/init.d/mysql stop# 停止</span><br><span class="line">/etc/init.d/mysql status# 查看状态</span><br></pre></td></tr></table></figure></li><li><p>登陆MySQL设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接执行：mysql</span></span><br><span class="line">mysql</span><br></pre></td></tr></table></figure></li><li><p>设置密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>退出MySQL控制台</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>对MySQL进行初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行如下命令，此命令是MySQL安装后自带的配置程序</span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可以通过<span class="built_in">which</span>命令查看到这个自带程序所在的位置</span></span><br><span class="line">root@DESKTOP-Q89USRE:~# which mysql_secure_installation</span><br><span class="line">/usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><ol><li><p>输入密码：</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095458.png" alt="image-20221016095458755"></p></li><li><p>是否开启密码验证插件，如果需要增强密码安全性，输入<code>y</code>并回车，不需要直接回车（课程中选择直接回车）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095537.png" alt="image-20221016095537716"></p></li><li><p>是否更改root密码，需要输入<code>y</code>回车，不需要直接回车（课程不更改）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016095621.png" alt="image-20221016095621386"></p></li><li><p>是否移除匿名用户，移除输入<code>y</code>回车，不移除直接回车（课程选择移除）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101232.png" alt="image-20221016101232827"></p></li><li><p>是否进制root用户远程登录，禁止输入<code>y</code>回车，不禁止直接回车（课程选择不禁止）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101324.png" alt="image-20221016101324577"></p></li><li><p>是否移除自带的测试数据库，移除输入<code>y</code>回车，不移除直接回车（课程选择不移除）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101404.png" alt="image-20221016101404392"></p></li><li><p>是否刷新权限，刷新输入<code>y</code>回车，不刷新直接回车（课程选择刷新）</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016101442.png" alt="image-20221016101442459"></p></li></ol></li><li><p>重新登陆MySQL（用更改后的密码）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221016110414.png" alt="image-20221016110414182"></p></li></ol><p>至此，在Ubuntu上安装MySQL5.7版本成功。</p><h1 id="Tomcat安装部署【简单】"><a href="#Tomcat安装部署【简单】" class="headerlink" title="Tomcat安装部署【简单】"></a>Tomcat安装部署【简单】</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>Tomcat 是由 Apache 开发的一个 Servlet 容器，实现了对 Servlet 和 JSP 的支持，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全域管理和Tomcat阀等。</p><p>简单来说，Tomcat是一个WEB应用程序的托管平台，可以让用户编写的WEB应用程序，被Tomcat所托管，并提供网站服务。</p><blockquote><p>即让用户开发的WEB应用程序，变成可以被访问的网页。</p></blockquote><h2 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h2><p>Tomcat的安装非常简单，主要分为2部分：</p><ol><li>安装JDK环境</li><li>解压并安装Tomcat</li></ol><blockquote><p>本次安装使用Tomcat版本是：10.0.27版本，需要Java（JDK）版本最低为JDK8或更高版本</p><p>课程中使用的JDK版本是：JDK8u351版本</p></blockquote><h3 id="安装JDK环境"><a href="#安装JDK环境" class="headerlink" title="安装JDK环境"></a>安装JDK环境</h3><ol><li><p>下载JDK软件</p><p><a href="https://www.oracle.com/java/technologies/downloads">https://www.oracle.com/java/technologies/downloads</a></p><p>在页面下方找到：</p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017163411.png" alt="image-20221017163411651" style="zoom: 67%;"><p>下载<code>jdk-8u351-linux-x64.tar.gz</code></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017163440.png" alt="image-20221017163440491"></p><p>&#x3D;&#x3D;在弹出的页面中输入Oracle的账户密码即可下载（如无账户，请自行注册，注册是免费的）&#x3D;&#x3D;</p></li><li><p>登陆Linux系统，切换到root用户</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017163607.png"></p></li><li><p>通过FinalShell，上传下载好的JDK安装包</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017163706.png" alt="image-20221017163706026"></p></li><li><p>创建文件夹，用来部署JDK，将JDK和Tomcat都安装部署到：&#x2F;export&#x2F;server 内</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /export/server</span><br></pre></td></tr></table></figure></li><li><p>解压缩JDK安装文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u351-linux-x64.tar.gz -C /export/server</span><br></pre></td></tr></table></figure></li><li><p>配置JDK的软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /export/server/jdk1.8.0_351 /export/server/jdk</span><br></pre></td></tr></table></figure></li><li><p>配置JAVA_HOME环境变量，以及将$JAVA_HOME&#x2F;bin文件夹加入PATH环境变量中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑/etc/profile文件</span></span><br><span class="line">export JAVA_HOME=/export/server/jdk</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></li><li><p>生效环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>配置java执行程序的软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除系统自带的java程序</span></span><br><span class="line">rm -f /usr/bin/java</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">软链接我们自己安装的java程序</span></span><br><span class="line">ln -s /export/server/jdk/bin/java /usr/bin/java</span><br></pre></td></tr></table></figure></li><li><p>执行验证：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure></li></ol><h3 id="解压并部署Tomcat"><a href="#解压并部署Tomcat" class="headerlink" title="解压并部署Tomcat"></a>解压并部署Tomcat</h3><blockquote><p>Tomcat建议使用非Root用户安装并启动</p><p>可以创建一个用户：tomcat用以部署</p></blockquote><ol><li><p>首先，放行tomcat需要使用的8080端口的外部访问权限</p><blockquote><p>CentOS系统默认开启了防火墙，阻止外部网络流量访问系统内部</p><p>所以，如果想要Tomcat可以正常使用，需要对Tomcat默认使用的8080端口进行放行</p><p>放行有2种操作方式：</p><ol><li>关闭防火墙</li><li>配置防火墙规则，放行端口</li></ol></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下操作2选一即可</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式1：关闭防火墙</span></span><br><span class="line">systemctl stop firewalld# 关闭防火墙</span><br><span class="line">systemctl disable firewalld# 停止防火墙开机自启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式2：放行8080端口的外部访问</span></span><br><span class="line">firewall-cmd --add-port=8080/tcp --permanent# --add-port=8080/tcp表示放行8080端口的tcp访问，--permanent表示永久生效</span><br><span class="line">firewall-cmd --reload# 重新载入防火墙规则使其生效</span><br></pre></td></tr></table></figure><blockquote><p>方便起见，建议同学们选择方式1，直接关闭防火墙一劳永逸</p><p>防火墙的配置非常复杂，后面会视情况独立出一集防火墙配置规则的章节。</p></blockquote></li><li><p>以root用户操作，创建tomcat用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用root用户操作</span></span><br><span class="line">useradd tomcat</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可选，为tomcat用户配置密码</span></span><br><span class="line">passwd tomcat</span><br></pre></td></tr></table></figure></li><li><p>下载Tomcat安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用root用户操作</span></span><br><span class="line">wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果出现https相关错误，可以使用--no-check-certificate选项</span></span><br><span class="line">wget --no-check-certificate https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>如果Linux内下载过慢，可以复制下载链接在Windows系统中使用迅雷等软件加速下载然后上传到Linux内即可</p><p>或者使用课程资料中提供的安装包</p></blockquote></li><li><p>解压Tomcat安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用root用户操作，否则无权限解压到/export/server内，除非修改此文件夹权限</span></span><br><span class="line">tar -zxvf apache-tomcat-10.0.27.tar.gz -C /export/server</span><br></pre></td></tr></table></figure></li><li><p>创建Tomcat软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用root用户操作</span></span><br><span class="line">ln -s /export/server/apache-tomcat-10.0.27 /export/server/tomcat</span><br></pre></td></tr></table></figure></li><li><p>修改tomcat安装目录权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用root用户操作，同时对软链接和tomcat安装文件夹进行修改，使用通配符*进行匹配</span></span><br><span class="line">chown -R tomcat:tomcat /export/server/*tomcat*</span><br></pre></td></tr></table></figure></li><li><p>切换到tomcat用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - tomcat</span><br></pre></td></tr></table></figure></li><li><p>启动tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/server/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure></li><li><p>tomcat启动在8080端口，可以检查是否正常启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep 8080</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017223814.png" alt="image-20221017223814737"></p></li><li><p>打开浏览器，输入：</p><p><a href="http://centos:8080或http://192.168.88.130:8080">http://centos:8080或http://192.168.88.130:8080</a></p><p>使用主机名（需配置好本地的主机名映射）或IP地址访问Tomcat的WEB页面</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221017223915.png" alt="image-20221017223915498"></p></li></ol><p>至此，Tomcat安装配置完成。</p><h1 id="Nginx安装部署【简单】"><a href="#Nginx安装部署【简单】" class="headerlink" title="Nginx安装部署【简单】"></a>Nginx安装部署【简单】</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><p><em>Nginx</em> (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务。</p><p>同Tomcat一样，Nginx可以托管用户编写的WEB应用程序成为可访问的网页服务，同时也可以作为流量代理服务器，控制流量的中转。</p><p>Nginx在WEB开发领域，基本上也是必备组件之一了。</p><h2 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h2><p>Nginx同样需要配置额外的yum仓库，才可以使用yum安装</p><blockquote><p>安装Nginx的操作需要root身份</p></blockquote><ol><li><p>安装yum依赖程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure></li><li><p>手动添加，nginx的yum仓库</p><p>yum程序使用的仓库配置文件，存放在：<code>/etc/yum.repo.d</code>内。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件使用vim编辑</span></span><br><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">填入如下内容并保存退出</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=true</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=true</span><br></pre></td></tr></table></figure><blockquote><p>通过如上操作，我们手动添加了nginx的yum仓库</p></blockquote></li><li><p>通过yum安装最新稳定版的nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure></li><li><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx自动注册了systemctl系统服务</span></span><br><span class="line">systemctl start nginx# 启动</span><br><span class="line">systemctl stop nginx# 停止</span><br><span class="line">systemctl status nginx# 运行状态</span><br><span class="line">systemctl enable nginx# 开机自启</span><br><span class="line">systemctl disable nginx# 关闭开机自启</span><br></pre></td></tr></table></figure></li><li><p>配置防火墙放行</p><p>nginx默认绑定80端口，需要关闭防火墙或放行80端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式1（推荐），关闭防火墙</span></span><br><span class="line">systemctl stop firewalld# 关闭</span><br><span class="line">systemctl disable firewalld# 关闭开机自启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式2，放行80端口</span></span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent# 放行tcp规则下的80端口，永久生效</span><br><span class="line">firewall-cmd --reload# 重新加载防火墙规则</span><br></pre></td></tr></table></figure></li><li><p>启动后浏览器输入Linux服务器的IP地址或主机名即可访问</p><p><a href="http://192.168.88.130/">http://192.168.88.130</a> 或 <a href="http://centos/">http://centos</a></p><blockquote><p>ps：80端口是访问网站的默认端口，所以后面无需跟随端口号</p><p>显示的指定端口也是可以的比如：</p><ul><li><a href="http://192.168.88.130/">http://192.168.88.130:80</a></li><li><a href="http://centos/">http://centos:80</a></li></ul></blockquote></li></ol><p>至此，Nginx安装配置完成。</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221018143113.png" alt="image-20221018143113053"></p><h1 id="RabbitMQ安装部署【简单】"><a href="#RabbitMQ安装部署【简单】" class="headerlink" title="RabbitMQ安装部署【简单】"></a>RabbitMQ安装部署【简单】</h1><h2 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h2><p>RabbitMQ一款知名的开源消息队列系统，为企业提供消息的发布、订阅、点对点传输等消息服务。</p><p>RabbitMQ在企业开发中十分常见，课程为大家演示快速搭建RabbitMQ环境。</p><h2 id="安装-6"><a href="#安装-6" class="headerlink" title="安装"></a>安装</h2><blockquote><p>rabbitmq在yum仓库中的版本比较老，所以我们需要手动构建yum仓库</p></blockquote><ol><li><p>准备yum仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 准备gpgkey密钥</span></span><br><span class="line">rpm --import https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line">rpm --import https://packagecloud.io/rabbitmq/erlang/gpgkey</span><br><span class="line">rpm --import https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 准备仓库文件</span></span><br><span class="line">vim /etc/yum.repos.d/rabbitmq.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">填入如下内容</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Zero dependency Erlang</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"></span><br><span class="line">[rabbitmq_erlang]</span><br><span class="line">name=rabbitmq_erlang</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/erlang/el/7/$basearch</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PackageCloud<span class="string">&#x27;s repository key and RabbitMQ package signing key</span></span></span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/erlang/gpgkey</span><br><span class="line">       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br><span class="line"></span><br><span class="line">[rabbitmq_erlang-source]</span><br><span class="line">name=rabbitmq_erlang-source</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/erlang/el/7/SRPMS</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">PackageCloud&#x27;</span>s repository key and RabbitMQ package signing key</span></span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/erlang/gpgkey</span><br><span class="line">       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># RabbitMQ server</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"></span><br><span class="line">[rabbitmq_server]</span><br><span class="line">name=rabbitmq_server</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/$basearch</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PackageCloud<span class="string">&#x27;s repository key and RabbitMQ package signing key</span></span></span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey</span><br><span class="line">       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br><span class="line"></span><br><span class="line">[rabbitmq_server-source]</span><br><span class="line">name=rabbitmq_server-source</span><br><span class="line">baseurl=https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/SRPMS</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">metadata_expire=300</span><br></pre></td></tr></table></figure></li><li><p>安装RabbitMQ</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line">yum install erlang rabbitmq-server -y</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  erlang.x86_64 0:23.3.4.11-1.el7           rabbitmq-server.noarch 0:3.10.0-1.el7</span><br></pre></td></tr></table></figure></li><li><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用systemctl管控，服务名：rabbitmq-server</span></span><br><span class="line">systemctl enable rabbitmq-server# 开机自启</span><br><span class="line">systemctl disable rabbitmq-server# 关闭开机自启</span><br><span class="line">systemctl start rabbitmq-server# 启动</span><br><span class="line">systemctl stop rabbitmq-server# 关闭</span><br><span class="line">systemctl status rabbitmq-server# 查看状态</span><br></pre></td></tr></table></figure></li><li><p>放行防火墙，RabbitMQ使用5672、15672、25672 3个端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式1（推荐），关闭防火墙</span></span><br><span class="line">systemctl stop firewalld# 关闭</span><br><span class="line">systemctl disable firewalld# 关闭开机自启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式2，放行5672 25672端口</span></span><br><span class="line">firewall-cmd --add-port=5672/tcp --permanent# 放行tcp规则下的5672端口，永久生效</span><br><span class="line">firewall-cmd --add-port=15672/tcp --permanent# 放行tcp规则下的15672端口，永久生效</span><br><span class="line">firewall-cmd --add-port=25672/tcp --permanent# 放行tcp规则下的25672端口，永久生效</span><br><span class="line">firewall-cmd --reload# 重新加载防火墙规则</span><br></pre></td></tr></table></figure></li><li><p>启动RabbitMQ的WEB管理控制台</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure></li><li><p>添加admin用户，并赋予权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user admin &#x27;Itheima66^&#x27;</span><br><span class="line">rabbitmqctl set_permissions -p &quot;/&quot; &quot;admin&quot; &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line">rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure></li><li><p>浏览器打开管理控制台</p><p><a href="http://192.168.88.130:15672/">http://192.168.88.130:15672</a></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221018154824.png" alt="image-20221018154823983"></p></li></ol><p>至此，RabbitMQ已经安装完成了。</p><h1 id="Redis安装部署【简单】"><a href="#Redis安装部署【简单】" class="headerlink" title="Redis安装部署【简单】"></a>Redis安装部署【简单】</h1><h2 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h2><p>redis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库。</p><p>redis的特点就是：<code>快</code>，可以基于内存存储数据并提供超低延迟、超快的检索速度</p><p>一般用于在系统中提供快速缓存的能力。</p><h2 id="安装-7"><a href="#安装-7" class="headerlink" title="安装"></a>安装</h2><ol><li><p>配置<code>EPEL</code>仓库</p><blockquote><p>EPEL 的全称叫 Extra Packages for Enterprise Linux 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。EPEL则为服务器版本提供大量的rpm包(yum程序所使用的程序安装包，类似Windows的exe)，而且大多数rpm包在官方 repository 中是找不到的。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure></li><li><p>安装redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line">yum install -y redis</span><br></pre></td></tr></table></figure></li><li><p>启动redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用systemctl管控，服务名：redis</span></span><br><span class="line">systemctl enable redis# 开机自启</span><br><span class="line">systemctl disable redis# 关闭开机自启</span><br><span class="line">systemctl start redis# 启动</span><br><span class="line">systemctl stop redis# 关闭</span><br><span class="line">systemctl status redis# 查看状态</span><br></pre></td></tr></table></figure></li><li><p>放行防火墙，redis使用端口6379</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式1（推荐），关闭防火墙</span></span><br><span class="line">systemctl stop firewalld# 关闭</span><br><span class="line">systemctl disable firewalld# 关闭开机自启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式2，放行6379端口</span></span><br><span class="line">firewall-cmd --add-port=6379/tcp --permanent# 放行tcp规则下的6379端口，永久生效</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>进入redis服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行redis-cli</span></span><br><span class="line">[root@centos ~]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; set mykey hello</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mykey</span><br><span class="line">&quot;hello&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure></li></ol><p>至此，redis安装完成。</p><h1 id="ElasticSearch安装部署"><a href="#ElasticSearch安装部署" class="headerlink" title="ElasticSearch安装部署"></a>ElasticSearch安装部署</h1><h2 id="简介-5"><a href="#简介-5" class="headerlink" title="简介"></a>简介</h2><p><a href="https://baike.baidu.com/item/%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">全文搜索</a>属于最常见的需求，开源的 <a href="https://www.elastic.co/">Elasticsearch</a> （以下简称 es）是目前全文搜索引擎的首选。</p><p>它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。</p><p>Elasticsearch简称es，在企业内同样是一款应用非常广泛的搜索引擎服务。</p><p>很多服务中的搜索功能，都是基于es来实现的。</p><h2 id="安装-8"><a href="#安装-8" class="headerlink" title="安装"></a>安装</h2><ol><li><p>添加yum仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导入仓库密钥</span></span><br><span class="line">rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加yum源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑文件</span> </span><br><span class="line">vim /etc/yum.repos.d/elasticsearch.repo</span><br><span class="line"></span><br><span class="line">[elasticsearch-7.x]</span><br><span class="line">name=Elasticsearch repository for 7.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/7.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">type=rpm-md</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新yum缓存</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure></li><li><p>安装es</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>配置es</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">17行，设置集群名称</span></span><br><span class="line">cluster.name: my-cluster</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">23行，设置节点名称</span></span><br><span class="line">node.name: node-1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">56行，允许外网访问</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">74行，配置集群master节点</span></span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br></pre></td></tr></table></figure></li><li><p>启动es</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start | stop | status | enable | disable elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure></li><li><p>测试</p><p>浏览器打开：<a href="http://ip:9200/?pretty">http://ip:9200/?pretty</a></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025085432.png" alt="image-20221025085432335"></p></li></ol><h1 id="集群化环境前置准备"><a href="#集群化环境前置准备" class="headerlink" title="集群化环境前置准备"></a>集群化环境前置准备</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在前面，我们所学习安装的软件，都是以单机模式运行的。</p><p>后续，我们将要学习大数据相关的软件部署，所以后续我们所安装的软件服务，大多数都是以集群化（多台服务器共同工作）模式运行的。</p><p>所以，在当前小节，我们需要完成集群化环境的前置准备，包括创建多台虚拟机，配置主机名映射，SSH免密登录等等。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="配置多台Linux虚拟机"><a href="#配置多台Linux虚拟机" class="headerlink" title="配置多台Linux虚拟机"></a>配置多台Linux虚拟机</h3><p>安装集群化软件，首要条件就是要有多台Linux服务器可用。</p><p>我们可以使用VMware提供的克隆功能，将我们的虚拟机额外克隆出3台来使用。</p><ol><li><p>首先，关机当前CentOS系统虚拟机（可以使用root用户执行<code>init 0</code>来快速关机）</p></li><li><p>新建文件夹</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104157.png" alt="image-20221025104157628"></p><p>文件夹起名为：<code>虚拟机集群</code></p></li><li><p>克隆</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104131.png" alt="image-20221025104131303"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104312.png" alt="image-20221025104312091"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104329.png" alt="image-20221025104329109"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104345.png" alt="image-20221025104345484"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104414.png" alt="image-20221025104414576"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104427.png" alt="image-20221025104427160"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104432.png" alt="image-20221025104432927"></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104446.png" alt="image-20221025104446044"></p></li><li><p>同样的操作克隆出：node2和node3</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025104825.png" alt="image-20221025104825204"></p></li><li><p>开启node1，修改主机名为node1，并修改固定ip为：192.168.88.131</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改主机名</span></span><br><span class="line">hostnamectl set-hostname node1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改IP地址</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">IPADDR=&quot;192.168.88.131&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启网卡</span></span><br><span class="line">systemctl stop network</span><br><span class="line">systemctl start network</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者直接</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure></li><li><p>同样的操作启动node2和node3,</p><p>修改node2主机名为node2，设置ip为192.168.88.132</p><p>修改node2主机名为node3，设置ip为192.168.88.133</p></li><li><p>配置FinalShell，配置连接到node1、node2、node3的连接</p><blockquote><p>为了简单起见，建议配置root用户登录</p></blockquote></li></ol><h3 id="准备主机名映射"><a href="#准备主机名映射" class="headerlink" title="准备主机名映射"></a>准备主机名映射</h3><ol><li><p>在Windows系统中修改hosts文件，填入如下内容：</p><blockquote><p>如果同学们使用MacOS系统，请：</p><ol><li>sudo su -，切换到root</li><li>修改&#x2F;etc&#x2F;hosts文件</li></ol></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.88.131 node1</span><br><span class="line">192.168.88.132 node2</span><br><span class="line">192.168.88.133 node3</span><br></pre></td></tr></table></figure></li><li><p>在3台Linux的&#x2F;etc&#x2F;hosts文件中，填入如下内容（&#x3D;&#x3D;3台都要添加&#x3D;&#x3D;）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.88.131 node1</span><br><span class="line">192.168.88.132 node2</span><br><span class="line">192.168.88.133 node3</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置SSH免密登录"><a href="#配置SSH免密登录" class="headerlink" title="配置SSH免密登录"></a>配置SSH免密登录</h3><h4 id="简介-6"><a href="#简介-6" class="headerlink" title="简介"></a>简介</h4><p>SSH服务是一种用于远程登录的安全认证协议。</p><p>我们通过FinalShell远程连接到Linux，就是使用的SSH服务。</p><p>SSH服务支持：</p><ol><li>通过账户+密码的认证方式来做用户认证</li><li>通过账户+秘钥文件的方式做用户认证</li></ol><p>SSH可以让我们通过SSH命令，远程的登陆到其它的主机上，比如：</p><p>在node1执行：ssh root@node2，将以root用户登录node2服务器，输入密码即可成功登陆</p><p>或者ssh node2，将以当前用户直接登陆到node2服务器。</p><h4 id="SSH免密配置"><a href="#SSH免密配置" class="headerlink" title="SSH免密配置"></a>SSH免密配置</h4><p>后续安装的集群化软件，多数需要远程登录以及远程执行命令，我们可以简单起见，配置三台Linux服务器之间的免密码互相SSH登陆</p><ol><li><p>在每一台机器都执行：<code>ssh-keygen -t rsa -b 4096</code>，一路回车到底即可</p></li><li><p>在每一台机器都执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id node1</span><br><span class="line">ssh-copy-id node2</span><br><span class="line">ssh-copy-id node3</span><br></pre></td></tr></table></figure></li><li><p>执行完毕后，node1、node2、node3之间将完成root用户之间的免密互通</p></li></ol><h3 id="配置JDK环境"><a href="#配置JDK环境" class="headerlink" title="配置JDK环境"></a>配置JDK环境</h3><p>后续的大数据集群软件，多数是需要Java运行环境的，所以我们为&#x3D;&#x3D;每一台&#x3D;&#x3D;机器都配置JDK环境。</p><p>JDK配置参阅：<code>Tomcat</code>安装部署环节。</p><h3 id="关闭防火墙和SELinux"><a href="#关闭防火墙和SELinux" class="headerlink" title="关闭防火墙和SELinux"></a>关闭防火墙和SELinux</h3><p>集群化软件之间需要通过端口互相通讯，为了避免出现网络不通的问题，我们可以简单的在集群内部关闭防火墙。</p><p>&#x3D;&#x3D;在每一台机器都执行&#x3D;&#x3D;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>Linux有一个安全模块：SELinux，用以限制用户和程序的相关权限，来确保系统的安全稳定。</p><p>SELinux的配置同防火墙一样，非常复杂，课程中不多涉及，后续视情况可以出一章SELinux的配置课程。</p><p>在当前，我们只需要关闭SELinux功能，避免导致后面的软件运行出现问题即可，</p><p>&#x3D;&#x3D;在每一台机器都执行&#x3D;&#x3D;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/selinux</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将第七行，SELINUX=enforcing 改为</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存退出后，重启虚拟机即可，千万要注意disabled单词不要写错，不然无法启动系统</span></span><br></pre></td></tr></table></figure><h3 id="添加快照"><a href="#添加快照" class="headerlink" title="添加快照"></a>添加快照</h3><p>为了避免后续出现问题，在完成上述设置后，为&#x3D;&#x3D;每一台虚拟机&#x3D;&#x3D;都制作快照，留待使用。</p><h2 id="补充命令-scp"><a href="#补充命令-scp" class="headerlink" title="补充命令 - scp"></a>补充命令 - scp</h2><p>后续的安装部署操作，我们将会频繁的在多台服务器之间相互传输数据。</p><p>为了更加方面的互相传输，我们补充一个命令：scp</p><p>scp命令是cp命令的升级版，即：ssh cp，通过SSH协议完成文件的复制。</p><p>其主要的功能就是：在不同的Linux服务器之间，通过<code>SSH</code>协议互相传输文件。</p><p>只要知晓服务器的账户和密码（或密钥），即可通过SCP互传文件。</p><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">scp [-r] 参数1 参数2</span><br><span class="line">- -r选项用于复制文件夹使用，如果复制文件夹，必须使用-r</span><br><span class="line">- 参数1：本机路径 或 远程目标路径</span><br><span class="line">- 参数2：远程目标路径 或 本机路径</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line">scp -r /export/server/jdk root@node2:/export/server/</span><br><span class="line">将本机上的jdk文件夹， 以root的身份复制到node2的/export/server/内</span><br><span class="line">同SSH登陆一样，账户名可以省略（使用本机当前的同名账户登陆）</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line">scp -r node2:/export/server/jdk /export/server/</span><br><span class="line">将远程node2的jdk文件夹，复制到本机的/export/server/内</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scp命令的高级用法</span></span><br><span class="line">cd /export/server</span><br><span class="line">scp -r jdk node2:`pwd`/    # 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span><br><span class="line">scp -r jdk node2:$PWD      # 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span><br></pre></td></tr></table></figure><h1 id="Zookeeper集群安装部署"><a href="#Zookeeper集群安装部署" class="headerlink" title="Zookeeper集群安装部署"></a>Zookeeper集群安装部署</h1><h2 id="简介-7"><a href="#简介-7" class="headerlink" title="简介"></a>简介</h2><p>ZooKeeper是一个<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F/19276232?fromModule=lemma_inlink">分布式</a>的，开放源码的<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/9854429?fromModule=lemma_inlink">分布式应用程序</a>协调服务，是Hadoop和<a href="https://baike.baidu.com/item/Hbase/7670213?fromModule=lemma_inlink">Hbase</a>的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p><p>除了为Hadoop和HBase提供协调服务外，Zookeeper也被其它许多软件采用作为其分布式状态一致性的依赖，比如Kafka，又或者一些软件项目中，也经常能见到Zookeeper作为一致性协调服务存在。</p><p>Zookeeper不论是大数据领域亦或是其它服务器开发领域，涉及到分布式状态一致性的场景，总有它的身影存在。</p><h2 id="安装-9"><a href="#安装-9" class="headerlink" title="安装"></a>安装</h2><p>Zookeeper是一款分布式的集群化软件，可以在多台服务器上部署，并协同组成分布式集群一起工作。</p><ol><li><p>首先，要确保已经完成了<code>集群化环境前置准备</code>环节的全部内容</p></li><li><p>【node1上操作】下载Zookeeper安装包，并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载</span></span><br><span class="line">wget http://archive.apache.org/dist/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确保如下目录存在，不存在就创建</span></span><br><span class="line">mkdir -p /export/server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf apache-zookeeper-3.5.9-bin.tar.gz -C /export/server</span><br></pre></td></tr></table></figure></li><li><p>【node1上操作】创建软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper</span><br></pre></td></tr></table></figure></li><li><p>【node1上操作】修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /export/server/zookeeper/conf/zoo.cfg</span><br><span class="line"></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zookeeper数据存储目录</span></span><br><span class="line">dataDir=/export/server/zookeeper/data</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=node1:2888:3888</span><br><span class="line">server.2=node2:2888:3888</span><br><span class="line">server.3=node3:2888:3888</span><br></pre></td></tr></table></figure></li><li><p>【node1上操作】配置<code>myid</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 创建Zookeeper的数据目录</span></span><br><span class="line">mkdir /export/server/zookeeper/data</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 创建文件，并填入1</span></span><br><span class="line">vim /export/server/zookeeper/data/myid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件内填入1即可</span></span><br></pre></td></tr></table></figure></li><li><p>【在node2和node3上操作】，创建文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /export/server</span><br></pre></td></tr></table></figure></li><li><p>【node1上操作】将Zookeeper 复制到node2和node3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server</span><br><span class="line"></span><br><span class="line">scp -r apache-zookeeper-3.5.9 node2:`pwd`/</span><br><span class="line">scp -r apache-zookeeper-3.5.9 node3:`pwd`/</span><br></pre></td></tr></table></figure></li><li><p>【在node2上操作】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 创建软链接</span></span><br><span class="line">ln -s /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 修改myid文件</span></span><br><span class="line">vim /export/server/zookeeper/data/myid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改内容为2</span></span><br></pre></td></tr></table></figure></li><li><p>【在node3上操作】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 创建软链接</span></span><br><span class="line">ln -s /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 修改myid文件</span></span><br><span class="line">vim /export/server/zookeeper/data/myid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改内容为3</span></span><br></pre></td></tr></table></figure></li><li><p>【在node1、node2、node3上分别执行】启动Zookeeper</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动命令</span></span><br><span class="line">/export/server/zookeeper/bin/zkServer.sh start# 启动Zookeeper</span><br></pre></td></tr></table></figure></li><li><p>【在node1、node2、node3上分别执行】检查Zookeeper进程是否启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jps</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果中找到有：QuorumPeerMain 进程即可</span></span><br></pre></td></tr></table></figure></li><li><p>【node1上操作】验证Zookeeper</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/export/server/zookeeper/zkCli.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入到Zookeeper控制台中后，执行</span></span><br><span class="line">ls /</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如无报错即配置成功</span></span><br></pre></td></tr></table></figure></li></ol><p>至此Zookeeper安装完成</p><h1 id="Kafka集群安装部署"><a href="#Kafka集群安装部署" class="headerlink" title="Kafka集群安装部署"></a>Kafka集群安装部署</h1><h2 id="简介-8"><a href="#简介-8" class="headerlink" title="简介"></a>简介</h2><p>Kafka是一款<code>分布式的、去中心化的、高吞吐低延迟、订阅模式</code>的消息队列系统。</p><p>同RabbitMQ一样，Kafka也是消息队列。不过RabbitMQ多用于后端系统，因其更加专注于消息的延迟和容错。</p><p>Kafka多用于大数据体系，因其更加专注于数据的吞吐能力。</p><p>Kafka多数都是运行在分布式（集群化）模式下，所以课程将以3台服务器，来完成Kafka集群的安装部署。</p><h2 id="安装-10"><a href="#安装-10" class="headerlink" title="安装"></a>安装</h2><ol><li><p>确保已经跟随前面的视频，安装并部署了JDK和Zookeeper服务</p><blockquote><p>Kafka的运行依赖JDK环境和Zookeeper请确保已经有了JDK环境和Zookeeper</p></blockquote></li><li><p>【在node1操作】下载并上传Kafka的安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载安装包</span></span><br><span class="line">wget http://archive.apache.org/dist/kafka/2.4.1/kafka_2.12-2.4.1.tgz</span><br></pre></td></tr></table></figure></li><li><p>【在node1操作】解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /export/server# 此文件夹如果不存在需先创建</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf kafka_2.12-2.4.1.tgz -C /export/server/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建软链接</span></span><br><span class="line">ln -s /export/server/kafka_2.12-2.4.1 /export/server/kafka</span><br></pre></td></tr></table></figure></li><li><p>【在node1操作】修改Kafka目录内的config目录内的<code>server.properties</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server/kafka/config</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定broker的<span class="built_in">id</span></span></span><br><span class="line">broker.id=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定 kafka的绑定监听的地址</span></span><br><span class="line">listeners=PLAINTEXT://node1:9092</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Kafka数据的位置</span></span><br><span class="line">log.dirs=/export/server/kafka/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Zookeeper的三个节点</span></span><br><span class="line">zookeeper.connect=node1:2181,node2:2181,node3:2181</span><br></pre></td></tr></table></figure></li><li><p>【在node1操作】将node1的kafka复制到node2和node3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制到node2同名文件夹</span></span><br><span class="line">scp -r kafka_2.12-2.4.1 node2:`pwd`/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制到node3同名文件夹</span></span><br><span class="line">scp -r kafka_2.12-2.4.1 node3:$PWD</span><br></pre></td></tr></table></figure></li><li><p>【在node2操作】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建软链接</span></span><br><span class="line">ln -s /export/server/kafka_2.12-2.4.1 /export/server/kafka</span><br><span class="line"></span><br><span class="line">cd /export/server/kafka/config</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定broker的<span class="built_in">id</span></span></span><br><span class="line">broker.id=2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定 kafka的绑定监听的地址</span></span><br><span class="line">listeners=PLAINTEXT://node2:9092</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Kafka数据的位置</span></span><br><span class="line">log.dirs=/export/server/kafka/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Zookeeper的三个节点</span></span><br><span class="line">zookeeper.connect=node1:2181,node2:2181,node3:2181</span><br></pre></td></tr></table></figure></li><li><p>【在node3操作】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建软链接</span></span><br><span class="line">ln -s /export/server/kafka_2.12-2.4.1 /export/server/kafka</span><br><span class="line"></span><br><span class="line">cd /export/server/kafka/config</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定broker的<span class="built_in">id</span></span></span><br><span class="line">broker.id=3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定 kafka的绑定监听的地址</span></span><br><span class="line">listeners=PLAINTEXT://node3:9092</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Kafka数据的位置</span></span><br><span class="line">log.dirs=/export/server/kafka/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定Zookeeper的三个节点</span></span><br><span class="line">zookeeper.connect=node1:2181,node2:2181,node3:2181</span><br></pre></td></tr></table></figure></li><li><p>启动kafka</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请先确保Zookeeper已经启动了</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式1：【前台启动】分别在node1、2、3上执行如下语句</span></span><br><span class="line">/export/server/kafka/bin/kafka-server-start.sh /export/server/kafka/config/server.properties</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式2：【后台启动】分别在node1、2、3上执行如下语句</span></span><br><span class="line">nohup /export/server/kafka/bin/kafka-server-start.sh /export/server/kafka/config/server.properties 2&gt;&amp;1 &gt;&gt; /export/server/kafka/kafka-server.log &amp;</span><br></pre></td></tr></table></figure></li><li><p>验证Kafka启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在每一台服务器执行</span></span><br><span class="line">jps</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221025174522.png" alt="image-20221025174522487"></p></li></ol><h2 id="测试Kafka能否正常使用"><a href="#测试Kafka能否正常使用" class="headerlink" title="测试Kafka能否正常使用"></a>测试Kafka能否正常使用</h2><ol><li>创建测试主题</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在node1执行，创建一个主题</span></span><br><span class="line">/export/server/kafka_2.12-2.4.1/bin/kafka-topics.sh --create --zookeeper node1:2181 --replication-factor 1 --partitions 3 --topic test</span><br></pre></td></tr></table></figure><ol start="2"><li>运行测试，请在FinalShell中打开2个node1的终端页面</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开一个终端页面，启动一个模拟的数据生产者</span></span><br><span class="line">/export/server/kafka_2.12-2.4.1/bin/kafka-console-producer.sh --broker-list node1:9092 --topic test</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">再打开一个新的终端页面，在启动一个模拟的数据消费者</span></span><br><span class="line">/export/server/kafka_2.12-2.4.1/bin/kafka-console-consumer.sh --bootstrap-server node1:9092 --topic test --from-beginning</span><br></pre></td></tr></table></figure><h1 id="大数据集群（Hadoop生态）安装部署"><a href="#大数据集群（Hadoop生态）安装部署" class="headerlink" title="大数据集群（Hadoop生态）安装部署"></a>大数据集群（Hadoop生态）安装部署</h1><h2 id="简介-9"><a href="#简介-9" class="headerlink" title="简介"></a>简介</h2><p>1）Hadoop是一个由Apache基金会所开发的分布式系统基础架构。<br>2）主要解决，海量数据的存储和海量数据的分析计算问题。</p><p>Hadoop HDFS 提供分布式海量数据存储能力</p><p>Hadoop YARN 提供分布式集群资源管理能力</p><p>Hadoop MapReduce 提供分布式海量数据计算能力</p><h3 id="前置要求-1"><a href="#前置要求-1" class="headerlink" title="前置要求"></a>前置要求</h3><ul><li>请确保完成了集群化环境前置准备章节的内容</li><li>即：JDK、SSH免密、关闭防火墙、配置主机名映射等前置操作</li></ul><h3 id="Hadoop集群角色"><a href="#Hadoop集群角色" class="headerlink" title="Hadoop集群角色"></a>Hadoop集群角色</h3><p>Hadoop生态体系中总共会出现如下进程角色：</p><ol><li>Hadoop HDFS的管理角色：Namenode进程（<code>仅需1个即可（管理者一个就够）</code>）</li><li>Hadoop HDFS的工作角色：Datanode进程（<code>需要多个（工人，越多越好，一个机器启动一个）</code>）</li><li>Hadoop YARN的管理角色：ResourceManager进程（<code>仅需1个即可（管理者一个就够）</code>）</li><li>Hadoop YARN的工作角色：NodeManager进程（<code>需要多个（工人，越多越好，一个机器启动一个）</code>）</li><li>Hadoop 历史记录服务器角色：HistoryServer进程（<code>仅需1个即可（功能进程无需太多1个足够）</code>）</li><li>Hadoop 代理服务器角色：WebProxyServer进程（<code>仅需1个即可（功能进程无需太多1个足够）</code>）</li><li>Zookeeper的进程：QuorumPeerMain进程（<code>仅需1个即可（Zookeeper的工作者，越多越好）</code>）</li></ol><h3 id="角色和节点分配"><a href="#角色和节点分配" class="headerlink" title="角色和节点分配"></a>角色和节点分配</h3><p>角色分配如下：</p><ol><li>node1:Namenode、Datanode、ResourceManager、NodeManager、HistoryServer、WebProxyServer、QuorumPeerMain</li><li>node2:Datanode、NodeManager、QuorumPeerMain</li><li>node3:Datanode、NodeManager、QuorumPeerMain</li></ol><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026202935.png" alt="image-20221026202935745"></p><h2 id="安装-11"><a href="#安装-11" class="headerlink" title="安装"></a>安装</h2><h3 id="调整虚拟机内存"><a href="#调整虚拟机内存" class="headerlink" title="调整虚拟机内存"></a>调整虚拟机内存</h3><p>如上图，可以看出node1承载了太多的压力。同时node2和node3也同时运行了不少程序</p><p>为了确保集群的稳定，需要对虚拟机进行内存设置。</p><p>请在VMware中，对：</p><ol><li>node1设置4GB或以上内存</li><li>node2和node3设置2GB或以上内存</li></ol><blockquote><p>大数据的软件本身就是集群化（一堆服务器）一起运行的。</p><p>现在我们在一台电脑中以多台虚拟机来模拟集群，确实会有很大的内存压力哦。</p></blockquote><h3 id="Zookeeper集群部署"><a href="#Zookeeper集群部署" class="headerlink" title="Zookeeper集群部署"></a>Zookeeper集群部署</h3><p>略</p><h3 id="Hadoop集群部署"><a href="#Hadoop集群部署" class="headerlink" title="Hadoop集群部署"></a>Hadoop集群部署</h3><ol><li><p>下载Hadoop安装包、解压、配置软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 下载</span></span><br><span class="line">wget http://archive.apache.org/dist/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 解压</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请确保目录/export/server存在</span></span><br><span class="line">tar -zxvf hadoop-3.3.0.tar.gz -C /export/server/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 构建软链接</span></span><br><span class="line">ln -s /export/server/hadoop-3.3.0 /export/server/hadoop</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件：<code>hadoop-env.sh</code></p><blockquote><p>Hadoop的配置文件要修改的地方很多，请细心</p></blockquote><p>cd 进入到&#x2F;export&#x2F;server&#x2F;hadoop&#x2F;etc&#x2F;hadoop，文件夹中，配置文件都在这里</p><p>修改hadoop-env.sh文件</p><blockquote><p>此文件是配置一些Hadoop用到的环境变量</p><p>这些是临时变量，在Hadoop运行时有用</p><p>如果要永久生效，需要写到&#x2F;etc&#x2F;profile中</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件开头加入：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置Java安装路径</span></span><br><span class="line">export JAVA_HOME=/export/server/jdk</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置Hadoop安装路径</span></span><br><span class="line">export HADOOP_HOME=/export/server/hadoop</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop hdfs配置文件路径</span></span><br><span class="line">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop YARN配置文件路径</span></span><br><span class="line">export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop YARN 日志文件夹</span></span><br><span class="line">export YARN_LOG_DIR=$HADOOP_HOME/logs/yarn</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop hdfs 日志文件夹</span></span><br><span class="line">export HADOOP_LOG_DIR=$HADOOP_HOME/logs/hdfs</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop的使用启动用户配置</span></span><br><span class="line">export HDFS_NAMENODE_USER=root</span><br><span class="line">export HDFS_DATANODE_USER=root</span><br><span class="line">export HDFS_SECONDARYNAMENODE_USER=root</span><br><span class="line">export YARN_RESOURCEMANAGER_USER=root</span><br><span class="line">export YARN_NODEMANAGER_USER=root</span><br><span class="line">export YARN_PROXYSERVER_USER=root</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件：<code>core-site.xml</code></p><p>如下，清空文件，填入如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://node1:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>io.file.buffer.size<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>131072<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置：<code>hdfs-site.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir.perm<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>700<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/nn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Path on the local filesystem where the NameNode stores the namespace and transactions logs persistently.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>node1,node2,node3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>List of permitted DataNodes.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.blocksize<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>268435456<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.handler.count<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>100<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/dn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置：<code>mapred-env.sh</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件的开头加入如下环境变量设置</span></span><br><span class="line">export JAVA_HOME=/export/server/jdk</span><br><span class="line">export HADOOP_JOB_HISTORYSERVER_HEAPSIZE=1000</span><br><span class="line">export HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA</span><br></pre></td></tr></table></figure></li><li><p>配置：<code>mapred-site.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>node1:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>node1:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.intermediate-done-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/mr-history/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.done-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/mr-history/done<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.app.mapreduce.am.env<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.map.env<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.reduce.env<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置：<code>yarn-env.sh</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件的开头加入如下环境变量设置</span></span><br><span class="line">export JAVA_HOME=/export/server/jdk</span><br><span class="line">export HADOOP_HOME=/export/server/hadoop</span><br><span class="line">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line">export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line">export YARN_LOG_DIR=$HADOOP_HOME/logs/yarn</span><br><span class="line">export HADOOP_LOG_DIR=$HADOOP_HOME/logs/hdfs</span><br></pre></td></tr></table></figure></li><li><p>配置：<code>yarn-site.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log.server.url<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>http://node1:19888/jobhistory/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.web-proxy.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>node1:8089<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>proxy server hostname and port<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Configuration to enable or disable log aggregation<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.remote-app-log-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Configuration to enable or disable log aggregation<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>node1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/nm-local<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Comma-separated list of paths on the local filesystem where intermediate data is written.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/nm-log<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Comma-separated list of paths on the local filesystem where logs are written.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log.retain-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>10800<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Default time (in seconds) to retain log files on the NodeManager Only applicable if log-aggregation is disabled.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Shuffle service that needs to be set for Map Reduce applications.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改workers文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">全部内容如下</span></span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure></li><li><p>分发hadoop到其它机器</p></li></ol>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在node1执行</span></span><br><span class="line">cd /export/server</span><br><span class="line"></span><br><span class="line">scp -r hadoop-3.3.0 node2:`pwd`/</span><br><span class="line">scp -r hadoop-3.3.0 node2:`pwd`/</span><br></pre></td></tr></table></figure><ol start="11"><li><p>在node2、node3执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建软链接</span></span><br><span class="line">ln -s /export/server/hadoop-3.3.0 /export/server/hadoop</span><br></pre></td></tr></table></figure></li><li><p>创建所需目录</p><ul><li><p>在node1执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/nn</span><br><span class="line">mkdir -p /data/dn</span><br><span class="line">mkdir -p /data/nm-log</span><br><span class="line">mkdir -p /data/nm-local</span><br></pre></td></tr></table></figure></li><li><p>在node2执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/dn</span><br><span class="line">mkdir -p /data/nm-log</span><br><span class="line">mkdir -p /data/nm-local</span><br></pre></td></tr></table></figure></li><li><p>在node3执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/dn</span><br><span class="line">mkdir -p /data/nm-log</span><br><span class="line">mkdir -p /data/nm-local</span><br></pre></td></tr></table></figure></li></ul></li><li><p>配置环境变量</p><p>在node1、node2、node3修改&#x2F;etc&#x2F;profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_HOME=/export/server/hadoop</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><p>执行<code>source /etc/profile</code>生效</p></li><li><p>格式化NameNode，在node1执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop namenode -format</span><br></pre></td></tr></table></figure><blockquote><p>hadoop这个命令来自于：$HADOOP_HOME&#x2F;bin中的程序</p><p>由于配置了环境变量PATH，所以可以在任意位置执行hadoop命令哦</p></blockquote></li><li><p>启动hadoop的hdfs集群，在node1执行即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止可以执行</span></span><br><span class="line">stop-dfs.sh</span><br></pre></td></tr></table></figure><blockquote><p>start-dfs.sh这个命令来自于：$HADOOP_HOME&#x2F;sbin中的程序</p><p>由于配置了环境变量PATH，所以可以在任意位置执行start-dfs.sh命令哦</p></blockquote></li><li><p>启动hadoop的yarn集群，在node1执行即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止可以执行</span></span><br><span class="line">stop-yarn.sh</span><br></pre></td></tr></table></figure></li><li><p>启动历史服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mapred --daemon start historyserver</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止将start更换为stop</span></span><br></pre></td></tr></table></figure></li><li><p>启动web代理服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn-daemon.sh start proxyserver</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止将start更换为stop</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="验证Hadoop集群运行情况"><a href="#验证Hadoop集群运行情况" class="headerlink" title="验证Hadoop集群运行情况"></a>验证Hadoop集群运行情况</h4><ol><li><p>在node1、node2、node3上通过jps验证进程是否都启动成功</p></li><li><p>验证HDFS，浏览器打开：<a href="http://node1:9870/">http://node1:9870</a></p><p>创建文件test.txt，随意填入内容，并执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -put test.txt /test.txt</span><br><span class="line"></span><br><span class="line">hadoop fs -cat /test.txt</span><br></pre></td></tr></table></figure></li><li><p>验证YARN，浏览器打开：<a href="http://node1:8088/">http://node1:8088</a></p><p>执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件words.txt，填入如下内容</span></span><br><span class="line">itheima itcast hadoop</span><br><span class="line">itheima hadoop hadoop</span><br><span class="line">itheima itcast</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将文件上传到HDFS中</span></span><br><span class="line">hadoop fs -put words.txt /words.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行如下命令验证YARN是否正常</span></span><br><span class="line">hadoop jar /export/server/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.0.jar wordcount -Dmapred.job.queue.name=root.root /words.txt /output</span><br></pre></td></tr></table></figure></li></ol><h1 id="大数据NoSQL数据库HBase集群部署"><a href="#大数据NoSQL数据库HBase集群部署" class="headerlink" title="大数据NoSQL数据库HBase集群部署"></a>大数据NoSQL数据库HBase集群部署</h1><h2 id="简介-10"><a href="#简介-10" class="headerlink" title="简介"></a>简介</h2><p>HBase 是一种<a href="https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020">分布式</a>、可扩展、支持海量数据存储的 NoSQL 数据库。</p><p>和Redis一样，HBase是一款KeyValue型存储的数据库。</p><p>不过和Redis设计方向不同</p><ul><li>Redis设计为少量数据，超快检索</li><li>HBase设计为海量数据，快速检索</li></ul><p>HBase在大数据领域应用十分广泛，现在我们来在node1、node2、node3上部署HBase集群。</p><h2 id="安装-12"><a href="#安装-12" class="headerlink" title="安装"></a>安装</h2><ol><li><p>HBase依赖Zookeeper、JDK、Hadoop（HDFS），请确保已经完成前面</p><ul><li>集群化软件前置准备（JDK）</li><li>Zookeeper</li><li>Hadoop</li><li>这些环节的软件安装</li></ul></li><li><p>【node1执行】下载HBase安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载</span></span><br><span class="line">wget http://archive.apache.org/dist/hbase/2.1.0/hbase-2.1.0-bin.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf hbase-2.1.0-bin.tar.gz -C /export/server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置软链接</span></span><br><span class="line">ln -s /export/server/hbase-2.1.0 /export/server/hbase</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】，修改配置文件，修改<code>conf/hbase-env.sh</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在28行配置JAVA_HOME</span></span><br><span class="line">export JAVA_HOME=/export/server/jdk</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在126行配置：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">意思表示，不使用HBase自带的Zookeeper，而是用独立Zookeeper</span></span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在任意行，比如26行，添加如下内容：</span></span><br><span class="line">export HBASE_DISABLE_HADOOP_CLASSPATH_LOOKUP=&quot;true&quot;</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】，修改配置文件，修改<code>conf/hbase-site.xml</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将文件的全部内容替换成如下内容：</span></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">        &lt;!-- HBase数据在HDFS中的存放的路径 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">            &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">            &lt;value&gt;hdfs://node1:8020/hbase&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- Hbase的运行模式。false是单机模式，true是分布式模式。若为false,Hbase和Zookeeper会运行在同一个JVM里面 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">            &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">            &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- ZooKeeper的地址 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">            &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">            &lt;value&gt;node1,node2,node3&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- ZooKeeper快照的存储位置 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">            &lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;</span><br><span class="line">            &lt;value&gt;/export/server/apache-zookeeper-3.6.0-bin/data&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!--  V2.1版本，在分布式情况下, 设置为false --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">            &lt;name&gt;hbase.unsafe.stream.capability.enforce&lt;/name&gt;</span><br><span class="line">            &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】，修改配置文件，修改<code>conf/regionservers</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">填入如下内容</span></span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】，分发hbase到其它机器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /export/server/hbase-2.1.0 node2:/export/server/</span><br><span class="line">scp -r /export/server/hbase-2.1.0 node3:/export/server/</span><br></pre></td></tr></table></figure></li><li><p>【node2、node3执行】，配置软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /export/server/hbase-2.1.0 /export/server/hbase</span><br></pre></td></tr></table></figure></li><li><p>【node1、node2、node3执行】，配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置在/etc/profile内，追加如下两行</span></span><br><span class="line">export HBASE_HOME=/export/server/hbase</span><br><span class="line">export PATH=$HBASE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】启动HBase</p><blockquote><p>请确保：Hadoop HDFS、Zookeeper是已经启动了的</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start-hbase.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止可使用</span></span><br><span class="line">stop-hbase.sh</span><br></pre></td></tr></table></figure><blockquote><p>由于我们配置了环境变量export PATH&#x3D;$PATH:$HBASE_HOME&#x2F;bin</p><p>start-hbase.sh即在$HBASE_HOME&#x2F;bin内，所以可以无论当前目录在哪，均可直接执行</p></blockquote></li><li><p>验证HBase</p><p>浏览器打开：<a href="http://node1:16010，即可看到HBase的WEB">http://node1:16010，即可看到HBase的WEB</a> UI页面</p></li><li><p>简单测试使用HBase</p><p>【node1执行】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hbase shell</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建表</span></span><br><span class="line">create &#x27;test&#x27;, &#x27;cf&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">插入数据</span></span><br><span class="line">put &#x27;test&#x27;, &#x27;rk001&#x27;, &#x27;cf:info&#x27;, &#x27;itheima&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询数据</span></span><br><span class="line">get &#x27;test&#x27;, &#x27;rk001&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">扫描表数据</span></span><br><span class="line">scan &#x27;test&#x27;</span><br></pre></td></tr></table></figure></li></ol><h1 id="分布式内存计算Spark环境部署"><a href="#分布式内存计算Spark环境部署" class="headerlink" title="分布式内存计算Spark环境部署"></a>分布式内存计算Spark环境部署</h1><h2 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h2><p>本小节的操作，基于：<code>大数据集群（Hadoop生态）安装部署</code>环节中所构建的Hadoop集群</p><p>如果没有Hadoop集群，请参阅前置内容，部署好环境。</p><h2 id="简介-11"><a href="#简介-11" class="headerlink" title="简介"></a>简介</h2><p>Spark是一款分布式内存计算引擎，可以支撑海量数据的分布式计算。</p><p>Spark在大数据体系是明星产品，作为最新一代的综合计算引擎，支持离线计算和实时计算。</p><p>在大数据领域广泛应用，是目前世界上使用最多的大数据分布式计算引擎。</p><p>我们将基于前面构建的Hadoop集群，部署Spark Standalone集群。</p><h2 id="安装-13"><a href="#安装-13" class="headerlink" title="安装"></a>安装</h2><ol><li><p>【node1执行】下载并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf spark-2.4.5-bin-hadoop2.7.tgz -C /export/server/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">软链接</span></span><br><span class="line">ln -s /export/server/spark-2.4.5-bin-hadoop2.7 /export/server/spark</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】修改配置文件名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改名</span></span><br><span class="line">cd /export/server/spark/conf</span><br><span class="line">mv spark-env.sh.template spark-env.sh</span><br><span class="line">mv slaves.template slaves</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】修改配置文件，<code>spark-env.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置JAVA安装目录</span></span></span><br><span class="line">JAVA_HOME=/export/server/jdk</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># HADOOP软件配置文件目录，读取HDFS上文件和运行YARN集群</span></span></span><br><span class="line">HADOOP_CONF_DIR=/export/server/hadoop/etc/hadoop</span><br><span class="line">YARN_CONF_DIR=/export/server/hadoop/etc/hadoop</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 指定spark老大Master的IP和提交任务的通信端口</span></span></span><br><span class="line">export SPARK_MASTER_HOST=node1</span><br><span class="line">export SPARK_MASTER_PORT=7077</span><br><span class="line"></span><br><span class="line">SPARK_MASTER_WEBUI_PORT=8080</span><br><span class="line">SPARK_WORKER_CORES=1</span><br><span class="line">SPARK_WORKER_MEMORY=1g</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】修改配置文件，<code>slaves</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】分发</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r spark-2.4.5-bin-hadoop2.7 node2:$PWD</span><br><span class="line">scp -r spark-2.4.5-bin-hadoop2.7 node3:$PWD</span><br></pre></td></tr></table></figure></li><li><p>【node2、node3执行】设置软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /export/server/spark-2.4.5-bin-hadoop2.7 /export/server/spark</span><br></pre></td></tr></table></figure></li><li><p>【node1执行】启动Spark集群</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/export/server/spark/sbin/start-all.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如需停止，可以</span></span><br><span class="line">/export/server/spark/sbin/stop-all.sh</span><br></pre></td></tr></table></figure></li><li><p>打开Spark监控页面，浏览器打开：<a href="http://node1:8081/">http://node1:8081</a></p></li><li><p>【node1执行】提交测试任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/server/spark/bin/spark-submit --master spark://node1:7077 --class org.apache.spark.examples.SparkPi /export/server/spark/examples/jars/spark-examples_2.11-2.4.5.jar</span><br></pre></td></tr></table></figure></li></ol><h1 id="分布式内存计算Flink环境部署"><a href="#分布式内存计算Flink环境部署" class="headerlink" title="分布式内存计算Flink环境部署"></a>分布式内存计算Flink环境部署</h1><h2 id="注意-3"><a href="#注意-3" class="headerlink" title="注意"></a>注意</h2><p>本小节的操作，基于：<code>大数据集群（Hadoop生态）安装部署</code>环节中所构建的Hadoop集群</p><p>如果没有Hadoop集群，请参阅前置内容，部署好环境。</p><h2 id="简介-12"><a href="#简介-12" class="headerlink" title="简介"></a>简介</h2><p>Flink同Spark一样，是一款分布式内存计算引擎，可以支撑海量数据的分布式计算。</p><p>Flink在大数据体系同样是明星产品，作为最新一代的综合计算引擎，支持离线计算和实时计算。</p><p>在大数据领域广泛应用，是目前世界上除去Spark以外，应用最为广泛的分布式计算引擎。</p><p>我们将基于前面构建的Hadoop集群，部署Flink Standalone集群</p><p>Spark更加偏向于离线计算而Flink更加偏向于实时计算。</p><h2 id="安装-14"><a href="#安装-14" class="headerlink" title="安装"></a>安装</h2><ol><li><p>【node1操作】下载安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/flink/flink-1.10.0/flink-1.10.0-bin-scala_2.11.tgz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf flink-1.10.0-bin-scala_2.11.tgz -C /export/server/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">软链接</span></span><br><span class="line">ln -s /export/server/flink-1.10.0 /export/server/flink</span><br></pre></td></tr></table></figure></li><li><p>【node1操作】修改配置文件，<code>conf/flink-conf.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jobManager 的IP地址</span></span><br><span class="line"><span class="attr">jobmanager.rpc.address:</span> <span class="string">node1</span></span><br><span class="line"><span class="comment"># JobManager 的端口号</span></span><br><span class="line"><span class="attr">jobmanager.rpc.port:</span> <span class="number">6123</span></span><br><span class="line"><span class="comment"># JobManager JVM heap 内存大小</span></span><br><span class="line"><span class="attr">jobmanager.heap.size:</span> <span class="string">1024m</span></span><br><span class="line"><span class="comment"># TaskManager JVM heap 内存大小</span></span><br><span class="line"><span class="attr">taskmanager.heap.size:</span> <span class="string">1024m</span></span><br><span class="line"><span class="comment"># 每个 TaskManager 提供的任务 slots 数量大小</span></span><br><span class="line"><span class="attr">taskmanager.numberOfTaskSlots:</span> <span class="number">2</span></span><br><span class="line"><span class="comment">#是否进行预分配内存，默认不进行预分配，这样在我们不使用flink集群时候不会占用集群资源</span></span><br><span class="line"><span class="attr">taskmanager.memory.preallocate:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 程序默认并行计算的个数</span></span><br><span class="line"><span class="attr">parallelism.default:</span> <span class="number">1</span></span><br><span class="line"><span class="comment">#JobManager的Web界面的端口（默认：8081）</span></span><br><span class="line"><span class="attr">jobmanager.web.port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure></li><li><p>【node1操作】，修改配置文件，<code>conf/slaves</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure></li><li><p>【node1操作】分发Flink安装包到其它机器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server</span><br><span class="line">scp -r flink-1.10.0 node2:`pwd`/</span><br><span class="line">scp -r flink-1.10.0 node3:`pwd`/</span><br></pre></td></tr></table></figure></li><li><p>【node2、node3操作】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置软链接</span></span><br><span class="line">ln -s /export/server/flink-1.10.0 /export/server/flink</span><br></pre></td></tr></table></figure></li><li><p>【node1操作】，启动Flink</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/server/flink/bin/start-cluster.sh</span><br></pre></td></tr></table></figure></li><li><p>验证Flink启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">浏览器打开</span></span><br><span class="line">http://node1:8081</span><br></pre></td></tr></table></figure></li><li><p>提交测试任务</p><p>【node1执行】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/server/flink/bin/flink run /export/server/flink-1.10.0/examples/batch/WordCount.jar</span><br></pre></td></tr></table></figure></li></ol><h1 id="运维监控Zabbix部署"><a href="#运维监控Zabbix部署" class="headerlink" title="运维监控Zabbix部署"></a>运维监控Zabbix部署</h1><h2 id="简介-13"><a href="#简介-13" class="headerlink" title="简介"></a>简介</h2><p>Zabbix 由 Alexei Vladishev 创建，目前由其成立的公司—— Zabbix SIA 积极的持续开发更新维护， 并为用户提供技术支持服务。</p><p>Zabbix 是一个&#x3D;&#x3D;企业级分布式开源监控解决方案&#x3D;&#x3D;。</p><p>Zabbix 软件能够&#x3D;&#x3D;监控&#x3D;&#x3D;众多网络参数和服务器的&#x3D;&#x3D;健康度、完整性&#x3D;&#x3D;。Zabbix 使用灵活的告警机制，允许用户为几乎任何事件配置基于邮件的告警。这样用户可以快速响应服务器问题。Zabbix 基于存储的数据提供出色的报表和数据可视化功能。这些功能使得 Zabbix 成为容量规划的理想选择。</p><h2 id="安装-15"><a href="#安装-15" class="headerlink" title="安装"></a>安装</h2><blockquote><p> 安装整体步骤:</p></blockquote><ol><li>准备Linux 服务器(虚拟机)</li><li>安装Mysql</li><li>安装zabbix( 包含 server  agent  web)</li><li>配置 mysql, 为zabbix创建表结构</li><li>配置zabbix server</li><li>启动并开启开机自启动</li></ol><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175324.png" alt="1574338996145"></p><h3 id="安装前准备-Mysql"><a href="#安装前准备-Mysql" class="headerlink" title="安装前准备 - Mysql"></a>安装前准备 - Mysql</h3><p>安装ZabbixServer需要先安装好<code>Mysql</code>数据库</p><p>课程使用<code>Mysql 5.7</code></p><p>安装步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Mysql yum库</span></span><br><span class="line">rpm -Uvh http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum安装Mysql</span></span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动Mysql设置开机启动</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查Mysql服务状态</span></span><br><span class="line">systemctl status mysqld</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第一次启动mysql，会在日志文件中生成root用户的一个随机密码，使用下面命令查看该密码</span></span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改root用户密码</span></span><br><span class="line">mysql -u root -p -h localhost</span><br><span class="line">Enter password:</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Root!@#$&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果你想设置简单密码，需要降低Mysql的密码安全级别</span></span><br><span class="line">set global validate_password_policy=LOW; # 密码安全级别低</span><br><span class="line">set global validate_password_length=4; # 密码长度最低4位即可</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后就可以用简单密码了（课程中使用简单密码，为了方便，生产中不要这样）</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;root&#x27;</span>;</span></span><br></pre></td></tr></table></figure><h3 id="安装Zabbix-Server-和-Zabbix-Agent"><a href="#安装Zabbix-Server-和-Zabbix-Agent" class="headerlink" title="安装Zabbix Server 和 Zabbix Agent"></a>安装Zabbix Server 和 Zabbix Agent</h3><blockquote><p>初始安装，我们先安装ZabbixServer以及在Server本机安装Agent。</p></blockquote><p>打开官网下载页面：<a href="https://www.zabbix.com/download?zabbix=4.0&os_distribution=centos&os_version=7&db=mysql">https://www.zabbix.com/download?zabbix=4.0&amp;os_distribution=centos&amp;os_version=7&amp;db=mysql</a></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175330.png" alt="1571981197131"></p><p>选择对应的版本，然后再下面官网给出了具体的安装命令，使用<code>rpm</code>和<code>yum</code>来进行安装。</p><p>需要有网络。</p><p><code>以下内容来自官方页面</code></p><h4 id="a-安装Zabbix-yum库"><a href="#a-安装Zabbix-yum库" class="headerlink" title="a. 安装Zabbix yum库"></a>a. 安装Zabbix yum库</h4><p><a href="https://www.zabbix.com/documentation/4.0/manual/installation/install_from_packages">documentation</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-2.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h4 id="b-安装Zabbix-Server、前端、Agent"><a href="#b-安装Zabbix-Server、前端、Agent" class="headerlink" title="b. 安装Zabbix Server、前端、Agent"></a>b. 安装Zabbix Server、前端、Agent</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果只需要安装Agent的话</span></span><br><span class="line">yum -y install zabbix-agent</span><br></pre></td></tr></table></figure><h4 id="c-初始化Mysql数据库"><a href="#c-初始化Mysql数据库" class="headerlink" title="c. 初始化Mysql数据库"></a>c. 初始化Mysql数据库</h4><p><a href="https://www.zabbix.com/documentation/4.0/manual/appendix/install/db_scripts">documentation</a></p><blockquote><p>在Mysql中操作</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录Mysql 数据库</span></span><br><span class="line">mysql -uroot -pYourPassword</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on zabbix.* to zabbix@localhost identified by <span class="string">&#x27;zabbix&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者: grant all privileges on zabbix.* to zabbix@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;zabbix&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">quit;</span></span><br></pre></td></tr></table></figure><p>测试在Zabbix Server服务器上能否远程登录Mysql，如果可以登录继续向下走。</p><p>Import initial schema and data. You will be prompted to enter your newly created password.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span></span><br></pre></td></tr></table></figure><h4 id="d-为Zabbix-Server配置数据库"><a href="#d-为Zabbix-Server配置数据库" class="headerlink" title="d. 为Zabbix Server配置数据库"></a>d. 为Zabbix Server配置数据库</h4><p>Edit file &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DBPassword=password</span><br><span class="line">DBHost=mysql-host-ip-or-hostname</span><br></pre></td></tr></table></figure><h4 id="e-配置Zabbix的PHP前端"><a href="#e-配置Zabbix的PHP前端" class="headerlink" title="e. 配置Zabbix的PHP前端"></a>e. 配置Zabbix的PHP前端</h4><p>Edit file <code>/etc/httpd/conf.d/zabbix.conf</code>, uncomment and set the right timezone for you.<code># php_value date.timezone Asia/Shanghai</code></p><p>Start Zabbix server and agent processes and make it start at system boot:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd # 启动、重启</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd  # 开机自启</span><br></pre></td></tr></table></figure><p>Now your Zabbix server is up and running!</p><h3 id="配置zabbix-前端（WEB-UI）"><a href="#配置zabbix-前端（WEB-UI）" class="headerlink" title="配置zabbix 前端（WEB UI）"></a>配置zabbix 前端（WEB UI）</h3><p><strong>打开:<code>http://192.168.88.131/zabbix</code></strong></p><p>即可进入Zabbix页面，在首次打开的时候，会进入设置页面，如图：</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175338.png" alt="1571993951841"></p><p><strong>点击下一步，会检查相应的设置是否都正常</strong></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175341.png" alt="1571994018126"></p><p>如果一切正常，点击下一步。</p><p><strong>配置DB连接</strong></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175344.png" alt="1571994069689"></p><p>按具体情况填写即可</p><p><strong>配置Server细节</strong></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175347.png" alt="1571994111921"></p><p>具体配置即可，Name表示这个Zabbix服务的名字，这里起名叫<code>ITHEIMA-TEST</code></p><p><strong>安装前总结预览</strong></p><p>检查确认没有问题就下一步</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175349.png" alt="1571994206902"></p><p><strong>配置完成</strong></p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175351.png" alt="1571994221531"></p><p><strong>初始管理员账户Admin密码zabbix</strong></p><p>输入账户密码后，就能进入zabbix页面了。</p><p>如下图：</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175354.png" alt="1571994287036"></p><p>现在是一个崭新的zabbix等待我们去探索。</p><h1 id="运维监控Grafana部署"><a href="#运维监控Grafana部署" class="headerlink" title="运维监控Grafana部署"></a>运维监控Grafana部署</h1><h2 id="简介-14"><a href="#简介-14" class="headerlink" title="简介"></a>简介</h2><h2 id="安装-16"><a href="#安装-16" class="headerlink" title="安装"></a>安装</h2><h3 id="部署形式"><a href="#部署形式" class="headerlink" title="部署形式"></a>部署形式</h3><p><code>Grafana</code>支持两种部署形式</p><ol><li>自行部署, 可以部署在操作系统之上. 自行提供服务器, 域名等.</li><li><code>Grafana</code>官方托管. 无需安装, 在线注册即可得到一个专属于自己的<code>Grafana</code>, 但是要花钱的. 是一种<code>SaaS</code>服务</li></ol><p>我们课程选择方式1</p><h3 id="安装-17"><a href="#安装-17" class="headerlink" title="安装"></a>安装</h3><p><code>Grafana</code>支持常见的绝大多数操作系统, 如<code>windows</code> <code>mac</code> <code>linux</code> 同时也支持部署在<code>docker</code>中.</p><p>大多数情况下, <code>Grafana</code>都是部署在<code>linux</code>服务器之上. 所以本课程也是基于<code>Linux</code>系统来讲解.</p><p>对<code>windows</code> <code>mac</code>系统 或 <code>docker</code>部署有兴趣的同学, 请参考:  <a href="https://grafana.com/grafana/download">https://grafana.com/grafana/download</a></p><p>我们部署<code>Grafana</code>可以使用<code>YUM</code>来进行部署.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个文件</span></span><br><span class="line">vim /etc/yum.repos.d/grafana.repo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将下面的内容复制进去</span></span><br><span class="line">[grafana]</span><br><span class="line">name=grafana</span><br><span class="line">baseurl=https://packages.grafana.com/oss/rpm</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.grafana.com/gpg.key</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后安装</span></span><br><span class="line">yum install grafana</span><br></pre></td></tr></table></figure><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><p><code>grafana-server</code>具有许多配置选项，这些选项可以在<code>.ini</code>配置文件中指定，也可以使用环境变量指定。</p><blockquote><p> <strong>Note.</strong> <code>Grafana </code> needs to be restarted for any configuration changes to take effect. </p></blockquote><h4 id="配置文件注释"><a href="#配置文件注释" class="headerlink" title="配置文件注释"></a>配置文件注释</h4><p><code>;</code>符号在<code>.ini</code>文件中全局表示注释 ()</p><h4 id="配置文件路径"><a href="#配置文件路径" class="headerlink" title="配置文件路径"></a>配置文件路径</h4><p>如果是自己解压安装, 或者自行编译的方式安装, 配置文件在:</p><ul><li>默认: <code>$WORKING_DIR/conf/defaults.ini</code></li><li>自定义:<code>$WORKING_DIR/conf/custom.ini</code></li><li>自定义配置文件路径可以被参数<code>--config</code>覆盖</li></ul><blockquote><p>对于<code>YUM</code> <code>RPM</code> 安装的方式, 配置文件在: <code>/etc/grafana/grafana.ini</code></p></blockquote><h4 id="使用环境变量"><a href="#使用环境变量" class="headerlink" title="使用环境变量"></a>使用环境变量</h4><p>可以使用以下语法使用环境变量来覆盖配置文件中的所有选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GF_&lt;SectionName&gt;_&lt;KeyName&gt;</span><br></pre></td></tr></table></figure><p>其中<code>SectionName</code>是方括号内的文本。一切都应为大写，<code>.</code>应替换为<code>_</code> 例如，给定以下配置设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default section</span></span><br><span class="line">instance_name = <span class="variable">$&#123;HOSTNAME&#125;</span></span><br><span class="line"></span><br><span class="line">[security]</span><br><span class="line">admin_user = admin</span><br><span class="line"></span><br><span class="line">[auth.google]</span><br><span class="line">client_secret = 0ldS3cretKey</span><br></pre></td></tr></table></figure><p>Then you can override them using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GF_DEFAULT_INSTANCE_NAME=my-instance</span><br><span class="line"><span class="built_in">export</span> GF_SECURITY_ADMIN_USER=<span class="literal">true</span><span class="comment"># GF_ 固定 SECURITY 是SectionName ADMIN_USER 是配置的key 转大写 . 转 _</span></span><br><span class="line"><span class="built_in">export</span> GF_AUTH_GOOGLE_CLIENT_SECRET=newS3cretKey</span><br></pre></td></tr></table></figure><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><p><code>Grafana</code>支持使用<code>Sqlite3</code> <code>Postgresql</code> <code>Mysql</code>这三种数据库作为其<code>元数据</code>的存储.</p><p>我们课程使用<code>Mysql</code>. 和<code>zabbix</code>的元数据mysql共用一个实例</p><p>只需要配置如下内容即可:</p><p><img src="/2024/07/07/Linux/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/20221026175713.png" alt="1573635500521"></p><p>并登陆mysql, 执行:</p><p><code>create database grafana CHARACTER SET utf8 COLLATE utf8_general_ci;</code></p><p>创建<code>Grafana</code>使用的数据库作为元数据存储.</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start grafana-server</span><br><span class="line">systemctl <span class="built_in">enable</span> grafana-server</span><br></pre></td></tr></table></figure><p>浏览器打开：<a href="http://node1:3000/">http://node1:3000</a></p><p>默认账户密码：admin&#x2F;admin</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2024/07/07/Java/Java/"/>
      <url>/2024/07/07/Java/Java/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h2 id="0、-人机交互"><a href="#0、-人机交互" class="headerlink" title="0、 人机交互"></a>0、 人机交互</h2><h3 id="0-1-什么是cmd？"><a href="#0-1-什么是cmd？" class="headerlink" title="0.1 什么是cmd？"></a>0.1 什么是cmd？</h3><p>就是在windows操作系统中，利用命令行的方式去操作计算机。</p><p>我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。</p><h3 id="0-2-如何打开CMD窗口？"><a href="#0-2-如何打开CMD窗口？" class="headerlink" title="0.2 如何打开CMD窗口？"></a>0.2 如何打开CMD窗口？</h3><ol><li><p>按下快捷键：win + R。</p><pre><code>此时会出现运行窗口。</code></pre></li><li><p>在运行窗口中输出cmd</p></li><li><p>输出回车。</p></li></ol><p>解惑：</p><p>​cmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）</p><p> <img src="/2024/07/07/Java/Java/cmd.png" alt="image-20210923091350952"></p><h3 id="0-3-常用CMD命令"><a href="#0-3-常用CMD命令" class="headerlink" title="0.3 常用CMD命令"></a>0.3 常用CMD命令</h3><p> 扩展一个小点：</p><p>​在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。</p><p>​而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。</p><p>常见的CMD命令如下：</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称:</td><td>盘符切换。E:回车，表示切换到E盘。</td></tr><tr><td>dir</td><td>查看当前路径下的内容。</td></tr><tr><td>cd 目录</td><td>进入单级目录。cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录。</td></tr><tr><td>cd 目录1\目录2...</td><td>进入多级目录。cd itheima\JavaSE</td></tr><tr><td>cd \</td><td>回退到盘符目录。</td></tr><tr><td>cls</td><td>清屏。</td></tr><tr><td>exit</td><td>退出命令提示符窗口。</td></tr></tbody></table><h3 id="0-4-CMD练习"><a href="#0-4-CMD练习" class="headerlink" title="0.4 CMD练习"></a>0.4 CMD练习</h3><p>需求：</p><p>  利用cmd命令打开自己电脑上的QQ。</p><p>完成步骤：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,确定自己电脑上的QQ安装在哪里</span><br><span class="line"><span class="number">2</span>,启动cmd</span><br><span class="line"><span class="number">3</span>,进入到启动程序QQ.exe所在的路径。</span><br><span class="line"><span class="number">4</span>,输出qq.exe加回车表示启动qq。</span><br><span class="line">    </span><br><span class="line">C:\Users\Lenovo&gt;D:</span><br><span class="line"></span><br><span class="line">D:\&gt;cd Software\QQ\bin</span><br><span class="line"></span><br><span class="line">D:\Software\QQ\Bin&gt;QQScLauncher.exe</span><br><span class="line"></span><br><span class="line">D:\Software\QQ\Bin&gt;</span><br></pre></td></tr></table></figure><p>解惑：</p><p>​在windows操作系统当中，文件名或者文件夹名是忽略大小写的。</p><h3 id="0-5-写一个java文件"><a href="#0-5-写一个java文件" class="headerlink" title="0.5 写一个java文件"></a>0.5 写一个java文件</h3><p>1.创建一个Java Project</p><p><img src="/2024/07/07/Java/Java/image-20220807170922740.png" alt="image-20220807170922740"> </p><p>2.起一个名字，点击finish</p><p><img src="/2024/07/07/Java/Java/image-20220807171033349.png" alt="image-20220807171033349"> </p><p>3.在src文件夹下，建一个包</p><p><img src="/2024/07/07/Java/Java/image-20220807171327956.png" alt="image-20220807171327956"> </p><p>4.在这个包中，新建文件class，首字母最好大写</p><p><img src="/2024/07/07/Java/Java/image-20220807171414933.png" alt="image-20220807171414933"> </p><p><img src="/2024/07/07/Java/Java/image-20220807171539338.png" alt="image-20220807171539338"> </p><h3 id="0-6-快捷键"><a href="#0-6-快捷键" class="headerlink" title="0.6 快捷键"></a>0.6 快捷键</h3><p>Alt+&#x2F;可以显示没写完的代码，补全代码</p><h3 id="0-7-常用语句"><a href="#0-7-常用语句" class="headerlink" title="0.7 常用语句"></a>0.7 常用语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);<span class="comment">//读输入</span></span><br><span class="line">System.out.println(in.nextLine());<span class="comment">//打印输入的一行</span></span><br><span class="line">price = in.nextInt();<span class="comment">//读整数</span></span><br><span class="line">in.next();<span class="comment">//读入一个单词，单词的标志是空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开方</span></span><br><span class="line">Math.sqrt(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">//Character类</span></span><br><span class="line">    Character.isDigit(<span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Java/Java/image-20220808164531702.png" alt="image-20220808164531702"></p><h3 id="0-8-教程"><a href="#0-8-教程" class="headerlink" title="0.8 教程"></a>0.8 教程</h3><p><a href="https://blog.csdn.net/weixin_50455331/article/details/126324741">eclipse下载与安装（汉化教程）超详细_麟星爵的博客-CSDN博客_eclipse下载</a></p><p><a href="https://blog.csdn.net/lxt_Lucia/article/details/105439952">eclipse 史上最舒服(且护眼) 字体+大小+配色 教程（强推！！）_lxt_Lucia的博客-CSDN博客_eclipse哪个字体看着舒服</a></p><p><a href="https://blog.csdn.net/weixin_42753193/article/details/122425501">阿里巴巴Java开发文档2020版学习-代码格式_嘟嘟的程序员铲屎官的博客-CSDN博客_阿里巴巴开发文档</a></p><h3 id="0-8-IDEA"><a href="#0-8-IDEA" class="headerlink" title="0.8 IDEA"></a>0.8 IDEA</h3><h4 id="8-1-IDEA概述"><a href="#8-1-IDEA概述" class="headerlink" title="8.1 IDEA概述"></a>8.1 IDEA概述</h4><p>​IDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p><p><strong>集成环境：</strong></p><p>​把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p><h4 id="8-2-IDEA的下载和安装"><a href="#8-2-IDEA的下载和安装" class="headerlink" title="8.2 IDEA的下载和安装"></a>8.2 IDEA的下载和安装</h4><h5 id="8-2-1-下载"><a href="#8-2-1-下载" class="headerlink" title="8.2.1 下载"></a>8.2.1 下载</h5><p>​可以到官方网站自行下载，网址为：<a href="https://www.jetbrains.com/idea">https://www.jetbrains.com/idea</a></p><p>​今天的资料中，对应的安装包也提高给大家了。</p><h5 id="8-2-2-安装"><a href="#8-2-2-安装" class="headerlink" title="8.2.2 安装"></a>8.2.2 安装</h5><ul><li>到资料文件夹中，双击安装包。</li><li>点击next，准备安装</li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%851.png" alt="计算机发展"></p><ul><li><p>点击Browse修改安装路径。</p><p>修改完毕点击next</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%852.png" alt="计算机发展"></p><ul><li><p>勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。</p><p>其他的不要勾选。</p><p>点击next。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%854.png" alt="计算机发展"></p><ul><li>点击Install，准备安装。</li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%855.png" alt="计算机发展"></p><ul><li><p>等进度条读取完毕之后，会有最终界面提示。</p><p>点击finish即可。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%856.png" alt="计算机发展"></p><ul><li><p>第一次启动会询问，是否导入一些设置。</p><p>选择第二个不导入，保持默认设置，再点击OK。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%857.png" alt="计算机发展"></p><ul><li><p>选择背景主题</p><p>左边是黑色背景。右边是白色背景。</p><p>这个可以根据自己的喜好来选择。</p><p>选择完毕点击右下角的next</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/idea%E5%AE%89%E8%A3%858.png" alt="计算机发展"></p><ul><li><p>在本界面让我们购买idea。</p><p>因为我们是学习阶段，所以可以使用免费使用30天。</p><p>点击第一排第二个。Evaluate for free</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%859.png" alt="计算机发展"></p><ul><li>点击蓝色的Evaluate，就可以开始免费试用30天了。</li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%8510.png" alt="计算机发展"></p><ul><li><p>当看到这个界面，就表示idea已经成功安装完毕</p><p>可以点击右上角关闭。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea%E5%AE%89%E8%A3%8511.png" alt="计算机发展"></p><h4 id="8-3-IDEA中层级结构介绍"><a href="#8-3-IDEA中层级结构介绍" class="headerlink" title="8.3 IDEA中层级结构介绍"></a>8.3 IDEA中层级结构介绍</h4><h5 id="8-3-1-结构分类"><a href="#8-3-1-结构分类" class="headerlink" title="8.3.1 结构分类"></a>8.3.1 结构分类</h5><ul><li>project（项目、工程）</li><li>module（模块）</li><li>package（包）</li><li>class（类）</li></ul><h5 id="8-3-2-结构介绍"><a href="#8-3-2-结构介绍" class="headerlink" title="8.3.2 结构介绍"></a>8.3.2 结构介绍</h5><p>​为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p><h6 id="project（项目、工程）"><a href="#project（项目、工程）" class="headerlink" title="project（项目、工程）"></a>project（项目、工程）</h6><p>​淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p><h6 id="module（模块）"><a href="#module（模块）" class="headerlink" title="module（模块）"></a>module（模块）</h6><p>​在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：</p><ul><li>论坛模块</li><li>报名、咨询模块</li></ul><p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p><h6 id="package（包）"><a href="#package（包）" class="headerlink" title="package（包）"></a>package（包）</h6><p>​一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。</p><ul><li>发帖</li><li>评论</li></ul><p>为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p><h6 id="class（类）"><a href="#class（类）" class="headerlink" title="class（类）"></a>class（类）</h6><p>​就是真正写代码的地方。</p><h5 id="8-3-3-小结"><a href="#8-3-3-小结" class="headerlink" title="8.3.3 小结"></a>8.3.3 小结</h5><ul><li><p>层级关系</p><p>​project - module - package - class</p></li><li><p>包含数量</p><p>​project中可以创建多个module<br>​module中可以创建多个package<br>​package中可以创建多个class</p><p>​这些结构的划分，是为了方便管理类文件的。</p></li></ul><h4 id="8-4-IDEA中的第一个代码"><a href="#8-4-IDEA中的第一个代码" class="headerlink" title="8.4 IDEA中的第一个代码"></a>8.4 IDEA中的第一个代码</h4><h5 id="8-4-1-操作步骤"><a href="#8-4-1-操作步骤" class="headerlink" title="8.4.1 操作步骤"></a>8.4.1 操作步骤</h5><ul><li>创建Project 项目</li><li>创建Module 模块</li><li>创建class   类</li><li>在类中编写代码</li><li>完成编译运行</li></ul><h5 id="8-4-2-分步图解"><a href="#8-4-2-分步图解" class="headerlink" title="8.4.2 分步图解"></a>8.4.2 分步图解</h5><ul><li><p>双击启动图标</p><p><img src="/2024/07/07/Java/Java/idea%E4%BD%BF%E7%94%A81.png" alt="计算机发展"></p></li><li><p>首先要新建一个项目</p><p>点击creat new project</p><p><img src="/2024/07/07/Java/Java/idea1.png" alt="计算机发展"></p></li><li><p>我们要从0开始写代码，所以新建一个空的什么都没有的项目。</p><p>点击左下方的Empty Project</p><p>再点击右下角的next</p></li></ul><p><img src="/2024/07/07/Java/Java/idea2.png" alt="计算机发展"></p><ul><li><p>输入项目的名称</p><p>输入项目的存放路径</p></li></ul><p><img src="/2024/07/07/Java/Java/idea3.png" alt="计算机发展"></p><ul><li>点击ok。idea会帮助我们在本地创建一个项目文件夹</li></ul><p><img src="/2024/07/07/Java/Java/idea4.png" alt="计算机发展"></p><ul><li>点击Module，准备新建一个模块</li></ul><p><img src="/2024/07/07/Java/Java/idea5.png" alt="计算机发展"></p><ul><li><p>点击+</p><p>再点击New Module</p></li></ul><p><img src="/2024/07/07/Java/Java/idea6.png" alt="计算机发展"></p><ul><li><p>我们要编写Java代码，所以要新建一个Java模块。</p><p>点击Java</p><p>再点击右下角的next</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/idea7.png" alt="计算机发展"></p><ul><li><p>输入模块的名称</p><p>再点击右下角的Next</p></li></ul><p><img src="/2024/07/07/Java/Java/idea8.png" alt="计算机发展"></p><ul><li><p>成功新建一个模块之后，中间就会出现刚刚新建的模块</p><p>点击右下角的OK</p></li></ul><p><img src="/2024/07/07/Java/Java/idea9.png" alt="计算机发展"></p><ul><li><p>回到主界面</p><p>展开刚刚新建的模块</p><p>右键点击src，选择New，选择Java Class</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/idea10.png" alt="计算机发展"></p><ul><li><p>输入类名</p><p>再按回车</p></li></ul><p><img src="/2024/07/07/Java/Java/idea11.png" alt="计算机发展"></p><ul><li><p>由于字体比较小</p><p>所以，我们要设置一下字体。</p><p>点击File，选择Setting。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea12.png" alt="计算机发展"></p><ul><li><p>搜索一下font</p><p>在右边可以输入Size的数值来调节代码字体的大小。</p><p>设置完毕后点击右下角的OK</p></li></ul><p><img src="/2024/07/07/Java/Java/idea13.png" alt="计算机发展"></p><ul><li>编写代码</li></ul><p><img src="/2024/07/07/Java/Java/idea14.png" alt="计算机发展"></p><ul><li><p>运行代码</p><p>右键空白处，点击Run</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/idea15.png" alt="计算机发展"></p><ul><li><p>最下面会弹出控制台。</p><p>所有输出语句中的内容，都会在控制台上展示。</p></li></ul><p><img src="/2024/07/07/Java/Java/idea16.png" alt="计算机发展"></p><h4 id="8-5-IDEA中类的相关操作"><a href="#8-5-IDEA中类的相关操作" class="headerlink" title="8.5 IDEA中类的相关操作"></a>8.5 IDEA中类的相关操作</h4><h5 id="8-5-1-类的相关操作"><a href="#8-5-1-类的相关操作" class="headerlink" title="8.5.1 类的相关操作"></a>8.5.1 类的相关操作</h5><ul><li>新建类文件</li><li>删除类文件</li><li>修改类文件</li></ul><h5 id="8-5-2-新建类文件"><a href="#8-5-2-新建类文件" class="headerlink" title="8.5.2 新建类文件"></a>8.5.2 新建类文件</h5><ul><li><p>所有的Java代码都会写在src文件夹当中。</p><p>所以，右键点击src，选择new，点击Java Class</p><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E7%B1%BB1.png" alt="计算机发展"></p></li><li><p>输入类名，再按回车</p><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E7%B1%BB2.png" alt="计算机发展"></p></li><li><p>新建完毕</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E7%B1%BB3.png" alt="计算机发展"></p><h5 id="8-5-3-修改类名"><a href="#8-5-3-修改类名" class="headerlink" title="8.5.3 修改类名"></a>8.5.3 修改类名</h5><ul><li><p>右键点击想要修改的文件</p><p>点击Refactor</p><p>再点击Rename</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D1.png" alt="计算机发展"></p><ul><li><p>输入想要修改的名字</p><p>输入完毕点击下面的Refactor</p></li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D2.png" alt="计算机发展"></p><ul><li><p>文件名和类名均已修改成功</p><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D3.png" alt="计算机发展"></p></li></ul><h5 id="8-5-4-删除类文件"><a href="#8-5-4-删除类文件" class="headerlink" title="8.5.4 删除类文件"></a>8.5.4 删除类文件</h5><ul><li><p>想要删除哪个文件，就右键点击该文件</p><p>选择Delete即可</p></li></ul><p><img src="/2024/07/07/Java/Java/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B61.png" alt="计算机发展"></p><ul><li>在弹出的界面中点击OK，确定删除</li></ul><p><img src="/2024/07/07/Java/Java/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B62.png" alt="计算机发展"></p><blockquote><p>小贴士：</p><p>此时删除是不走回收站的，直接从硬盘中删掉了。</p></blockquote><h4 id="8-6-IDEA中模块的相关操作"><a href="#8-6-IDEA中模块的相关操作" class="headerlink" title="8.6 IDEA中模块的相关操作"></a>8.6 IDEA中模块的相关操作</h4><h5 id="8-6-1-模块的相关操作"><a href="#8-6-1-模块的相关操作" class="headerlink" title="8.6.1 模块的相关操作"></a>8.6.1 模块的相关操作</h5><ul><li>新建模块</li><li>删除模块</li><li>修改模块</li><li>导入模块</li></ul><h5 id="8-6-2-新建模块"><a href="#8-6-2-新建模块" class="headerlink" title="8.6.2 新建模块"></a>8.6.2 新建模块</h5><ul><li><h5 id="点击File，选择Project-Structure"><a href="#点击File，选择Project-Structure" class="headerlink" title="点击File，选择Project Structure"></a>点击File，选择Project Structure</h5></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%971.png" alt="计算机发展"></p><ul><li>选择Module</li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%972.png" alt="计算机发展"></p><ul><li><p>点击+</p><p>选择New Module</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%973.png" alt="计算机发展"></p><ul><li><p>要创建一个Java模块，所以选择第一个Java</p><p>点击右下角的Next</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%974.png" alt="计算机发展"></p><ul><li><p>输入模块的名称</p><p>点击右下角的Finish</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%975.png" alt="计算机发展"></p><ul><li><p>成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块</p><p>点击右下角的OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%976.png" alt="计算机发展"></p><ul><li>在主界面中，也会出现刚刚新建的模块</li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%977.png" alt="计算机发展"></p><h5 id="8-6-3-删除模块"><a href="#8-6-3-删除模块" class="headerlink" title="8.6.3 删除模块"></a>8.6.3 删除模块</h5><ul><li><p>右键点击模块</p><p>选择Remove Module</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%971.png" alt="计算机发展"></p><ul><li>选择Remove，表示确定删除</li></ul><p><img src="/2024/07/07/Java/Java/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%972.png" alt="计算机发展"></p><ul><li>此时发现，在IDEA列表页面，删除的模块已经不在了。</li></ul><p><img src="/2024/07/07/Java/Java/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%973.png" alt="计算机发展"></p><blockquote><p>小贴士：</p><p>此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。</p></blockquote><h5 id="8-6-4-修改模块"><a href="#8-6-4-修改模块" class="headerlink" title="8.6.4 修改模块"></a>8.6.4 修改模块</h5><ul><li><p>右键点击模块名</p><p>选择Refactor</p><p>再选择Rename</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D1.png" alt="计算机发展"></p><ul><li><p>选择第三个修改模块名和本地文件夹名</p><p>点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D3.png" alt="计算机发展"></p><ul><li><p>输入要修改的新的模块名</p><p>输入完毕点击Refactor</p></li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D4.png" alt="计算机发展"></p><ul><li>回到主界面，就发现模块名和文件夹名都已经修改完毕</li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D5.png" alt="计算机发展"></p><h5 id="8-6-5-导入模块"><a href="#8-6-5-导入模块" class="headerlink" title="8.6.5 导入模块"></a>8.6.5 导入模块</h5><ul><li>点击File，选择Project Structure</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%971.png" alt="计算机发展"></p><ul><li><p>选择Module</p><p>点击+</p><p>选择Import Module</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%972.png" alt="计算机发展"></p><ul><li><p>从本地硬盘中选择要导入的模块</p><p>再点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png" alt="计算机发展"></p><ul><li>不断点击Next</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png" alt="计算机发展"></p><ul><li><p>如果中间出现提示框，则点击Overwrite</p><p>然后继续点击右下角的Next</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png" alt="计算机发展"></p><ul><li>一直点到finish为止</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png" alt="计算机发展"></p><ul><li>成功导入后，在中间位置就会出现导入的模块信息</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png" alt="计算机发展"></p><ul><li>在主界面中也会出现导入的模块信息</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png" alt="计算机发展"></p><ul><li><p>展开模块点击模块中的Java文件，会发现代码报错。</p><p>是因为导入模块跟JDK没有关联导致。</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png" alt="计算机发展"></p><ul><li><p>可以点击右上角的Setup SDK</p><p>再选择已经安装的JDK版本即可</p></li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png" alt="计算机发展"></p><ul><li>导入完毕之后，代码就恢复正常不会报错了</li></ul><p><img src="/2024/07/07/Java/Java/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9711.png" alt="计算机发展"></p><h5 id="8-7-IDEA中项目的相关操作"><a href="#8-7-IDEA中项目的相关操作" class="headerlink" title="8.7 IDEA中项目的相关操作"></a>8.7 IDEA中项目的相关操作</h5><h5 id="8-7-1-项目的相关操作"><a href="#8-7-1-项目的相关操作" class="headerlink" title="8.7.1 项目的相关操作"></a>8.7.1 项目的相关操作</h5><ul><li>关闭项目</li><li>打开项目</li><li>修改项目</li><li>新建项目</li></ul><h5 id="8-7-2-关闭项目"><a href="#8-7-2-关闭项目" class="headerlink" title="8.7.2 关闭项目"></a>8.7.2 关闭项目</h5><ul><li>点击File，选择Close Project即可</li></ul><p><img src="/2024/07/07/Java/Java/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>刚刚操作的项目就已经关闭了</p><p>左侧是项目列表，如果要再次打开该项目，直接点击即可。</p><p>右侧有create new project，可以再建一个新的项目</p></li></ul><p><img src="/2024/07/07/Java/Java/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li><p>鼠标放在项目上，后面会出现一个叉。</p><p>如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。</p></li></ul><p><img src="/2024/07/07/Java/Java/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><h5 id="8-7-3-打开项目"><a href="#8-7-3-打开项目" class="headerlink" title="8.7.3 打开项目"></a>8.7.3 打开项目</h5><ul><li><p>在本界面还可以打开本地已经存在的项目</p><p>点击Open or Import</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>选择要打开的项目</p><p>点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li>项目就被打开了。</li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><h5 id="8-7-4-修改项目"><a href="#8-7-4-修改项目" class="headerlink" title="8.7.4 修改项目"></a>8.7.4 修改项目</h5><ul><li>点击File，选择Project Structure</li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>在这个界面，默认是Module</p><p>所以，要先点击Project</p><p>在右侧页面中，输入新的项目名称</p><p>修改JDK版本和编译版本都变成JDK14</p><p>再点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li>此时发现，项目名称已经修改完毕</li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li>但是本地文件夹的名字还没有修改</li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png" alt="计算机发展"></p><ul><li>需要先关闭当前项目</li></ul><p><img src="/2024/07/07/Java/Java/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li>点击项目后面的叉，从列表中移除项目</li></ul><p><img src="/2024/07/07/Java/Java/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li>到本地硬盘中手动修改文件夹的名称</li></ul><p> <img src="/2024/07/07/Java/Java/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0/img/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png" alt="计算机发展"></p><ul><li>点击Open or Import重新打开项目</li></ul><p><img src="/2024/07/07/Java/Java/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>选择修改之后的项目</p><p>点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png" alt="计算机发展"></p><ul><li>此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了</li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png" alt="计算机发展"></p><h5 id="8-7-5-新建项目"><a href="#8-7-5-新建项目" class="headerlink" title="8.7.5 新建项目"></a>8.7.5 新建项目</h5><ul><li><p>点击File</p><p>选择New</p><p>点击Project</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li>同样还是创建一个什么都没有的空项目</li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li><p>输入项目的名称</p><p>点击右下角的finish</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li><p>IDEA循环是否需要帮我们在本地创建一个新的文件夹</p><p>点击OK</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png" alt="计算机发展"></p><ul><li><p>询问是在本窗口打开还是在一个新的窗口打开。</p><p>可以点击New Window，在一个新的窗口打开。</p></li></ul><p><img src="/2024/07/07/Java/Java/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png" alt="计算机发展"></p><ul><li>此时就出现了两个窗口，在一个新的窗口打开了新的项目</li></ul><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png" alt="计算机发展"></p><h3 id="8-7-配置"><a href="#8-7-配置" class="headerlink" title="8.7 配置"></a>8.7 配置</h3><p><img src="/2024/07/07/Java/Java/%E6%8F%90%E7%A4%BA%E5%BF%BD%E7%95%A5%E5%A4%A7%E5%B0%8F%E5%86%99.png" alt="提示忽略大小写"></p><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98.png" alt="修改主题"></p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E4%BF%AE%E6%94%B9%E6%B3%A8%E9%87%8A%E7%9A%84%E9%A2%9C%E8%89%B2.png" alt="修改注释的颜色"></p><p><img src="/2024/07/07/Java/Java/%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93.png" alt="修改字体"></p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%8C%85.png" alt="自动导包"></p><h2 id="一、-Java概述"><a href="#一、-Java概述" class="headerlink" title="一、 Java概述"></a>一、 Java概述</h2><h3 id="1-1-Java是什么？"><a href="#1-1-Java是什么？" class="headerlink" title="1.1 Java是什么？"></a>1.1 Java是什么？</h3><p>语言：人与人交流沟通的表达方式</p><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p><p>Java是一门非常火的计算机语言。（也叫做编程语言）</p><p>我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了</p><h3 id="1-2-下载和安装"><a href="#1-2-下载和安装" class="headerlink" title="1.2 下载和安装"></a>1.2 下载和安装</h3><h4 id="1-2-1-下载"><a href="#1-2-1-下载" class="headerlink" title="1.2.1 下载"></a>1.2.1 下载</h4><p>通过官方网站获取JDK</p><p><a href="http://www.oracle.com/">http://www.oracle.com</a></p><p><strong>注意1</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p><strong>注意2</strong>：</p><p>​如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。</p><p>​因为Java从9版本开始，就已经不提供32位版本的安装包了。</p><h4 id="1-2-2-安装"><a href="#1-2-2-安装" class="headerlink" title="1.2.2 安装"></a>1.2.2 安装</h4><p>​傻瓜式安装，下一步即可。默认的安装路径是在C:\Program Files下。</p><p>建议：</p><ul><li>安装路径不要有中文，不要有空格等一些特殊的符号。</li><li>以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。</li></ul><h4 id="1-2-3-JDK的安装目录介绍"><a href="#1-2-3-JDK的安装目录介绍" class="headerlink" title="1.2.3 JDK的安装目录介绍"></a>1.2.3 JDK的安装目录介绍</h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h4 id="1-2-4-JRE下载"><a href="#1-2-4-JRE下载" class="headerlink" title="1.2.4 JRE下载"></a>1.2.4 JRE下载</h4><p>命令行下进入jdk安装路径，输入<code>bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</code>回车即可。</p><p><img src="/2024/07/07/Java/Java/image-20221111175649895.png" alt="image-20221111175649895"></p><h4 id="1-2-5-环境配置"><a href="#1-2-5-环境配置" class="headerlink" title="1.2.5 环境配置"></a>1.2.5 环境配置</h4><p>1.新建系统变量JAVA_HOME</p><blockquote><h4 id="变量名：JAVA-HOME-变量值：C-Program-Files-Java-jdk1-8-0-131-默认安装的JDK根目录"><a href="#变量名：JAVA-HOME-变量值：C-Program-Files-Java-jdk1-8-0-131-默认安装的JDK根目录" class="headerlink" title="变量名：JAVA_HOME 变量值：C:\Program Files\Java\jdk1.8.0_131 (默认安装的JDK根目录)"></a>变量名：JAVA_HOME 变量值：C:\Program Files\Java\jdk1.8.0_131 (默认安装的JDK<a href="https://so.csdn.net/so/search?q=%E6%A0%B9%E7%9B%AE%E5%BD%95&spm=1001.2101.3001.7020">根目录</a>)</h4></blockquote><p><img src="/2024/07/07/Java/Java/image-20221111180001239.png" alt="image-20221111180001239"></p><p>2.修改系统变量Path</p><p> Path的变量值就是JDK的bin目录,JRE的bin目录：</p><blockquote><p>%JAVA_HOME%\bin<br>%JAVA_HOME%\jre\bin</p></blockquote><p>3.检查</p><p>可以win+R打开命令行，输入java和javac、如果有输出，代表配置完成</p><h3 id="1-3-HelloWorld小案例"><a href="#1-3-HelloWorld小案例" class="headerlink" title="1.3 HelloWorld小案例"></a>1.3 HelloWorld小案例</h3><p>​HelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p><h4 id="2-3-1-Java程序开发运行流程"><a href="#2-3-1-Java程序开发运行流程" class="headerlink" title="2.3.1 Java程序开发运行流程"></a>2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><h4 id="2-3-2-HelloWorld案例的编写"><a href="#2-3-2-HelloWorld案例的编写" class="headerlink" title="2.3.2 HelloWorld案例的编写"></a>2.3.2 HelloWorld案例的编写</h4><ol><li>新建文本文档文件，修改名称为HelloWorld.java。</li></ol><p><strong>注意</strong>：后缀名为java的才是java文件。</p><ol start="2"><li>用记事本打开HelloWorld.java文件，输写程序内容。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>保存</li></ol><p><strong>注意</strong>：未保存的文件在左上角会有*符号标记</p><ol start="4"><li><p>编译文件。编译后会产生一个class文件。</p><p>java文件：程序员自己编写的代码。</p><p>class文件：交给计算机执行的文件。</p></li><li><p>运行代码</p><p><strong>注意</strong>：运行的是编译之后的class文件。</p></li></ol><blockquote><p>用到两个命令：</p><p>​javac + 文件名 + 后缀名 （就是编译java文件）</p><p>编译：javac是JDK提供的编译工具，可以将.java文件编译成.class文件</p><p>​java + 文件名（运行编译之后的class文件）</p><p>运行：java也是JDK的工具。运行时不加后缀名</p></blockquote><h3 id="1-4-HelloWorld案例常见问题"><a href="#1-4-HelloWorld案例常见问题" class="headerlink" title="1.4 HelloWorld案例常见问题"></a>1.4 HelloWorld案例常见问题</h3><h4 id="1-4-1-BUG"><a href="#1-4-1-BUG" class="headerlink" title="1.4.1 BUG"></a>1.4.1 BUG</h4><p>​在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p><h4 id="1-4-2-BUG的解决"><a href="#1-4-2-BUG的解决" class="headerlink" title="1.4.2 BUG的解决"></a>1.4.2 BUG的解决</h4><ol><li>具备识别BUG的能力：多看</li><li>具备分析BUG的能力：多思考，多查资料</li><li>具备解决BUG的能力：多尝试，多总结</li></ol><h4 id="1-4-3-HelloWorld常见问题"><a href="#1-4-3-HelloWorld常见问题" class="headerlink" title="1.4.3 HelloWorld常见问题"></a>1.4.3 HelloWorld常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p><p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>4、编译命令后的java文件名需要带文件后缀.java</p><p>5、运行命令后的class文件名（类名）不带文件后缀.class</p><p>…</p><h3 id="1-5-环境变量"><a href="#1-5-环境变量" class="headerlink" title="1.5 环境变量"></a>1.5 环境变量</h3><h4 id="1-5-1-为什么配置环境变量"><a href="#1-5-1-为什么配置环境变量" class="headerlink" title="1.5.1 为什么配置环境变量"></a>1.5.1 为什么配置环境变量</h4><p>​开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p><p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。</p><h4 id="1-5-2配置方式"><a href="#1-5-2配置方式" class="headerlink" title="1.5.2配置方式"></a>1.5.2配置方式</h4><p><img src="/2024/07/07/Java/Java/image-20210923091654365.png" alt="image-20210923091654365"></p><p>以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。</p><p>①<strong>JAVA_HOME</strong>：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）（路径不带bin）</p><p>②<strong>Path</strong>：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置（%JAVA_HOME%\bin）</p><h4 id="1-5-3win10的bug"><a href="#1-5-3win10的bug" class="headerlink" title="1.5.3win10的bug"></a>1.5.3win10的bug</h4><p>当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。</p><p>步骤：</p><ul><li><p>还是要配置JAVA_HOME给以后的相关软件去使用</p></li><li><p>我们可以把java和javac的完整路径配置到PATH当中。</p><p>E:\develop\JDK\bin</p></li></ul><h3 id="1-6-Java语言的发展"><a href="#1-6-Java语言的发展" class="headerlink" title="1.6 Java语言的发展"></a>1.6 Java语言的发展</h3><p>三个版本：</p><ul><li>Java5.0：这是Java的第一个大版本更新。</li><li>Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。</li><li>Java15.0：这个是我们课程中学习的版本。</li></ul><p>解惑：</p><p>​我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？</p><p>向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。</p><p>举例：</p><p>用8版本开发的代码，用11版本能运行吗？必须可以的。</p><p>用11版本开发的代码，用8版本能运行吗？不一定。</p><p>如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。</p><p>如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。</p><h3 id="1-7-Java的三大平台"><a href="#1-7-Java的三大平台" class="headerlink" title="1.7 Java的三大平台"></a>1.7 Java的三大平台</h3><p>​JavaSE、JavaME、JavaEE</p><h4 id="1-7-1-JavaSE"><a href="#1-7-1-JavaSE" class="headerlink" title="1.7.1 JavaSE"></a>1.7.1 JavaSE</h4><p>​是其他两个版本的基础。</p><h4 id="1-7-2-JavaME"><a href="#1-7-2-JavaME" class="headerlink" title="1.7.2 JavaME"></a>1.7.2 JavaME</h4><p>​Java语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p><p>​其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。</p><p>​但是，安卓也是可以用Java来开发的。</p><h4 id="1-7-3-JavaEE"><a href="#1-7-3-JavaEE" class="headerlink" title="1.7.3 JavaEE"></a>1.7.3 JavaEE</h4><p>​用于Web方向的网站开发。（主要从事后台服务器的开发）</p><p>​在服务器领域，Java是当之无愧的龙头老大。</p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221111203453985.png" alt="image-20221111203453985"></p><h3 id="1-8-Java的主要特性"><a href="#1-8-Java的主要特性" class="headerlink" title="1.8 Java的主要特性"></a>1.8 Java的主要特性</h3><ul><li>面向对象</li><li>安全性</li><li>多线程</li><li>简单易用</li><li>开源</li><li>跨平台</li></ul><h4 id="1-8-1-Java语言跨平台的原理"><a href="#1-8-1-Java语言跨平台的原理" class="headerlink" title="1.8.1 Java语言跨平台的原理"></a>1.8.1 Java语言跨平台的原理</h4><ul><li>操作系统本身其实是不认识Java语言的。</li><li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li></ul><p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p><p><img src="/2024/07/07/Java/Java/image-20210923091350952.png" alt="image-20210923091350952"></p><h3 id="1-9-JRE和JDK"><a href="#1-9-JRE和JDK" class="headerlink" title="1.9 JRE和JDK"></a>1.9 JRE和JDK</h3><p><img src="/2024/07/07/Java/Java/image-20210923091544110.png" alt="image-20210923091544110"></p><p>JVM（Java Virtual Machine），Java虚拟机，真正运行java的地方</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p><h3 id="1-10-混合、解释和编译"><a href="#1-10-混合、解释和编译" class="headerlink" title="1.10 混合、解释和编译"></a>1.10 混合、解释和编译</h3><p><strong>3种类型</strong></p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221111204314780.png" alt="image-20221111204314780"> </p><p><img src="/2024/07/07/Java/Java/image-20221111204333976.png" alt="image-20221111204333976"></p><p><img src="/2024/07/07/Java/Java/image-20221111204420253.png" alt="image-20221111204420253"> </p><p><img src="/2024/07/07/Java/Java/image-20221111204433727.png" alt="image-20221111204433727"> </p><h2 id="二、-Java基础语法"><a href="#二、-Java基础语法" class="headerlink" title="二、 Java基础语法"></a>二、 Java基础语法</h2><h3 id="2-1-注释"><a href="#2-1-注释" class="headerlink" title="2.1 注释"></a>2.1 注释</h3><p>​注释是对代码的解释和说明文字。</p><p>Java中的注释分为三种：</p><ul><li>单行注释：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure><ul><li>多行注释：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure><ul><li>文档注释（暂时用不到）：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>注意点</strong></p><p>​注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。</p><p>​所以，不管在注释当中写什么内容，都不会影响代码运行的结果。</p><h3 id="2-2-关键字"><a href="#2-2-关键字" class="headerlink" title="2.2 关键字"></a>2.2 关键字</h3><h4 id="2-2-1-概念"><a href="#2-2-1-概念" class="headerlink" title="2.2.1 概念"></a>2.2.1 概念</h4><p>​被Java赋予了特定含义的英文单词。</p><p>​当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p><p>注意：关键字很多，不用刻意去记。</p><table><thead><tr><th><strong>abstract</strong></th><th><strong>assert</strong></th><th><strong>boolean</strong></th><th><strong>break</strong></th><th><strong>byte</strong></th></tr></thead><tbody><tr><td><strong>case</strong></td><td><strong>catch</strong></td><td><strong>char</strong></td><td><strong>class</strong></td><td><strong>const</strong></td></tr><tr><td><strong>continue</strong></td><td><strong>default</strong></td><td><strong>do</strong></td><td><strong>double</strong></td><td><strong>else</strong></td></tr><tr><td><strong>enum</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>finally</strong></td><td><strong>float</strong></td></tr><tr><td><strong>for</strong></td><td><strong>goto</strong></td><td><strong>if</strong></td><td><strong>implements</strong></td><td><strong>import</strong></td></tr><tr><td><strong>instanceof</strong></td><td><strong>int</strong></td><td><strong>interface</strong></td><td><strong>long</strong></td><td><strong>native</strong></td></tr><tr><td><strong>new</strong></td><td><strong>package</strong></td><td><strong>private</strong></td><td><strong>protected</strong></td><td><strong>public</strong></td></tr><tr><td><strong>return</strong></td><td><strong>strictfp</strong></td><td><strong>short</strong></td><td><strong>static</strong></td><td><strong>super</strong></td></tr><tr><td><strong>switch</strong></td><td><strong>synchronized</strong></td><td><strong>this</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td></tr><tr><td><strong>transient</strong></td><td><strong>try</strong></td><td><strong>void</strong></td><td><strong>volatile</strong></td><td><strong>while</strong></td></tr></tbody></table><h4 id="2-2-2-第一个关键字class"><a href="#2-2-2-第一个关键字class" class="headerlink" title="2.2.2 第一个关键字class"></a>2.2.2 第一个关键字class</h4><p>​表示定义一个类。创建一个类。</p><p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p><p>class后面跟随的就是这个类的名字，简称：类名。</p><p>在类名后面会有一对大括号，表示这个类的内容。</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：class表示定义类。</p><p>​类名：HelloWorld</p><p>​HelloWorld后面的大括号表示这个类的范围。</p><h3 id="2-3-字面量"><a href="#2-3-字面量" class="headerlink" title="2.3 字面量"></a>2.3 字面量</h3><p>作用：告诉程序员，数据在程序中的书写格式。</p><table><thead><tr><th><strong>字面量类型</strong></th><th><strong>说明</strong></th><th><strong>程序中的写法</strong></th></tr></thead><tbody><tr><td>整数</td><td>不带小数的数字</td><td>666，-88</td></tr><tr><td>小数</td><td>带小数的数字</td><td>13.14，-5.21</td></tr><tr><td>字符</td><td>必须使用单引号，有且仅能一个字符</td><td>‘A’，‘0’，   ‘我’</td></tr><tr><td>字符串</td><td>必须使用双引号，内容可有可无</td><td>“HelloWorld”，“黑马程序员”</td></tr><tr><td>布尔值</td><td>布尔值，表示真假，只有两个值：true，false</td><td>true 、false</td></tr><tr><td>空值</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">10</span>); <span class="comment">// 输出一个整数</span></span><br><span class="line">        System.out.println(<span class="number">5.5</span>); <span class="comment">// 输出一个小数</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 输出一个字符</span></span><br><span class="line">        System.out.println(<span class="literal">true</span>); <span class="comment">// 输出boolean值true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;欢迎学习java&quot;</span>); <span class="comment">// 输出字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>区分技巧</strong></p><ol><li>不带小数点的数字都是整数类型的字面量。</li><li>只要带了小数点，那么就是小数类型的字面量。</li><li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li><li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li><li>字符类型的字面量只有两个值，true、false。</li><li>空类型的字面量只有一个值，null。</li></ol><h3 id="2-4-变量"><a href="#2-4-变量" class="headerlink" title="2.4 变量"></a>2.4 变量</h3><h4 id="2-4-1-定义"><a href="#2-4-1-定义" class="headerlink" title="2.4.1 定义"></a>2.4.1 定义</h4><p>​变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p><h4 id="2-4-2-变量的定义格式"><a href="#2-4-2-变量的定义格式" class="headerlink" title="2.4.2 变量的定义格式"></a>2.4.2 变量的定义格式</h4><p>​数据类型 变量名 &#x3D; 数据值；</p><h5 id="①-格式详解"><a href="#①-格式详解" class="headerlink" title="① 格式详解"></a>① 格式详解</h5><p>​数据类型：限定了变量当中能存储什么类型的数据。</p><p>​   如果要存10，那么数据类型就需要写整数类型。</p><p>​   如果要存10.0，那么数据类型就需要写小数类型。</p><p>​变量名：其实就是这个容器的名字。</p><p>​当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p><p>​数据值：真正存储在容器中的数据。</p><p>​分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p><h5 id="②-常用的数据类型"><a href="#②-常用的数据类型" class="headerlink" title="② 常用的数据类型"></a>② 常用的数据类型</h5><p>​整数：int</p><p>​小数：（浮点数）double</p><p>​其他数据类型稍后讲解</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//定义一个整数类型的变量</span></span><br><span class="line"><span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">System.out.println(a);<span class="comment">//16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个小数类型的变量</span></span><br><span class="line"><span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10.1</span>;</span><br><span class="line">System.out.println(b);<span class="comment">//10.1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="③-变量的注意事项"><a href="#③-变量的注意事项" class="headerlink" title="③ 变量的注意事项"></a>③ 变量的注意事项</h5><ul><li>变量名不能重复</li><li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li><li>变量在使用之前必须要赋值。</li></ul><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo2</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//1.变量名不允许重复</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int a = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.一条语句可以定义多个变量</span></span><br><span class="line"><span class="comment">//了解。</span></span><br><span class="line"><span class="comment">//int a = 10, b = 20, c = 20,d = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);//?</span></span><br><span class="line"><span class="comment">//System.out.println(b);//?</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.变量在使用之前必须要赋值</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-数据类型"><a href="#2-4-数据类型" class="headerlink" title="2.4 数据类型"></a>2.4 数据类型</h3><h4 id="2-4-1-Java语言数据类型的分类"><a href="#2-4-1-Java语言数据类型的分类" class="headerlink" title="2.4.1 Java语言数据类型的分类"></a>2.4.1 Java语言数据类型的分类</h4><ul><li>基本数据类型：数据值存储在自己的空间中</li><li>引用数据类型：数据值存放在其他空间，自己空间存储的是地址值</li></ul><h4 id="2-4-2-基本数据类型的四类八种"><a href="#2-4-2-基本数据类型的四类八种" class="headerlink" title="2.4.2 基本数据类型的四类八种"></a>2.4.2 基本数据类型的四类八种</h4><table><thead><tr><th align="center">数据类型</th><th align="center">关键字</th><th align="center">内存占用</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">整数</td><td align="center">byte</td><td align="center">1</td><td align="center">负的2的7次方 ~ 2的7次方-1(-128~127)</td></tr><tr><td align="center"></td><td align="center">short</td><td align="center">2</td><td align="center">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">4</td><td align="center">负的2的31次方 ~ 2的31次方-1</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">8</td><td align="center">负的2的63次方 ~ 2的63次方-1</td></tr><tr><td align="center">浮点数</td><td align="center">float</td><td align="center">4</td><td align="center">1.401298e-45 ~ 3.402823e+38</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">8</td><td align="center">4.9000000e-324 ~ 1.797693e+308</td></tr><tr><td align="center">字符</td><td align="center">char</td><td align="center">2</td><td align="center">0-65535</td></tr><tr><td align="center">布尔</td><td align="center">boolean</td><td align="center">1</td><td align="center">true，false</td></tr></tbody></table><p><strong>说明</strong></p><p>​e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​在java中整数默认是int类型，浮点数默认是double类型。</p><p><strong>需要记忆以下几点</strong></p><p>byte类型的取值范围：</p><p>​-128 ~ 127</p><p>int类型的大概取值范围：</p><p>​-21亿多  ~ 21亿多</p><p>整数类型和小数类型的取值范围大小关系：</p><p>​double &gt; float &gt; long &gt; int &gt; short &gt; byte</p><p>最为常用的数据类型选择：</p><ul><li><p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p><p>比如：人的年龄，可以选择byte类型。</p><p>比如：地球的年龄，可以选择long类型。</p></li><li><p>如果整数类型中，不太确定范围，那么默认使用int类型。</p></li><li><p>如果小数类型中，不太确定范围，那么默认使用double类型。</p></li><li><p>如果要定义字符类型的变量，那么使用char</p></li><li><p>如果要定义布尔类型的变量，那么使用boolean</p></li></ul><h4 id="2-4-3-定义8种基本数据类型变量"><a href="#2-4-3-定义8种基本数据类型变量" class="headerlink" title="2.4.3 定义8种基本数据类型变量"></a>2.4.3 定义8种基本数据类型变量</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo3</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//1.定义byte类型的变量</span></span><br><span class="line">        <span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.定义short类型的变量</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.定义int类型的变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.定义long类型的变量</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">123456789123456789L</span>;</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.定义float类型的变量</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">10.1F</span>;</span><br><span class="line">        System.out.println(e);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.定义double类型的变量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">20.3</span>;</span><br><span class="line">        System.out.println(f);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.定义char类型的变量</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">g</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(g);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//8.定义boolean类型的变量</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">h</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(h);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意点</strong></p><ul><li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li><li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li><li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li><li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li></ul><h3 id="2-5-标识符"><a href="#2-5-标识符" class="headerlink" title="2.5 标识符"></a>2.5 标识符</h3><h4 id="2-5-1-硬性要求："><a href="#2-5-1-硬性要求：" class="headerlink" title="2.5.1 硬性要求："></a>2.5.1 硬性要求：</h4><ul><li>必须由数字、字母、下划线_、美元符号$组成。</li><li>数字不能开头</li><li>不能是关键字</li><li>区分大小写的。</li></ul><h4 id="2-5-2-软件建议："><a href="#2-5-2-软件建议：" class="headerlink" title="2.5.2 软件建议："></a>2.5.2 软件建议：</h4><p>​如果不这么做，代码不会报错，但是会让代码显得比较low。</p><h4 id="①-小驼峰命名法"><a href="#①-小驼峰命名法" class="headerlink" title="① 小驼峰命名法"></a>① 小驼峰命名法</h4><p>适用于<strong>变量名和方法名</strong></p><ul><li><p>如果是一个单词，那么全部小写，比如：name</p></li><li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p></li></ul><h4 id="②-大驼峰命名法"><a href="#②-大驼峰命名法" class="headerlink" title="② 大驼峰命名法"></a>② 大驼峰命名法</h4><p>适用于<strong>类名</strong></p><ul><li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p></li><li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p></li></ul><p>不管起什么名字，都要做到见名知意。</p><p><strong>阿里巴巴命名规范细节</strong>：</p><ol><li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p><p>正确：alibaba、hangzhou、nanjing</p><p>错误：jiage、dazhe</p></li><li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p><p>错误：_name</p><p>正确：name</p></li></ol><h3 id="2-6-键盘录入Scanner"><a href="#2-6-键盘录入Scanner" class="headerlink" title="2.6 键盘录入Scanner"></a>2.6 键盘录入Scanner</h3><p>​键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p><p>使用步骤：</p><p>第一步：</p><p>​导包：其实就是表示先找到Scanner这个类在哪。</p><p>第二步：</p><p>​创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p><p>第三步：</p><p>​接收数据：也是真正干活的代码。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导包，其实就是先找到Scanner这个类在哪</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//3.接收数据</span></span><br><span class="line"><span class="comment">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span></span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个数字&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、运算符"><a href="#三、运算符" class="headerlink" title="三、运算符"></a>三、运算符</h2><h3 id="3-1-运算符和表达式"><a href="#3-1-运算符和表达式" class="headerlink" title="3.1 运算符和表达式"></a>3.1 运算符和表达式</h3><p>运算符：</p><p>​就是对常量或者变量进行操作的符号。</p><p>​比如： +  -  *  &#x2F; </p><p>表达式：</p><p>​用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。</p><p>​比如：a + b 这个整体就是表达式。</p><p>​而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。</p><h3 id="3-2-算术运算符"><a href="#3-2-算术运算符" class="headerlink" title="3.2 算术运算符"></a>3.2 算术运算符</h3><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>符号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10+5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10-5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10*5</td><td>50</td></tr><tr><td>&#x2F;</td><td>除</td><td>10&#x2F;5</td><td>2</td></tr><tr><td>%</td><td>取模（取余）</td><td>10%3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a&#x3D;2; b&#x3D;++a;</td><td>a&#x3D;3; b&#x3D;3;</td></tr><tr><td>++</td><td>后置递增</td><td>a&#x3D;2; b&#x3D;a++;</td><td>a&#x3D;3; b&#x3D;2;</td></tr><tr><td>–</td><td>前置递减</td><td>a&#x3D;2; b&#x3D;–a;</td><td>a&#x3D;1; b&#x3D;1;</td></tr><tr><td>–</td><td>后置递减</td><td>a&#x3D;2; b&#x3D;a–;</td><td>a&#x3D;1; b&#x3D;2;</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*：</span></span><br><span class="line"><span class="comment">1.整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span></span><br><span class="line"><span class="comment">2.小数直接参与运算，得到的结果有可能是不精确的。</span></span><br><span class="line"><span class="comment">案例：</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">System.out.println( <span class="number">10</span> / <span class="number">3</span>);<span class="comment">//3</span></span><br><span class="line">System.out.println(<span class="number">10.0</span> / <span class="number">3</span>);<span class="comment">//3.3333333333333335</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%：取模、取余。</span><br><span class="line">   他做的也是除法运算，只不过获取的是余数而已。</span><br><span class="line">案例：</span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">2</span>);<span class="comment">//0</span></span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">3</span>);<span class="comment">//1</span></span><br><span class="line">应用场景：</span><br><span class="line"><span class="comment">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class="line">System.out.println(<span class="number">15</span> % <span class="number">2</span>);<span class="comment">//1  奇数</span></span><br></pre></td></tr></table></figure><p><strong>练习：数值拆分</strong></p><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.键盘录入一个三位数</span></span><br><span class="line"><span class="comment">//导包 --- 创建对象 --- 接收数据</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个三位数&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class="line"><span class="comment">//公式：</span></span><br><span class="line"><span class="comment">//针对于任意的一个数而言</span></span><br><span class="line"><span class="comment">//个位： 数字 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">ones</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//十位： 数字 / 10 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">tens</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//百位： 数字 / 100 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">hundreds</span> <span class="operator">=</span> number / <span class="number">100</span>  % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">System.out.println(ones);</span><br><span class="line">System.out.println(tens);</span><br><span class="line">System.out.println(hundreds);</span><br></pre></td></tr></table></figure><h3 id="3-3-赋值运算符"><a href="#3-3-赋值运算符" class="headerlink" title="3.3 赋值运算符"></a>3.3 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包含以下符号：</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>a&#x3D;2;</td><td>a&#x3D;2;</td></tr><tr><td>+&#x3D;</td><td>加等于</td><td>a&#x3D;0; a+&#x3D;2;</td><td>a&#x3D;2;</td></tr><tr><td>-&#x3D;</td><td>减等于</td><td>a&#x3D;5; a-&#x3D;2;</td><td>a&#x3D;3;</td></tr><tr><td>*&#x3D;</td><td>乘等于</td><td>a&#x3D;2; a*&#x3D;2;</td><td>a&#x3D;4;</td></tr><tr><td>&#x2F;&#x3D;</td><td>除等于</td><td>a&#x3D;4; a&#x2F;&#x3D;2;</td><td>a&#x3D;2;</td></tr><tr><td>%&#x3D;</td><td>模等于</td><td>a&#x3D;3; a%&#x3D;2;</td><td>a&#x3D;1;</td></tr></tbody></table><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 赋值运算符实例</span></span><br><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// 1.最为简单的赋值运算符用法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">// 就是把10赋值给变量a</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.如果等号右边需要进行计算。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b;<span class="comment">// 先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.特殊的用法</span></span><br><span class="line">        a = a + <span class="number">10</span>;<span class="comment">// 先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(a); <span class="comment">// 20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意点</strong>：</p><p>​扩展的赋值运算符中隐层还包含了一个强制转换。</p><p>以+&#x3D;为例。</p><p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo8</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="comment">//a += b;</span></span><br><span class="line">        a = (<span class="type">byte</span>)(a + b);</span><br><span class="line">        System.out.println(a);<span class="comment">//30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-关系运算符"><a href="#3-4-关系运算符" class="headerlink" title="3.4 关系运算符"></a>3.4 关系运算符</h3><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>相等</td><td>4 &#x3D;&#x3D; 3</td><td>0</td></tr><tr><td>!&#x3D;</td><td>不相等</td><td>4 !&#x3D; 3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4 &lt; 3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4 &gt; 3</td><td>1</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td><td>4 &lt;&#x3D; 3</td><td>0</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td><td>4 &gt;&#x3D; 3</td><td>1</td></tr></tbody></table><h3 id="3-5-位运算符"><a href="#3-5-位运算符" class="headerlink" title="3.5 位运算符"></a>3.5 位运算符</h3><p><strong>运算对象：</strong>整型数据 和 字符型数据</p><p>假设变量 <strong>A</strong> 的值为 60（0011 1100），<br>        变量 <strong>B</strong> 的值为 13（0000 1101）</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">按位与（AND），按二进制位进行”与”运算。<br>运算规则：<code>0&amp;0=0;    0&amp;1=0;     1&amp;0=0;      1&amp;1=1;</code></td><td align="left">(A &amp; B) 将得到 12，即为 0000 1100</td></tr><tr><td align="left">|</td><td align="left">按位或（OR），按二进制位进行”或”运算。<br>运算规则：&#96;0</td><td align="left">0&#x3D;0;    0</td></tr><tr><td align="left">^</td><td align="left">按位异或（XOR），按二进制位进行”异或”运算。<br>运算规则：<code>0^0=0;    0^1=1;    1^0=1;   1^1=0;</code></td><td align="left">(A ^ B) 将得到 49，即为 0011 0001</td></tr><tr><td align="left">~</td><td align="left">取反运算符，按二进制位进行”取反”运算。<br>运算规则：<code>~1=-2;    ~0=-1;</code></td><td align="left">(~A ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。</td><td align="left">A &lt;&lt; 2 将得到 240，即为 1111 0000</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</td><td align="left">A &gt;&gt; 2 将得到 15，即为 0000 1111</td></tr></tbody></table><h3 id="3-6-逻辑运算符"><a href="#3-6-逻辑运算符" class="headerlink" title="3.6 逻辑运算符"></a>3.6 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假植</p><p>当左边不能确定整个表达式的结果，右边才会执行。</p><p>​当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p><p>逻辑运算符有以下术语</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；如果a为真，则!a为假</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>只有a和b都为真时，才为真</td></tr><tr><td>||</td><td>或</td><td>a || b</td><td>只要a或b中有一个为真，结果就为真</td></tr></tbody></table><p>&amp;&amp; 的优先级高于 ||</p><h3 id="3-7-三元运算符"><a href="#3-7-三元运算符" class="headerlink" title="3.7 三元运算符"></a>3.7 三元运算符</h3><p>又叫做：三元表达式或者问号冒号表达式。</p><p><strong>格式</strong>：</p><p>​关系表达式 ？ 表达式1 ：表达式2 ；</p><p><strong>计算规则</strong>：</p><ul><li>计算关系表达式的值。</li><li>如果关系表达式的值为真，那么执行表达式1。</li><li>如果关系表达式的值为假，那么执行表达式2。</li></ul><p><strong>注意点</strong>：</p><p>​三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p><p><strong>案例</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo12</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：求两个数的较大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class="line">        <span class="comment">//注意点：</span></span><br><span class="line">        <span class="comment">//三元运算符的最终结果一定要被使用。</span></span><br><span class="line">        <span class="comment">//要么赋值给一个变量，要么直接输出。</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span>  a &gt; b ? a : b ;</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(a &gt; b ? a : b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习</strong>1-两只老虎</p><p>需求：</p><p>​动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p><p>​请用程序实现判断两只老虎的体重是否相同。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取两只老虎的体重</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出最终结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> weight1 == weight2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不相同&quot;</span>;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p><strong>练习</strong>2-求三个数的最大值</p><p>需求：</p><p>​一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p><p>​请用程序实现获取这三个和尚的最高身高。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义三个变量记录和尚的身高</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> <span class="number">210</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> <span class="number">165</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.求出最终的结果</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> temp &gt; height3 ? temp : height3;</span><br><span class="line"></span><br><span class="line">System.out.println(max);</span><br></pre></td></tr></table></figure><h3 id="3-8-隐式转换"><a href="#3-8-隐式转换" class="headerlink" title="3.8 隐式转换"></a>3.8 隐式转换</h3><p>概念：</p><p>​也叫自动类型提升。</p><p>​就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。</p><p><strong>简单记忆：</strong></p><p>​就是小的给大的，可以直接给。</p><p>两种提升规则：</p><ul><li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li><li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。</li></ul><p><strong>取值范围从小到大的关系</strong>：</p><p>​byte short int long float double</p><hr><p><strong>隐式转换的练习</strong></p><p>请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果</p><p>案例一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(d);<span class="comment">//10.0</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​10是整数，整数默认是int类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</p><p>案例二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> b;<span class="comment">//可以成功赋值</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。</p><p>案例三：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">20L</span>;</span><br><span class="line">??? result = i + n;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型的，变量n是long类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。</p><p>案例四：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">20.0</span>;</span><br><span class="line">??? result = i + n + d;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型，变量n是long类型，变量d是double类型。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。</p><p>​最终其实就是三个double进行相加，那么最终的结果就是double类型的。</p><p>案例五：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">??? result = b1 + b2;<span class="comment">//int</span></span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。</p><p>案例六：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line">??? result = b + s + n;</span><br><span class="line">问变量result是什么类型的？<span class="type">long</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量b是byte类型的，变量s是short类型的，变量n是long类型的。</p><p>​byte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。</p><p>第一步：变量b和变量s里面的值会先提升为int参与运算。</p><p>​int + int + long</p><p>第二步：而long类型的取值范围是大于int的取值范围的。</p><p>​所以变量b和变量s里面的值会再次提升为long。</p><p>​long + long + long。</p><p>所以最终结果是long类型的。</p><h3 id="3-9-强制转换"><a href="#3-9-强制转换" class="headerlink" title="3.9 强制转换"></a>3.9 强制转换</h3><p><strong>概念</strong>：</p><p>​如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。</p><p>​如果一定要这么干，就需要加入强制转换。</p><p><strong>书写格式</strong>：</p><p>​目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p><p>简单理解：</p><p>​要转成什么类型的，那么就在小括号中写什么类型就可以了。</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>)a;</span><br><span class="line">        System.out.println(b);<span class="comment">//12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：</p><p>​强制转换有可能会导致数据发生错误。（数据的精度丢失）</p><h3 id="3-10-字符串的-操作"><a href="#3-10-字符串的-操作" class="headerlink" title="3.10 字符串的+操作"></a>3.10 字符串的+操作</h3><p><strong>核心技巧</strong>：</p><ul><li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li><li>当连续进行+操作时，从左到右逐个执行的。</li></ul><blockquote><p>注意：特例：字符串只有+操作，没有其他操作。</p></blockquote><p><strong>字符串相加的练习</strong>：</p><p>案例1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：”1abc1”</p><p>解释：</p><p>​第一步： 1 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”1abc”</p><p>​第二步：  “1abc” + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串”1abc1”</p><p>案例2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">2</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">2</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：“3abc21”</p><p>解释：</p><p>​第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。</p><p>​第二步：3 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc”。</p><p>​第三步：”3abc” + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc2”。</p><p>​第四步：”3abc2” + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”</p><p>案例3：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;黑默丁格&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;我的名字是&quot;</span> + name);</span><br></pre></td></tr></table></figure><p>结果： 我的名字是黑默丁格</p><p>解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。</p><h3 id="3-11-字符的-操作"><a href="#3-11-字符的-操作" class="headerlink" title="3.11 字符的+操作"></a>3.11 字符的+操作</h3><p><strong>规则</strong>：</p><p>​当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p><p><strong>案例</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> c + <span class="number">0</span>;</span><br><span class="line">System.out.println(result);<span class="comment">//97</span></span><br></pre></td></tr></table></figure><p>ASCII码表中：</p><p>​‘a’   —–    97</p><p>​‘A’   —–    65</p><h2 id="四、流程控制语句"><a href="#四、流程控制语句" class="headerlink" title="四、流程控制语句"></a>四、流程控制语句</h2><h3 id="4-1-顺序结构"><a href="#4-1-顺序结构" class="headerlink" title="4.1 顺序结构"></a>4.1 顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p><p>顺序结构执行流程图：</p><p><img src="/2024/07/07/Java/Java/1545615769372.png" alt="1545615769372"></p><h3 id="4-2-选择结构"><a href="#4-2-选择结构" class="headerlink" title="4.2 选择结构"></a>4.2 选择结构</h3><h4 id="4-2-1-if语句"><a href="#4-2-1-if语句" class="headerlink" title="4.2.1 if语句"></a>4.2.1 if语句</h4><h5 id="①格式1"><a href="#①格式1" class="headerlink" title="①格式1"></a>①格式1</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体</p><p>③如果关系表达式的值为false就不执行语句体</p><p>④继续执行后面的语句内容</p><p><img src="/2024/07/07/Java/Java/1545616039363.png" alt="1545616039363"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class="line"><span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a == c) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于c&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第一种格式的细节</strong>：</p><ol><li><p>如果我们要对一个布尔类型的变量进行判断，不要写&#x3D;&#x3D;，直接把变量写在小括号中即可。</p></li><li><p>如果大括号中的语句体只有一条，那么大括号可以省略不写</p><p>如果大括号省略了，那么if只能控制距离他最近的那一条语句。</p><p><strong>建议：</strong>自己不要去写，如果别人这么写了，你要能看懂即可。</p></li></ol><h5 id="②语句格式2"><a href="#②语句格式2" class="headerlink" title="②语句格式2"></a>②语句格式2</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体1</p><p>③如果关系表达式的值为false就执行语句体2</p><p>④继续执行后面的语句内容</p><p><img src="/2024/07/07/Java/Java/1545616221283.png" alt="1545616221283"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo02</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值大于b&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值不大于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="③语句格式3"><a href="#③语句格式3" class="headerlink" title="③语句格式3"></a>③语句格式3</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//格式：</span></span><br><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (关系表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125; </span><br><span class="line">…</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式1的值</p><p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p><p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p><p>④…</p><p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p><p><img src="/2024/07/07/Java/Java/1545616667104.png" alt="1545616667104"></p><h4 id="4-2-2-switch语句"><a href="#4-2-2-switch语句" class="headerlink" title="4.2.2 switch语句"></a>4.2.2 switch语句</h4><p><strong>格式：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>执行流程：</strong></p><ul><li>首先计算出表达式的值 </li><li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li><li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li></ul><p><strong>练习：运动计划</strong></p><ul><li><p>需求：键盘录入星期数，显示今天的减肥活动。</p><p>周一：跑步  </p><p>周二：游泳  </p><p>周三：慢走  </p><p>周四：动感单车</p><p>周五：拳击  </p><p>周六：爬山  </p><p>周日：好好吃一顿</p></li><li><p>代码示例：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> a01switch选择语句;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.键盘录入一个整数表示星期</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数表示星期&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.书写一个switch语句去跟week进行匹配</span></span><br><span class="line">        <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入错误，没有这个星期&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>switch的扩展知识：</strong></p><ul><li><p>default的位置和省略情况</p><p>default可以放在任意位置，也可以省略</p></li><li><p>case穿透</p><p>不写break会引发case穿透现象</p></li><li><p>switch在JDK12的新特性</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">switch</span> (number) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span> -&gt; System.out.println(<span class="string">&quot;一&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span> -&gt; System.out.println(<span class="string">&quot;二&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span> -&gt; System.out.println(<span class="string">&quot;三&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;其他&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch和if第三种格式各自的使用场景</li></ul><p>当我们需要对一个范围进行判断的时候，用if的第三种格式</p><p>当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句</p><p>比如：</p><p>​小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。</p><p>​如果是星期，月份，客服电话中0~9的功能选择就可以用switch</p><p><strong>练习</strong>：休息日和工作日</p><p>需求：键盘录入星期数，输出工作日、休息日。</p><p>(1-5) 工作日，(6-7)休息日。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入星期数</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入星期&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//3</span></span><br><span class="line"><span class="comment">//2.利用switch进行匹配</span></span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用<span class="keyword">case</span>穿透简化代码</span><br><span class="line"><span class="keyword">switch</span> (week)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用JDK12简化代码书写</span><br><span class="line"><span class="keyword">switch</span> (week) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> -&gt; System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span> -&gt; System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-循环结构"><a href="#4-3-循环结构" class="headerlink" title="4.3 循环结构"></a>4.3 循环结构</h3><h4 id="4-3-1-for循环"><a href="#4-3-1-for循环" class="headerlink" title="4.3.1 for循环"></a>4.3.1 for循环</h4><p>​循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p><p><strong>格式：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class="line">循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>格式解释：</strong></p><ul><li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li><li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li><li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li><li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li></ul><p><strong>执行流程：</strong></p><p>①执行初始化语句</p><p>②执行条件判断语句，看其结果是true还是false</p><p>​             如果是false，循环结束</p><p>​             如果是true，继续执行</p><p>③执行循环体语句</p><p>④执行条件控制语句</p><p>⑤回到②继续</p><p><strong>for循环书写技巧：</strong></p><ul><li>确定循环的开始条件</li><li>确定循环的结束条件</li><li>确定循环要重复执行的代码</li></ul><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.确定循环的开始条件</span></span><br><span class="line"><span class="comment">//2.确定循环的结束条件</span></span><br><span class="line"><span class="comment">//3.确定要重复执行的代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：打印5次HelloWorld</span></span><br><span class="line"><span class="comment">//开始条件：1</span></span><br><span class="line"><span class="comment">//结束条件：5</span></span><br><span class="line"><span class="comment">//重复代码：打印语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-while循环"><a href="#4-3-2-while循环" class="headerlink" title="4.3.2 while循环"></a>4.3.2 while循环</h4><p><strong>格式</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span>(条件判断语句)&#123;</span><br><span class="line">循环体;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习1：打印5次HelloWorld</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= <span class="number">5</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(i);</span><br></pre></td></tr></table></figure><h4 id="4-3-3-do…while循环"><a href="#4-3-3-do…while循环" class="headerlink" title="4.3.3 do…while循环"></a>4.3.3 do…while循环</h4><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125; <span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure><p>特点：</p><p>​先执行，再判断。</p><h4 id="4-3-4-三种格式的区别："><a href="#4-3-4-三种格式的区别：" class="headerlink" title="4.3.4 三种格式的区别："></a>4.3.4 三种格式的区别：</h4><p>​for和while循环，是先判断，再执行。</p><p>​do…while是先执行，再判断。</p><p>​当知道循环次数或者循环范围的时候，用for循环。</p><p>​当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</p><h3 id="4-4-条件控制语句"><a href="#4-4-条件控制语句" class="headerlink" title="4.4 条件控制语句"></a>4.4 条件控制语句</h3><ul><li>break</li><li>continue</li></ul><h4 id="break"><a href="#break" class="headerlink" title="break:"></a>break:</h4><p>​不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.吃1~5号包子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;在吃第&quot;</span> + i + <span class="string">&quot;个包子&quot;</span>);</span><br><span class="line">    <span class="comment">//2.吃完第三个的时候就不吃了</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//结束整个循环。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="continue"><a href="#continue" class="headerlink" title="continue:"></a>continue:</h4><p>​不能单独存在的。只能存在于循环当中。</p><p>​表示：跳过本次循环，继续执行下次循环。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.吃1~5号包子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//2.第3个包子有虫子就跳过，继续吃下面的包子</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="comment">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;在吃第&quot;</span> + i + <span class="string">&quot;个包子&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-Random"><a href="#4-5-Random" class="headerlink" title="4.5 Random"></a>4.5 Random</h3><p>Random跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。</p><p><strong>使用步骤</strong>：</p><ol><li>导包</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line">导包的动作必须出现在类定义的上边。</span><br></pre></td></tr></table></figure><ol start="2"><li>创建对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span> ();</span><br><span class="line">上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。</span><br></pre></td></tr></table></figure><ol start="3"><li>生成随机数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(随机数的范围);</span><br><span class="line">上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。</span><br><span class="line">随机数范围的特点：从<span class="number">0</span>开始，不包含指定值。比如：参数为<span class="number">10</span>，生成的范围[<span class="number">0</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.导包</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//2.创建对象</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="comment">//3.生成随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>);<span class="comment">//包左不包右，包头不包尾</span></span><br><span class="line">        <span class="comment">//0 ~ 99</span></span><br><span class="line">        System.out.println(number);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、数组"><a href="#五、数组" class="headerlink" title="五、数组"></a>五、数组</h2><h3 id="5-1-概念"><a href="#5-1-概念" class="headerlink" title="5.1 概念"></a>5.1 概念</h3><p>​指的是一种容器，可以同来存储同种数据类型的多个值。</p><p>​但是数组容器在存储数据的时候，需要结合隐式转换考虑。</p><p>比如：</p><p>​定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，</p><p>​但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。</p><p>建议：</p><p>​容器的类，和存储的数据类型保持一致。</p><p>举例：</p><p>​整数1 2 3 4 56 就可以使用int类型的数组来存储。</p><p>​小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。</p><p>​字符串”aaa”  “bbb”  “ccc” 就可以使用String类型的数组来存储。</p><h3 id="5-2-数组的定义"><a href="#5-2-数组的定义" class="headerlink" title="5.2 数组的定义"></a>5.2 数组的定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//格式1</span></span><br><span class="line">数据类型 [] 数组名</span><br><span class="line"><span class="type">int</span> [] array;</span><br><span class="line"></span><br><span class="line"><span class="comment">//格式2</span></span><br><span class="line">数据类型 数组名 []</span><br><span class="line"><span class="type">int</span> array[];</span><br><span class="line"></span><br><span class="line"><span class="comment">//简化格式:</span></span><br><span class="line">数据类型[] 数组名 = &#123;元素<span class="number">1</span>，元素<span class="number">2</span>，元素<span class="number">3</span>，元素<span class="number">4.</span>..&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">double</span>[] array = &#123;<span class="number">1.1</span>,<span class="number">1.2</span>,<span class="number">1.3</span>&#125;;</span><br></pre></td></tr></table></figure><p><strong>详解</strong>：</p><p>数据类型：限定了数组以后能存什么类型的数据。</p><p>方括号：表示现在定义的是一个数组。</p><p>数组名：就是一个名字而已，方便以后使用。</p><blockquote><p>平时习惯性使用第一种方式。</p></blockquote><h3 id="5-3-数组的静态初始化"><a href="#5-3-数组的静态初始化" class="headerlink" title="5.3.数组的静态初始化"></a>5.3.数组的静态初始化</h3><p><strong>格式：</strong><code>数据类型[] 数组名 = new 数据类型[]&#123;元素1，元素2，元素3，元素4...&#125;;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line"><span class="type">double</span>[] arr = <span class="keyword">new</span> <span class="title class_">double</span>[] &#123;<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">1.3</span>&#125;;</span><br></pre></td></tr></table></figure><p><strong>格式详解</strong>：</p><p>​数据类型：限定了数组以后能存什么类型的数据。</p><p>​方括号：表示现在定义的是一个数组。</p><p>​数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。</p><p>​arr   namesArr</p><p>​new：就是给数组在内存中开辟了一个空间。</p><p>​数据类型：限定了数组以后能存什么类型的数据。</p><p>​  前面和后面的数据类型一定要保持一致。</p><p>​int[] arr &#x3D; new double[]{11,22,33};&#x2F;&#x2F;错误写法</p><p>​方括号：表示现在定义的是一个数组。</p><p>​大括号：表示数组里面的元素。元素也就是存入到数组中的数据。</p><p>​多个元素之间，一定要用逗号隔开。</p><blockquote><p>注意1.等号前后的数据类型必须保持一致。</p><p>注意2.数组一旦创建之后，长度不能发生变化。</p></blockquote><p>练习1：</p><p>定义数组存储5个学生的年龄。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给数组限定什么类型？ <span class="type">int</span></span><br><span class="line"><span class="number">2.</span>利用静态初始化完成创建并添加元素</span><br><span class="line"><span class="type">int</span>[] agesArr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] agesArr = &#123;<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-4-地址值"><a href="#5-4-地址值" class="headerlink" title="5.4 地址值"></a>5.4 地址值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr);<span class="comment">//[I@6d03e736</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span>[] arr2 = &#123;<span class="number">1.1</span>,<span class="number">2.2</span>,<span class="number">3.3</span>&#125;;</span><br><span class="line">System.out.println(arr2);<span class="comment">//[D@568db2f2</span></span><br></pre></td></tr></table></figure><p>打印数组的时候，实际出现的是数组的地址值。</p><p>数组的地址值：就表示数组在内存中的位置。</p><p>以[I@6d03e736为例：</p><p>[ ：表示现在打印的是一个数组。</p><p>I：表示现在打印的数组是int类型的。</p><p>@：仅仅是一个间隔符号而已。</p><p>6d03e736：就是数组在内存中真正的地址值。（十六进制的）</p><p>但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。</p><p>地址值对于我们来说，作用不大，简单了解。</p><h3 id="5-5-数组元素访问"><a href="#5-5-数组元素访问" class="headerlink" title="5.5 数组元素访问"></a>5.5 数组元素访问</h3><p>格式：</p><p>​数组名[索引];</p><p>作用：</p><ul><li><p>获取数组中对应索引上的值</p></li><li><p>修改数组中对应索引上的值</p><p>一旦修改之后，原来的值就会被覆盖了。</p></li></ul><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrDemo2</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        数组中元素访问的格式：</span></span><br><span class="line"><span class="comment">                数组名[索引];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         作用：</span></span><br><span class="line"><span class="comment">            1.获取指定索引上对应的元素</span></span><br><span class="line"><span class="comment">            2.修改指定索引上对应的元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">       <span class="comment">//需求1：获取arr数组中，3索引上的值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> arr[<span class="number">3</span>];</span><br><span class="line">        System.out.println(number);</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//需求2：将arr数组中，3索引上的值修改为10</span></span><br><span class="line">            arr[<span class="number">3</span>] = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;修改之后为:&quot;</span> + arr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6-索引"><a href="#5-6-索引" class="headerlink" title="5.6 索引"></a>5.6 索引</h3><p>​也叫角标、下标</p><p>​就是数组容器中每一个小格子对应的编号。</p><p>索引的特点：</p><ul><li>索引一定是从0开始的。</li><li>连续不间断。</li><li>逐个+1增长。</li></ul><h3 id="5-7-数组的遍历"><a href="#5-7-数组的遍历" class="headerlink" title="5.7 数组的遍历"></a>5.7 数组的遍历</h3><p>遍历：就是把数组里面所有的内容一个一个全部取出来。</p><p>数组的长度：数组名.length;</p><p>通用代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    <span class="comment">//在循环的过程中，i依次表示数组中的每一个索引</span></span><br><span class="line">    sout(arr[i]);<span class="comment">//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-8-数组的动态初始化"><a href="#5-8-数组的动态初始化" class="headerlink" title="5.8 数组的动态初始化"></a>5.8 数组的动态初始化</h3><p>格式：</p><p>​数据类型[] 数组名 &#x3D; new 数据类型[数组的长度];</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义一个数组，存3个人的年龄，年龄未知</span></span><br><span class="line"><span class="type">int</span>[] agesArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。</span></span><br><span class="line"><span class="type">int</span>[] scoresArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>数组的默认初始化值：</p><p>整数类型：0</p><p>小数类型：0.0</p><p>布尔类型：false</p><p>字符类型：’\u0000’</p><p>引用类型：null</p><h3 id="5-9-数组两种初始化方式的区别"><a href="#5-9-数组两种初始化方式的区别" class="headerlink" title="5.9 数组两种初始化方式的区别"></a>5.9 数组两种初始化方式的区别</h3><p>静态初始化：int[] arr &#x3D; {1,2,3,4,5};</p><p>动态初始化：int[] arr &#x3D; new int[3];</p><p>静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。</p><p>动态初始化：手动指定数组长度，由系统给出默认初始化值。</p><p>使用场景：</p><p>只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。</p><p>已经明确了要操作的所有数据，推荐使用静态初始化。</p><p>举例：</p><ul><li><p>使用数组来存储键盘录入的5个整数。</p><p>int[] arr &#x3D; new int[5];</p></li><li><p>将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100</p><p>int[] arr &#x3D; new int[5];</p><p>arr[0] &#x3D; 66;</p><p>arr[1] &#x3D; 77;</p><p>… 虽然可以实现，但是太麻烦了。</p><p>建议使用静态初始化：int[] arr &#x3D; {66,77,88,99,100};</p></li></ul><h3 id="5-10-数组常见问题"><a href="#5-10-数组常见问题" class="headerlink" title="5.10 数组常见问题"></a>5.10 数组常见问题</h3><p>当访问了数组中不存在的索引，就会引发索引越界异常。</p><p>避免：</p><p>​针对于任意一个数组，索引的范围：<br>       最小索引：0<br>       最大索引：数组的长度 - 1<br>​               数组名.length - 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrDemo6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">//用索引来访问数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">10</span>]);<span class="comment">// 越界</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、方法"><a href="#六、方法" class="headerlink" title="六、方法"></a>六、方法</h2><h3 id="6-1-方法的概念"><a href="#6-1-方法的概念" class="headerlink" title="6.1 方法的概念"></a>6.1 方法的概念</h3><p>​方法（method）是程序中最小的执行单元</p><p>注意：</p><ul><li>方法必须先创建才可以使用，该过程成为方法定义</li><li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li></ul><h3 id="6-2-方法的定义和调用"><a href="#6-2-方法的定义和调用" class="headerlink" title="6.2 方法的定义和调用"></a>6.2 方法的定义和调用</h3><h4 id="6-2-1-无参数方法定义和调用"><a href="#6-2-1-无参数方法定义和调用" class="headerlink" title="6.2.1 无参数方法定义和调用"></a>6.2.1 无参数方法定义和调用</h4><ul><li><p>定义格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (   ) &#123;</span><br><span class="line"><span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">method</span> <span class="params">(    )</span> &#123;</span><br><span class="line"><span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>调用格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法名();</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">method();</span><br></pre></td></tr></table></figure></li><li><p>注意：</p><p>​方法必须先定义，后调用，否则程序将报错</p></li></ul><p><strong>无参数方法的练习</strong></p><ul><li>需求：设计一个方法用于打印两个数中的较大数 </li><li>思路：<ul><li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li><li>②方法中定义两个变量，用于保存两个数字 </li><li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li><li>④在main()方法中调用定义好的方法</li></ul></li><li>代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法</span></span><br><span class="line">        getMax();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getMax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//方法中定义两个变量，用于保存两个数字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-2-2-带参数方法定义和调用"><a href="#6-2-2-带参数方法定义和调用" class="headerlink" title="6.2.2 带参数方法定义和调用"></a>6.2.2 带参数方法定义和调用</h4><ul><li><p>定义格式：</p><p>参数：由数据类型和变量名组成 -  数据类型 变量名</p><p>参数范例：int a</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>) &#123;</span><br><span class="line">方法体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>, 参数<span class="number">2</span>, 参数<span class="number">3.</span>..) &#123;</span><br><span class="line">方法体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isEvenNumber</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><pre><code>方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错方法定义时，多个参数之间使用逗号( ，)分隔</code></pre></li></ul></li><li><p>调用格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法名(参数)；</span><br><span class="line"></span><br><span class="line">方法名(参数<span class="number">1</span>,参数<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isEvenNumber(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</li></ul></li></ul><h3 id="6-3-带返回值方法的定义和调用"><a href="#6-3-带返回值方法的定义和调用" class="headerlink" title="6.3 带返回值方法的定义和调用"></a>6.3 带返回值方法的定义和调用</h3><ul><li><p>定义格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名 ( 参数 ) &#123; </span><br><span class="line"><span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isEvenNumber</span><span class="params">( <span class="type">int</span> number )</span> &#123;           </span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">( <span class="type">int</span> a, <span class="type">int</span> b )</span> &#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="number">100</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</li></ul></li></ul></li><li><p>调用格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法名 ( 参数 ) ;</span><br><span class="line">数据类型 变量名 = 方法名 ( 参数 ) ;</span><br></pre></td></tr></table></figure></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">isEvenNumber ( <span class="number">5</span> ) ;</span><br><span class="line"><span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span>  isEvenNumber ( <span class="number">5</span> ); </span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li></ul></li></ul></li></ul><h3 id="6-4-方法的注意事项"><a href="#6-4-方法的注意事项" class="headerlink" title="6.4 方法的注意事项"></a>6.4 方法的注意事项</h3><h4 id="6-4-1-方法的注意事项"><a href="#6-4-1-方法的注意事项" class="headerlink" title="6.4.1 方法的注意事项"></a>6.4.1 方法的注意事项</h4><ul><li><p>方法不能嵌套定义</p><ul><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodOne</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodTwo</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 这里会引发编译错误!!!</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据</p><ul><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodTwo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//return 100; 编译错误，因为没有具体返回值类型</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//System.out.println(100); return语句后面不能跟数据或代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="6-4-2-方法的通用格式"><a href="#6-4-2-方法的通用格式" class="headerlink" title="6.4.2 方法的通用格式"></a>6.4.2 方法的通用格式</h4><ul><li><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名(参数) &#123;</span><br><span class="line">   方法体; </span><br><span class="line">   <span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>解释：</p><ul><li><p>public static 修饰符，目前先记住这个格式</p><p>返回值类型方法操作完毕之后返回的数据的数据类型</p><p>​如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p><p> 方法名调用方法时候使用的标识</p><p> 参数由数据类型和变量名组成，多个参数之间用逗号隔开</p><p> 方法体完成功能的代码块</p><p> return如果方法操作完毕，有数据返回，用于把数据返回给调用者</p></li></ul></li><li><p>定义方法时，要做到两个明确</p><ul><li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型</li><li>明确参数：主要是明确参数的类型和数量</li></ul></li><li><p>调用方法时的注意：</p><ul><li>void类型的方法，直接调用即可</li><li>非void类型的方法，推荐用变量接收调用</li></ul></li></ul><h3 id="6-5-方法重载"><a href="#6-5-方法重载" class="headerlink" title="6.5 方法重载"></a>6.5 方法重载</h3><h4 id="6-5-1-方法重载"><a href="#6-5-1-方法重载" class="headerlink" title="6.5.1 方法重载"></a>6.5.1 方法重载</h4><ul><li><p>方法重载概念</p><p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p><ul><li>多个方法在同一个类中</li><li>多个方法具有相同的方法名</li><li>多个方法的参数不相同，类型不同或者数量不同</li></ul></li><li><p>注意：</p><ul><li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</li><li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载</li></ul></li><li><p>正确范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">double</span> a)</span> &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">float</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>错误范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123; <span class="comment">/*错误原因：重载与返回值无关*/</span></span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">double</span> a)</span> &#123; <span class="comment">/*错误原因：这是两个类的两个fn方法*/</span></span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-5-2-方法重载练习"><a href="#6-5-2-方法重载练习" class="headerlink" title="6.5.2 方法重载练习"></a>6.5.2 方法重载练习</h4><ul><li><p>需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） </p></li><li><p>思路：</p><ul><li>①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</li><li>②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</li><li>③定义所有的重载方法，两个byte类型与两个short类型参数 </li><li>④完成方法的调用，测试运行结果</li></ul></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        System.out.println(compare(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="type">byte</span>) <span class="number">10</span>, (<span class="type">byte</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="type">short</span>) <span class="number">10</span>, (<span class="type">short</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare(<span class="number">10L</span>, <span class="number">20L</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//byte</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">byte</span> a, <span class="type">byte</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//short</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">short</span> a, <span class="type">short</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;short&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//long</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;long&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="七、面向对象"><a href="#七、面向对象" class="headerlink" title="七、面向对象"></a>七、面向对象</h2><h3 id="7-1-类和对象"><a href="#7-1-类和对象" class="headerlink" title="7.1 类和对象"></a>7.1 类和对象</h3><h4 id="7-1-1-类和对象的理解"><a href="#7-1-1-类和对象的理解" class="headerlink" title="7.1.1 类和对象的理解"></a>7.1.1 类和对象的理解</h4><p>客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。</p><ul><li>类<ul><li>类的理解<ul><li>类是对现实生活中一类具有共同属性和行为的事物的抽象</li><li>类是对象的数据类型，类是具有相同属性和行为的一组对象的集合</li><li>简单理解：类就是对现实事物的一种描述</li></ul></li><li>类的组成<ul><li>属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）</li><li>行为：指事物能执行的操作，例如：手机事物（打电话，发短信）</li></ul></li></ul></li><li>类和对象的关系<ul><li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li><li>对象：是能够看得到摸的着的真实存在的实体</li><li>简单理解：<strong>类是对事物的一种描述，对象则为具体存在的事物</strong></li></ul></li></ul><h4 id="7-1-2-类的定义"><a href="#7-1-2-类的定义" class="headerlink" title="7.1.2 类的定义"></a>7.1.2 类的定义</h4><p>类的组成是由属性和行为两部分组成</p><ul><li>属性：在类中通过成员变量来体现（类中方法外的变量）</li><li>行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</li></ul><p>类的定义步骤：</p><p>①定义类</p><p>②编写类的成员变量</p><p>③编写类的成员方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class 类名 &#123;</span><br><span class="line"><span class="comment">// 成员变量</span></span><br><span class="line">变量<span class="number">1</span>的数据类型 变量<span class="number">1</span>；</span><br><span class="line">变量<span class="number">2</span>的数据类型 变量<span class="number">2</span>;</span><br><span class="line">…</span><br><span class="line"><span class="comment">// 成员方法</span></span><br><span class="line">方法<span class="number">1</span>;</span><br><span class="line">方法<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    手机类：</span></span><br><span class="line"><span class="comment">        类名：</span></span><br><span class="line"><span class="comment">        手机(Phone)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        成员变量：</span></span><br><span class="line"><span class="comment">        品牌(brand)</span></span><br><span class="line"><span class="comment">        价格(price)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        成员方法：</span></span><br><span class="line"><span class="comment">        打电话(call)</span></span><br><span class="line"><span class="comment">        发短信(sendMessage)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打电话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;发短信&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-1-3-对象的使用"><a href="#7-1-3-对象的使用" class="headerlink" title="7.1.3 对象的使用"></a>7.1.3 对象的使用</h4><ul><li>创建对象的格式：<ul><li>类名 对象名 &#x3D; new 类名();</li></ul></li><li>调用成员的格式：<ul><li>对象名.成员变量</li><li>对象名.成员方法();</li></ul></li><li>示例代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    创建对象</span></span><br><span class="line"><span class="comment">        格式：类名 对象名 = new 类名();</span></span><br><span class="line"><span class="comment">        范例：Phone p = new Phone();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    使用对象</span></span><br><span class="line"><span class="comment">        1：使用成员变量</span></span><br><span class="line"><span class="comment">            格式：对象名.变量名</span></span><br><span class="line"><span class="comment">            范例：p.brand</span></span><br><span class="line"><span class="comment">        2：使用成员方法</span></span><br><span class="line"><span class="comment">            格式：对象名.方法名()</span></span><br><span class="line"><span class="comment">            范例：p.call()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Phone</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Phone</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量</span></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        p.brand = <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">        p.price = <span class="number">2999</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        p.call();</span><br><span class="line">        p.sendMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-4-学生对象-练习"><a href="#7-1-4-学生对象-练习" class="headerlink" title="7.1.4 学生对象-练习"></a>7.1.4 学生对象-练习</h4><ul><li>需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用</li><li>分析：<ul><li>成员变量：姓名，年龄…</li><li>成员方法：学习，做作业…</li></ul></li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;好好学习，天天向上&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doHomework</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘敲烂，月薪过万&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用对象</span></span><br><span class="line">        System.out.println(s.name + <span class="string">&quot;,&quot;</span> + s.age);</span><br><span class="line"></span><br><span class="line">        s.name = <span class="string">&quot;林青霞&quot;</span>;</span><br><span class="line">        s.age = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(s.name + <span class="string">&quot;,&quot;</span> + s.age);</span><br><span class="line"></span><br><span class="line">        s.study();</span><br><span class="line">        s.doHomework();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-对象内存图"><a href="#7-2-对象内存图" class="headerlink" title="7.2 对象内存图"></a>7.2 对象内存图</h3><p>Java内存分配：</p><ul><li>堆：new出来的东西会在这块内存中开辟空间并产生地址</li><li>栈：方法运行时所进入的内存，变量也是在这里</li><li>方法区：字节码文件加载时进入的内存</li><li>本地方法栈</li><li>寄存器</li></ul><h4 id="7-2-1-单个对象内存图"><a href="#7-2-1-单个对象内存图" class="headerlink" title="7.2.1 单个对象内存图"></a>7.2.1 单个对象内存图</h4><p><img src="/2024/07/07/Java/Java/image-20221206143324833.png" alt="image-20221206143324833"></p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206144247399.png" alt="image-20221206144247399"></p><h4 id="7-2-2-多个对象内存图"><a href="#7-2-2-多个对象内存图" class="headerlink" title="7.2.2 多个对象内存图"></a>7.2.2 多个对象内存图</h4><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206144953395.png" alt="image-20221206144953395"></p><ul><li>总结：</li></ul><p>多个对象在堆内存中，都有不同的内存划分，成员变量存储在各自的内存区域中，成员方法多个对象共用的一份</p><h4 id="7-2-3-多个引用指向同一个对象"><a href="#7-2-3-多个引用指向同一个对象" class="headerlink" title="7.2.3 多个引用指向同一个对象"></a>7.2.3 多个引用指向同一个对象</h4><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206145743062.png" alt="image-20221206145743062"></p><h3 id="7-3-成员变量和局部变量"><a href="#7-3-成员变量和局部变量" class="headerlink" title="7.3 成员变量和局部变量"></a>7.3 成员变量和局部变量</h3><h4 id="7-3-1-成员变量和局部变量的区别"><a href="#7-3-1-成员变量和局部变量的区别" class="headerlink" title="7.3.1 成员变量和局部变量的区别"></a>7.3.1 成员变量和局部变量的区别</h4><ul><li>类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）</li><li>内存中位置不同：成员变量（堆内存）局部变量（栈内存）</li><li>生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，随着方法的调用完毕而消失）</li><li>初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）</li></ul><h3 id="7-4-封装"><a href="#7-4-封装" class="headerlink" title="7.4 封装"></a>7.4 封装</h3><h4 id="7-4-1-封装思想"><a href="#7-4-1-封装思想" class="headerlink" title="7.4.1 封装思想"></a>7.4.1 封装思想</h4><ol><li><p>封装概述<br>是面向对象三大特征之一（封装，继承，多态）</p><p><strong>对象代表什么，就得封装对应的数据，并提供数据对应的行为</strong> </p></li><li><p>封装代码实现<br>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>成员变量private，提供对应的getXxx()&#x2F;setXxx()方法</p></li></ol><h4 id="7-4-2-private关键字"><a href="#7-4-2-private关键字" class="headerlink" title="7.4.2 private关键字"></a>7.4.2 private关键字</h4><p>private是一个修饰符，可以用来修饰成员（成员变量，成员方法）</p><ul><li><p>被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作</p><ul><li>提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰</li><li>提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰</li></ul></li><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供get/set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span> || a&gt;<span class="number">120</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你给的年龄有误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//给成员变量赋值</span></span><br><span class="line">        s.name = <span class="string">&quot;林青霞&quot;</span>;</span><br><span class="line">        s.setAge(<span class="number">30</span>);</span><br><span class="line">        <span class="comment">//调用show方法</span></span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="7-4-3-private的使用"><a href="#7-4-3-private的使用" class="headerlink" title="7.4.3 private的使用"></a>7.4.3 private的使用</h4><ul><li><p>需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 </p></li><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get/set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String n)</span> &#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用set方法给成员变量赋值</span></span><br><span class="line">        s.setName(<span class="string">&quot;林青霞&quot;</span>);</span><br><span class="line">        s.setAge(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        s.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用get方法获取成员变量的值</span></span><br><span class="line">        System.out.println(s.getName() + <span class="string">&quot;---&quot;</span> + s.getAge());</span><br><span class="line">        System.out.println(s.getName() + <span class="string">&quot;,&quot;</span> + s.getAge());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="7-4-4-this关键字"><a href="#7-4-4-this关键字" class="headerlink" title="7.4.4 this关键字"></a>7.4.4 this关键字</h4><p>同名时，调用的时候采用<strong>就近原则</strong>，谁离得近，用谁</p><p>this的本质：所在方法调用者的地址值</p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206151107714.png" alt="image-20221206151107714"></p><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206151400728.png" alt="image-20221206151400728"></p><ul><li>this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）<ul><li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量</li><li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-5-构造方法"><a href="#7-5-构造方法" class="headerlink" title="7.5 构造方法"></a>7.5 构造方法</h3><h4 id="7-5-1-构造方法概述"><a href="#7-5-1-构造方法概述" class="headerlink" title="7.5.1 构造方法概述"></a>7.5.1 构造方法概述</h4><p>构造方法是一种特殊的方法</p><ul><li><p>作用：创建对象   Student stu &#x3D; <strong>new Student();</strong></p></li><li><p>格式：</p><p>public class 类名{</p><p>​        修饰符 类名( 参数 ) {</p><p>​        }</p><p>}</p></li><li><p>功能：主要是完成对象数据的初始化</p></li><li><p>示例代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-2-构造方法的注意事项"><a href="#7-5-2-构造方法的注意事项" class="headerlink" title="7.5.2 构造方法的注意事项"></a>7.5.2 构造方法的注意事项</h4><ul><li>构造方法的创建</li></ul><p>如果没有定义构造方法，系统将给出一个默认的无参数构造方法<br>如果定义了构造方法，系统将不再提供默认的构造方法</p><ul><li>构造方法的重载</li></ul><p>如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</p><ul><li>推荐的使用方式</li></ul><p>无论是否使用，都手工书写无参数构造方法</p><ul><li>重要功能！</li></ul><p>可以使用带参构造，为成员变量进行初始化</p><ul><li>示例代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(String name)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林青霞&quot;</span>);</span><br><span class="line">        s2.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(int age)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">30</span>);</span><br><span class="line">        s3.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(String name,int age)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林青霞&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        s4.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-3-标准类制作"><a href="#7-5-3-标准类制作" class="headerlink" title="7.5.3 标准类制作"></a>7.5.3 标准类制作</h4><p>① 类名需要见名知意</p><p>② 成员变量使用private修饰</p><p>③ 提供至少两个构造方法 </p><ul><li>无参构造方法</li><li>带全部参数的构造方法</li></ul><p>④ get和set方法 </p><p>​提供每一个成员变量对应的setXxx()&#x2F;getXxx()</p><p>⑤ 如果还有其他行为，也需要写上</p><h4 id="7-5-4-练习1"><a href="#7-5-4-练习1" class="headerlink" title="7.5.4 练习1"></a>7.5.4 练习1</h4><p>需求：</p><p>​定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 </p><ul><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    创建对象并为其成员变量赋值的两种方式</span></span><br><span class="line"><span class="comment">        1:无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line"><span class="comment">        2:使用带参构造方法直接创建带有属性值的对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.setName(<span class="string">&quot;林青霞&quot;</span>);</span><br><span class="line">        s1.setAge(<span class="number">30</span>);</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用带参构造方法直接创建带有属性值的对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林青霞&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        s2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-4-练习2"><a href="#7-5-4-练习2" class="headerlink" title="7.5.4 练习2"></a>7.5.4 练习2</h4><p><img src="/2024/07/07/Java/Java/111.jpg" alt="111"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">//1.私有化全部的成员变量</span></span><br><span class="line">    <span class="comment">//2.空参构造</span></span><br><span class="line">    <span class="comment">//3.带全部参数的构造</span></span><br><span class="line">    <span class="comment">//4.针对于每一个私有化的成员变量都要提供其对应的get和set方法</span></span><br><span class="line">    <span class="comment">//5.如果当前事物还有其他行为，那么也要写出来，比如学生的吃饭，睡觉等行为</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;<span class="comment">//用户名</span></span><br><span class="line">    <span class="keyword">private</span> String password;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> String email;<span class="comment">//邮箱</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> gender;<span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;<span class="comment">//年龄</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//空参构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//带全部参数的构造</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password, String email, <span class="type">char</span> gender, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get和set</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(<span class="type">char</span> gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(username + <span class="string">&quot;在吃饭&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//写一个标准的javabean类</span></span><br><span class="line">        <span class="comment">//咱们在课后只要能把这个标准的javabean能自己写出来，那么就表示今天的知识点就ok了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用空参构造创建对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="comment">//如果利用空参创建对象，还想赋值只能用set方法赋值</span></span><br><span class="line">        u1.setUsername(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        u1.setPassword(<span class="string">&quot;1234qwer&quot;</span>);</span><br><span class="line">        u1.setEmail(<span class="string">&quot;itheima@itcast.cn&quot;</span>);</span><br><span class="line">        u1.setGender(<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line">        u1.setAge(<span class="number">23</span>);</span><br><span class="line">        <span class="comment">//获取属性的值并打印</span></span><br><span class="line">        System.out.println(u1.getUsername() + <span class="string">&quot;, &quot;</span> + u1.getPassword()</span><br><span class="line">                + <span class="string">&quot;, &quot;</span> + u1.getEmail() + <span class="string">&quot;, &quot;</span> + u1.getGender() + <span class="string">&quot;, &quot;</span> + u1.getAge());</span><br><span class="line">        u1.eat();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//简单的办法</span></span><br><span class="line">        <span class="comment">//利用带全部参数的构造来创建对象</span></span><br><span class="line">        <span class="comment">//快捷键:ctrl + p</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;12345678&quot;</span>,<span class="string">&quot;lisi@itcast.cn&quot;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">24</span>);</span><br><span class="line">        System.out.println(u2.getUsername() + <span class="string">&quot;, &quot;</span> + u2.getPassword()</span><br><span class="line">                + <span class="string">&quot;, &quot;</span> + u2.getEmail() + <span class="string">&quot;, &quot;</span> + u2.getGender() + <span class="string">&quot;, &quot;</span> + u2.getAge());</span><br><span class="line">        u2.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-6-综合练习"><a href="#7-6-综合练习" class="headerlink" title="7.6 综合练习"></a>7.6 综合练习</h3><h4 id="7-6-1-文字版格斗游戏"><a href="#7-6-1-文字版格斗游戏" class="headerlink" title="7.6.1 文字版格斗游戏"></a>7.6.1 文字版格斗游戏</h4><p><img src="/2024/07/07/Java/Java/../../../Blogs/Java/Java.assets/image-20221206152950187.png" alt="image-20221206152950187"> </p><h2 id="八、常用API"><a href="#八、常用API" class="headerlink" title="八、常用API"></a>八、常用API</h2><h3 id="8-1-API"><a href="#8-1-API" class="headerlink" title="8.1 API"></a>8.1 API</h3><h4 id="8-1-1-API概述"><a href="#8-1-1-API概述" class="headerlink" title="8.1.1 API概述"></a>8.1.1 API概述</h4><ul><li><p>什么是API</p><p>​API (Application Programming Interface) ：应用程序编程接口</p></li><li><p>java中的API</p><p>​指的就是 JDK 中提供的各种功能的 Java类，这些类将底层的实现封装了起来，我们不需要关心这些类是如何实现的，只需要学习这些类如何使用即可，我们可以通过帮助文档来学习这些API如何使用。</p></li></ul><h4 id="8-1-2-如何使用API帮助文档"><a href="#8-1-2-如何使用API帮助文档" class="headerlink" title="8.1.2 如何使用API帮助文档"></a>8.1.2 如何使用API帮助文档</h4><p><a href="https://blog.csdn.net/shizheng_Li/article/details/114281185">Java API帮助文档怎么查找？_阿正的梦工坊的博客-CSDN博客_java帮助文档在哪</a></p><ul><li>打开帮助文档</li></ul><p><img src="/2024/07/07/Java/Java/01.png" alt="01"></p><ul><li>找到索引选项卡中的输入框</li></ul><p><img src="/2024/07/07/Java/Java/02.png" alt="02"></p><ul><li>在输入框中输入Random</li></ul><p><img src="/2024/07/07/Java/Java/03.png" alt="03"></p><ul><li>看类在哪个包下</li></ul><p><img src="/2024/07/07/Java/Java/04.png" alt="04"></p><ul><li>看类的描述</li></ul><p><img src="/2024/07/07/Java/Java/05.png" alt="05"></p><ul><li>看构造方法</li></ul><p><img src="/2024/07/07/Java/Java/06.png" alt="06"></p><ul><li>看成员方法</li></ul><p><img src="/2024/07/07/Java/Java/07.png" alt="07"></p><h3 id="8-2-String类"><a href="#8-2-String类" class="headerlink" title="8.2 String类"></a>8.2 String类</h3><h4 id="8-2-1-String类概述"><a href="#8-2-1-String类概述" class="headerlink" title="8.2.1 String类概述"></a>8.2.1 String类概述</h4><p>​String 类代表字符串，Java 程序中的所有字符串文字（例如“abc”）都被实现为此类的实例。也就是说，Java 程序中所有的双引号字符串，都是 String 类的对象。String 类在 java.lang 包下，所以使用的时候不需要导包！</p><h4 id="8-2-2-String类的特点"><a href="#8-2-2-String类的特点" class="headerlink" title="8.2.2 String类的特点"></a>8.2.2 String类的特点</h4><ul><li>字符串不可变，它们的值在创建后不能被更改</li><li>虽然 String 的值是不可变的，但是它们可以被共享</li><li>字符串效果上相当于字符数组( char[] )，但是底层原理是字节数组( byte[] )</li></ul><h4 id="8-2-3-String类的构造方法"><a href="#8-2-3-String类的构造方法" class="headerlink" title="8.2.3 String类的构造方法"></a>8.2.3 String类的构造方法</h4><ul><li><p>常用的构造方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public   String()</td><td>创建一个空白字符串对象，不含有任何内容</td></tr><tr><td>public   String(char[] chs)</td><td>根据字符数组的内容，来创建字符串对象</td></tr><tr><td>public   String(byte[] bys)</td><td>根据字节数组的内容，来创建字符串对象</td></tr><tr><td>String s &#x3D;   “abc”;</td><td>直接赋值的方式创建字符串对象，内容就是abc</td></tr></tbody></table></li><li><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//public String()：创建一个空白字符串对象，不含有任何内容</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;s1:&quot;</span> + s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(char[] chs)：根据字符数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="comment">// 需求：修改字符串中的内容</span></span><br><span class="line">        <span class="comment">// 字符串变为字符，修改，再变为字符串</span></span><br><span class="line">        <span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line">        System.out.println(<span class="string">&quot;s2:&quot;</span> + s2);<span class="comment">// abc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(byte[] bys)：根据字节数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="comment">// 应用场景：以后再网络当中传输的数据的数据其实都是字节信息</span></span><br><span class="line">        <span class="comment">// 我们一般要把字节信息进行转换，转成字符串，此时就要用到这个</span></span><br><span class="line">        <span class="type">byte</span>[] bys = &#123;<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bys);</span><br><span class="line">        System.out.println(<span class="string">&quot;s3:&quot;</span> + s3);<span class="comment">//abc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//String s = “abc”;直接赋值的方式创建字符串对象，内容就是abc</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;s4:&quot;</span> + s4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-4-创建字符串对象两种方式的区别"><a href="#8-2-4-创建字符串对象两种方式的区别" class="headerlink" title="8.2.4 创建字符串对象两种方式的区别"></a>8.2.4 创建字符串对象两种方式的区别</h4><ul><li><p>通过构造方法创建</p><p>​通过 new 创建的字符串对象，每一次 new 都会申请一个内存空间，虽然内容相同，但是地址值不同</p></li><li><p>直接赋值方式创建</p><p>​以“”方式给出的字符串，只要字符序列相同(顺序和大小写)，无论在程序代码中出现几次，JVM 都只会建立一个 String 对象，并在字符串池中维护</p></li></ul><h4 id="8-2-5-字符串的比较"><a href="#8-2-5-字符串的比较" class="headerlink" title="8.2.5 字符串的比较"></a>8.2.5 字符串的比较</h4><h5 id="①、-号的作用"><a href="#①、-号的作用" class="headerlink" title="①、&#x3D;&#x3D;号的作用"></a>①、&#x3D;&#x3D;号的作用</h5><ul><li>比较基本数据类型：比较的是具体的值</li><li>比较引用数据类型：比较的是对象地址值</li></ul><h5 id="②、equals方法的作用"><a href="#②、equals方法的作用" class="headerlink" title="②、equals方法的作用"></a>②、equals方法的作用</h5><ul><li><p>方法介绍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(String s)</span>     比较两个字符串内容是否相同、区分大小写</span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equalslgnoreCase</span><span class="params">(要比较的字符串)</span> 忽略大小写的比较</span><br></pre></td></tr></table></figure></li><li><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//构造方法的方式得到对象</span></span><br><span class="line">        <span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//直接赋值的方式得到对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串对象地址是否相同</span></span><br><span class="line">        System.out.println(s1 == s2);<span class="comment">//false</span></span><br><span class="line">        System.out.println(s1 == s3);<span class="comment">//false</span></span><br><span class="line">        System.out.println(s3 == s4);<span class="comment">//true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串内容是否相同</span></span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">        System.out.println(s1.equals(s3));</span><br><span class="line">        System.out.println(s3.equals(s4));</span><br><span class="line">        <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-6-用户登录案例"><a href="#8-2-6-用户登录案例" class="headerlink" title="8.2.6 用户登录案例"></a>8.2.6 用户登录案例</h4><h5 id="①、案例需求"><a href="#①、案例需求" class="headerlink" title="①、案例需求"></a>①、案例需求</h5><p>​已知用户名和密码，请用程序实现模拟用户登录。总共给三次机会，登录之后，给出相应的提示</p><h5 id="②、代码实现"><a href="#②、代码实现" class="headerlink" title="②、代码实现"></a>②、代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span>登录案例 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义两个变量用来记录正确的用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">rightUsername</span> <span class="operator">=</span> <span class="string">&quot;itheima&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rightPassword</span> <span class="operator">=</span> <span class="string">&quot;1234qwer&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.键盘录入用户名和密码</span></span><br><span class="line">        <span class="comment">//ctrl + alt + T 选择包裹方式</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;<span class="comment">//0 1 2</span></span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.判断比较</span></span><br><span class="line">            <span class="keyword">if</span> (username.equals(rightUsername) &amp;&amp; password.equals(rightPassword)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                <span class="comment">//如果正确，循环结束</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//最后一次机会</span></span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">2</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;账户&quot;</span> + username + <span class="string">&quot;被锁定，请联系黑马程序员官方小姐姐：XXXXXXX&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//不是最后一次机会</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;用户名或密码错误，登录失败,还剩下&quot;</span> + (<span class="number">2</span> - i) + <span class="string">&quot;次机会&quot;</span>);<span class="comment">//2 1 0</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-7-遍历字符串案例"><a href="#8-2-7-遍历字符串案例" class="headerlink" title="8.2.7 遍历字符串案例"></a>8.2.7 遍历字符串案例</h4><h5 id="①、案例需求-1"><a href="#①、案例需求-1" class="headerlink" title="①、案例需求"></a>①、案例需求</h5><p>​键盘录入一个字符串，使用程序实现在控制台遍历该字符串</p><h5 id="②、直接遍历字符串"><a href="#②、直接遍历字符串" class="headerlink" title="②、直接遍历字符串"></a>②、直接遍历字符串</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span>字符串直接遍历 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//两个方法：</span></span><br><span class="line">        <span class="comment">//charAt()：会根据索引获取对应的字符</span></span><br><span class="line">        <span class="comment">//length(): 会返回字符串的长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.键盘录入一个字符串</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入字符串&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(str);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="comment">//i 依次表示字符串的每一个索引</span></span><br><span class="line">            <span class="comment">//索引的范围：0 ~  长度-1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//根据索引获取字符串里面的每一个字符</span></span><br><span class="line">            <span class="comment">//ctrl + alt + V 自动生成左边的接受变量</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-8-统计字符次数案例"><a href="#8-2-8-统计字符次数案例" class="headerlink" title="8.2.8 统计字符次数案例"></a>8.2.8 统计字符次数案例</h4><h5 id="①案例需求"><a href="#①案例需求" class="headerlink" title="①案例需求"></a>①案例需求</h5><p>​键盘录入一个字符串，统计该字符串中大写字母字符，小写字母字符，数字字符出现的次数(不考虑其他字符)</p><h5 id="②、代码实现-1"><a href="#②、代码实现-1" class="headerlink" title="②、代码实现"></a>②、代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test4</span>统计个数 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//键盘录入一个字符串，统计大写，小写，数字出现的次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.键盘录入一个字符串</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.统计 --- 计数器count</span></span><br><span class="line">        <span class="comment">//此时我要统计的有3样东西，所以要定义3个计数器分别进行统计</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">bigCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">smallCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">numberCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//得到这个字符串里面每一个字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="comment">//i 表示字符串中的索引</span></span><br><span class="line">            <span class="comment">//c 表示字符串中的每一个字符</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//对c进行判断</span></span><br><span class="line">            <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">                smallCount++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                bigCount++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">                numberCount++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.当循环结束之后，三个变量记录的就是对应的个数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;大写字符有:&quot;</span> + bigCount + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小写字符有:&quot;</span> + smallCount + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;数字字符有:&quot;</span> + numberCount + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-9-字符串拼接案例"><a href="#8-2-9-字符串拼接案例" class="headerlink" title="8.2.9 字符串拼接案例"></a>8.2.9 字符串拼接案例</h4><h5 id="①、案例需求-2"><a href="#①、案例需求-2" class="headerlink" title="①、案例需求"></a>①、案例需求</h5><p>​定义一个方法，把 int 数组中的数据按照指定的格式拼接成一个字符串返回，调用该方法，</p><p>​并在控制台输出结果。例如，数组为 int[] arr &#x3D; {1,2,3}; ，执行方法后的输出结果为：[1, 2, 3]</p><h5 id="②、代码实现-2"><a href="#②、代码实现-2" class="headerlink" title="②、代码实现"></a>②、代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test5</span>数组拼接成字符串 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个方法，把 int 数组中的数据按照指定的格式拼接成一个字符串返回，调用该方法，</span></span><br><span class="line">        <span class="comment">//并在控制台输出结果。例如，数组为 int[] arr = &#123;1,2,3&#125;;</span></span><br><span class="line">        <span class="comment">//执行方法后的输出结果为：[1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> arrToString(arr);</span><br><span class="line">        System.out.println(str);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//作用：把一个数组变成字符串</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">arrToString</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//拼接左括号</span></span><br><span class="line">        s = s + <span class="string">&quot;[&quot;</span>; <span class="comment">//此时是拿着长度为0的字符串，跟[进行拼接，产生一个新的字符串。</span></span><br><span class="line">        <span class="comment">//把新的字符串再赋值给s，此时变量s记录的就是新的字符串&quot;[&quot;的地址值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//下面我想得到数组里面的每一个元素并进行拼接</span></span><br><span class="line">        <span class="comment">//那么就需要遍历数组，得到每一个元素才行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//假设第一次循环:i = 0 获取的就是0索引上的元素</span></span><br><span class="line">            <span class="comment">//在拼接的时候：&quot;[&quot; + 1 + &quot;, &quot; 拼接完毕之后产生一个新的字符串 &quot;[1, &quot;</span></span><br><span class="line">            <span class="comment">//第二次循环：i = 1 获取的就是1索引上的元素</span></span><br><span class="line">            <span class="comment">//在拼接的时候： 此时s就是第一次循环结束后拼接完毕的结果：&quot;[1, &quot;</span></span><br><span class="line">            <span class="comment">//在拼接的时候：&quot;[1, &quot; + 2 + &quot;, &quot; 拼接完毕之后产生一个新的字符串 &quot;[1, 2, &quot;</span></span><br><span class="line">            <span class="comment">//...</span></span><br><span class="line">           <span class="keyword">if</span>(i == arr.length - <span class="number">1</span>)&#123;</span><br><span class="line">               <span class="comment">//如果是最后一个元素，那么不需要拼接逗号空格</span></span><br><span class="line">               s = s + arr[i];</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="comment">//如果不是最后一个元素，需要拼接元素和逗号空格</span></span><br><span class="line">               s = s + arr[i] + <span class="string">&quot;, &quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//等循环结束之后，再拼接最后一个右括号</span></span><br><span class="line">        s = s + <span class="string">&quot;]&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//用来遍历数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArr</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(arr[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[i] + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//[1, 2, 3, 4, 5]</span></span><br><span class="line">        <span class="comment">//我们现在要知道，这个最终结果是怎么来的？</span></span><br><span class="line">        <span class="comment">//从到右依次打印得来的。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-10字符串反转案例"><a href="#8-2-10字符串反转案例" class="headerlink" title="8.2.10字符串反转案例"></a>8.2.10字符串反转案例</h4><h5 id="①、案例需求-3"><a href="#①、案例需求-3" class="headerlink" title="①、案例需求"></a>①、案例需求</h5><p>​定义一个方法，实现字符串反转。键盘录入一个字符串，调用该方法后，在控制台输出结果</p><p>​例如，键盘录入 abc，输出结果 cba</p><h5 id="②、代码实现-3"><a href="#②、代码实现-3" class="headerlink" title="②、代码实现"></a>②、代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test6</span>反转字符串 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*定义一个方法，实现字符串反转。键盘录入一个字符串，调用该方法后，在控制台输出结果</span></span><br><span class="line"><span class="comment">        例如，键盘录入 abc，输出结果 cba*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义一个字符串</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="comment">//2.定义一个方法，反转字符串</span></span><br><span class="line">        <span class="comment">//abc  ---&gt;  cba</span></span><br><span class="line">        <span class="comment">//可以把字符串倒着遍历，再拼接</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> reverse(str);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注释：方法的作用就是反转字符串</span></span><br><span class="line">    <span class="comment">//把传递进来的字符串进行反转</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">reverse</span><span class="params">(String str)</span>&#123;<span class="comment">//abc</span></span><br><span class="line">        <span class="comment">//核心思想：倒着遍历并进行拼接就可以了</span></span><br><span class="line">        <span class="comment">//fori :正着遍历  forr：倒着遍历</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> str.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="comment">//i 依次表示字符串里面的每一个索引（倒着的）</span></span><br><span class="line">            <span class="comment">//我们就可以拿到里面的每一个字符并拼接</span></span><br><span class="line">            s = s + str.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把倒着拼接之后的结果返回即可</span></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-11-金额转换"><a href="#8-2-11-金额转换" class="headerlink" title="8.2.11 金额转换"></a>8.2.11 金额转换</h4><h5 id="①、-案例需求"><a href="#①、-案例需求" class="headerlink" title="①、 案例需求"></a>①、 案例需求</h5><p>​把2135变成：零佰零拾零万贰仟壹佰叁拾伍元 </p><p>​把789变成：零佰零拾零万零仟柒佰捌拾玖元</p><h5 id="②、-代码实现"><a href="#②、-代码实现" class="headerlink" title="②、 代码实现"></a>②、 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.stringdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo9</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.键盘录入一个金额</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> money;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请录入一个金额&quot;</span>);</span><br><span class="line">            money = sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (money &gt;= <span class="number">0</span> &amp;&amp; money &lt;= <span class="number">9999999</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;金额无效&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个变量用来表示钱的大写</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">moneyStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.得到money里面的每一位数字,再转成中文</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;<span class="comment">//2135</span></span><br><span class="line">            <span class="comment">//从右往左获取数据，因为右侧是数据的个位</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> money % <span class="number">10</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">capitalNumber</span> <span class="operator">=</span> getCapitalNumber(ge);</span><br><span class="line">            <span class="comment">//把转换之后的大写拼接到moneyStr当中</span></span><br><span class="line">            moneyStr = capitalNumber + moneyStr;</span><br><span class="line">            <span class="comment">//第一次循环 ： &quot;伍&quot; + &quot;&quot; = &quot;伍&quot;</span></span><br><span class="line">            <span class="comment">//第二次循环 ： &quot;叁&quot; + &quot;伍&quot; = &quot;叁伍&quot;</span></span><br><span class="line">            <span class="comment">//去掉刚刚获取的数据</span></span><br><span class="line">            money = money / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果数字上的每一位全部获取到了，那么money记录的就是0，此时循环结束</span></span><br><span class="line">            <span class="keyword">if</span> (money == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.在前面补0，补齐7位</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">7</span> - moneyStr.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            moneyStr = <span class="string">&quot;零&quot;</span> + moneyStr;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(moneyStr);<span class="comment">//零零零贰壹叁伍</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.插入单位</span></span><br><span class="line">        <span class="comment">//定义一个数组表示单位</span></span><br><span class="line">        String[] arr = &#123;<span class="string">&quot;佰&quot;</span>,<span class="string">&quot;拾&quot;</span>,<span class="string">&quot;万&quot;</span>,<span class="string">&quot;仟&quot;</span>,<span class="string">&quot;佰&quot;</span>,<span class="string">&quot;拾&quot;</span>,<span class="string">&quot;元&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//               零    零   零   贰   壹   叁   伍</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历moneyStr，依次得到 零    零   零   贰   壹   叁   伍</span></span><br><span class="line">        <span class="comment">//然后把arr的单位插入进去</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; moneyStr.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> moneyStr.charAt(i);</span><br><span class="line">            <span class="comment">//把大写数字和单位拼接到result当中</span></span><br><span class="line">            result = result + c + arr[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.打印最终结果</span></span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法把数字变成大写的中文</span></span><br><span class="line">    <span class="comment">//1 -- 壹</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getCapitalNumber</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组，让数字跟大写的中文产生一个对应关系</span></span><br><span class="line">        String[] arr = &#123;<span class="string">&quot;零&quot;</span>, <span class="string">&quot;壹&quot;</span>, <span class="string">&quot;贰&quot;</span>, <span class="string">&quot;叁&quot;</span>, <span class="string">&quot;肆&quot;</span>, <span class="string">&quot;伍&quot;</span>, <span class="string">&quot;陆&quot;</span>, <span class="string">&quot;柒&quot;</span>, <span class="string">&quot;捌&quot;</span>, <span class="string">&quot;玖&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//返回结果</span></span><br><span class="line">        <span class="keyword">return</span> arr[number];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-12-手机号屏蔽"><a href="#8-2-12-手机号屏蔽" class="headerlink" title="8.2.12 手机号屏蔽"></a>8.2.12 手机号屏蔽</h4><p>需求：以字符串的形式从键盘接受一个手机号，将中间四位号码屏蔽</p><p>最终效果为：<code>131****9468</code></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test8</span>手机号屏蔽 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*以字符串的形式从键盘接受一个手机号，将中间四位号码屏蔽</span></span><br><span class="line"><span class="comment">        最终效果为：131****9468*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.键盘录入一个手机号码</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入手机号码&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phoneNumber</span> <span class="operator">=</span> sc.next();<span class="comment">//13112349408</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.截取手机号码中的前三位</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">star</span> <span class="operator">=</span> phoneNumber.substring(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.截取手机号码中的最后四位</span></span><br><span class="line">        <span class="comment">//此时我用substring方法，是用1个参数的，还是两个参数的？1个参数的会更好</span></span><br><span class="line">        <span class="comment">//因为现在我要截取到最后，所以建议使用1个参数的。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> phoneNumber.substring(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.拼接</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> star + <span class="string">&quot;****&quot;</span> + end;</span><br><span class="line"></span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-13-敏感词替换"><a href="#8-2-13-敏感词替换" class="headerlink" title="8.2.13 敏感词替换"></a>8.2.13 敏感词替换</h4><p>需求1：键盘录入一个 字符串，如果字符串中包含（TMD），则使用***替换 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test9</span>敏感词替换 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义一个变量表示骂人的话</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">talk</span> <span class="operator">=</span> <span class="string">&quot;后裔你玩什么啊，TMD&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.把这句话中的敏感词进行替换</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> talk.replace(<span class="string">&quot;TMD&quot;</span>, <span class="string">&quot;***&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.打印</span></span><br><span class="line">        System.out.println(talk);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需求2：如果要替换的敏感词比较多怎么办？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test10</span>多个敏感词替换 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//实际开发中，敏感词会有很多很多</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.先键盘录入要说的话</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要说的话&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">talk</span> <span class="operator">=</span> sc.next();<span class="comment">//后裔你玩什么啊，TMD,GDX,ctmd,ZZ</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.定义一个数组用来存多个敏感词</span></span><br><span class="line">        String[] arr = &#123;<span class="string">&quot;TMD&quot;</span>,<span class="string">&quot;GDX&quot;</span>,<span class="string">&quot;ctmd&quot;</span>,<span class="string">&quot;ZZ&quot;</span>,<span class="string">&quot;lj&quot;</span>,<span class="string">&quot;FW&quot;</span>,<span class="string">&quot;nt&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.把说的话中所有的敏感词都替换为***</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//i 索引</span></span><br><span class="line">            <span class="comment">//arr[i] 元素 --- 敏感词</span></span><br><span class="line">            talk = talk.replace(arr[i],<span class="string">&quot;***&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.打印结果</span></span><br><span class="line">        System.out.println(talk);<span class="comment">//后裔你玩什么啊，***,***,***,***</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-14-身份证信息查看"><a href="#8-2-14-身份证信息查看" class="headerlink" title="8.2.14 身份证信息查看"></a>8.2.14 身份证信息查看</h4><p>​身份证的每一位都是有固定的含义：</p><ul><li>1、2位：省份 </li><li>3、4位：城市 </li><li>5、6位：区县 </li><li>7-14位：出生年、月、日 </li><li>15、16位：所在地派出所 </li><li>17位：性别（奇数男性，偶数女性）</li><li>18位：个人信息码（随机产生）</li></ul><p>要求打印内容方式如下：</p><p>​人物信息为：</p><p>​出生年月日：XXXX年X月X日</p><p>​性别为：男&#x2F;女</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.stringdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo11</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义一个字符串记录身份证号码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> <span class="string">&quot;321281202001011234&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取出生年月日</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">year</span> <span class="operator">=</span> id.substring(<span class="number">6</span>, <span class="number">10</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">month</span> <span class="operator">=</span> id.substring(<span class="number">10</span>, <span class="number">12</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">day</span> <span class="operator">=</span> id.substring(<span class="number">12</span>, <span class="number">14</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;人物信息为：&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;出生年月日:&quot;</span> + year + <span class="string">&quot;年&quot;</span> + month + <span class="string">&quot;月&quot;</span> + day + <span class="string">&quot;日&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.获取性别</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> id.charAt(<span class="number">16</span>);<span class="comment">//&#x27;3&#x27;  ---&gt; 3</span></span><br><span class="line">        <span class="comment">//利用ASCII码表进行转换</span></span><br><span class="line">        <span class="comment">//&#x27;0&#x27; ---&gt;  48</span></span><br><span class="line">        <span class="comment">//&#x27;1&#x27; ---&gt;  49</span></span><br><span class="line">        <span class="comment">//&#x27;2&#x27; ---&gt;  50</span></span><br><span class="line">        <span class="comment">//&#x27;3&#x27; ---&gt;  51</span></span><br><span class="line">        <span class="comment">//&#x27;4&#x27; ---&gt;  52</span></span><br><span class="line">        <span class="comment">//&#x27;5&#x27; ---&gt;  53</span></span><br><span class="line">        <span class="comment">//&#x27;6&#x27; ---&gt;  54</span></span><br><span class="line">        <span class="comment">//&#x27;7&#x27; ---&gt;  55</span></span><br><span class="line">        <span class="comment">//&#x27;8&#x27; ---&gt;  56</span></span><br><span class="line">        <span class="comment">//&#x27;9&#x27; ---&gt;  57</span></span><br><span class="line"></span><br><span class="line">       <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> gender - <span class="number">48</span>;</span><br><span class="line">        <span class="keyword">if</span>(num % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;性别为:女&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;性别为:男&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-3-StringBuilder"><a href="#8-3-StringBuilder" class="headerlink" title="8.3 StringBuilder"></a>8.3 StringBuilder</h3><p>StringBuilder 可以看成是一个容器，创建之后里面的内容是可变的。</p><p>作用：提高字符串的操作效率</p><p>应用场景：</p><ul><li>字符串拼接</li><li>字符串反转</li></ul><h4 id="8-3-1-基本使用"><a href="#8-3-1-基本使用" class="headerlink" title="8.3.1 基本使用"></a>8.3.1 基本使用</h4><p><strong>构造方法</strong></p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder()</td><td>创建一个空白可变字符串对象，不含有任何内容</td></tr><tr><td>public StringBuilder(String str)</td><td>根据字符串的内容，来创建可变字符串对象</td></tr></tbody></table><p><strong>常用方法</strong></p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringgBuilder append(任意类型)</td><td>添加数据，并返回对象本身</td></tr><tr><td>public StringBuilder revverse()</td><td>反转容器中的内容</td></tr><tr><td>public int length()</td><td>返回长度（字符出现的个数）</td></tr><tr><td>public String toString()</td><td>通过toString()就可以实现把StringBuilder转化为String</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建对象</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加元素</span></span><br><span class="line">        <span class="comment">/*sb.append(1);</span></span><br><span class="line"><span class="comment">        sb.append(2.3);</span></span><br><span class="line"><span class="comment">        sb.append(true);*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//反转</span></span><br><span class="line">        sb.reverse();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> sb.length();</span><br><span class="line">        System.out.println(len);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印</span></span><br><span class="line">        <span class="comment">//普及：</span></span><br><span class="line">        <span class="comment">//因为StringBuilder是Java已经写好的类</span></span><br><span class="line">        <span class="comment">//java在底层对他做了一些特殊处理。</span></span><br><span class="line">        <span class="comment">//打印对象不是地址值而是属性值。</span></span><br><span class="line">        System.out.println(sb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-2-链式编程"><a href="#8-3-2-链式编程" class="headerlink" title="8.3.2 链式编程"></a>8.3.2 链式编程</h4><p><strong>链式编程：</strong>当我们在调用一个方法的时候，不需要用变量接收它的结果，可以继续调用其他方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建对象</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加字符串</span></span><br><span class="line">        <span class="comment">// 链式编程</span></span><br><span class="line">        sb.append(<span class="string">&quot;aaa&quot;</span>).append(<span class="string">&quot;bbb&quot;</span>).append(<span class="string">&quot;ccc&quot;</span>).append(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(sb);<span class="comment">//aaabbbcccddd</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.再把StringBuilder变回字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">        System.out.println(str);<span class="comment">//aaabbbcccddd</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-3-练习1：对称字符串"><a href="#8-3-3-练习1：对称字符串" class="headerlink" title="8.3.3 练习1：对称字符串"></a>8.3.3 练习1：对称字符串</h4><p>需求：</p><p>​键盘接受一个字符串，程序判断出该字符串是否是对称字符串，并在控制台打印是或不是</p><pre><code>  对称字符串：123321、111    非对称字符串：123123</code></pre><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo6</span> &#123;</span><br><span class="line">    <span class="comment">//使用StringBuilder的场景：</span></span><br><span class="line">    <span class="comment">//1.字符串的拼接</span></span><br><span class="line">    <span class="comment">//2.字符串的反转</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.键盘录入一个字符串</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.反转键盘录入的字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>().append(str).reverse().toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.比较</span></span><br><span class="line">        <span class="keyword">if</span>(str.equals(result))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前字符串是对称字符串&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前字符串不是对称字符串&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-3-4-练习2：拼接字符串"><a href="#8-3-4-练习2：拼接字符串" class="headerlink" title="8.3.4 练习2：拼接字符串"></a>8.3.4 练习2：拼接字符串</h4><p>需求：定义一个方法，把 int 数组中的数据按照指定的格式拼接成一个字符串返回。</p><p>​          调用该方法，并在控制台输出结果。</p><p>​          例如：数组为int[] arr &#x3D; {1,2,3}; </p><p>​          执行方法后的输出结果为：[1, 2, 3]</p><p>代码示例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.stringbuilderdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.调用方法把数组变成字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> arrToString(arr);</span><br><span class="line"></span><br><span class="line">        System.out.println(str);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">arrToString</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sb.append(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == arr.length - <span class="number">1</span>)&#123;</span><br><span class="line">                sb.append(arr[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sb.append(arr[i]).append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-4-StringJoiner"><a href="#8-4-StringJoiner" class="headerlink" title="8.4 StringJoiner"></a>8.4 StringJoiner</h3><ul><li>StringJoiner跟StringBuilder一样，也可以看成是一个容器，创建之后里面的内容是可变的。</li><li>作用：提高字符串的操作效率，而且代码编写特别简洁，但是目前市场上很少有人用。 </li><li>JDK8出现的</li></ul><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringJoiner(间隔符号)</td><td>创建一个StringJoiner对象，指定拼接时的间隔符号</td></tr><tr><td>public StringJoiner(间隔符号，开始符号，结束符号)</td><td>创建一个StringJoiner对象，指定拼接时的间隔符号，开始符号，结束符号</td></tr></tbody></table><p><strong>成员方法</strong></p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringJoiner add(添加的内容)</td><td>添加数据，并返回对象本身</td></tr><tr><td>public int length()</td><td>返回长度（字符出现的个数）</td></tr><tr><td>public String toString()</td><td>返回一个字符串（该字符串就是拼接之后的结果）</td></tr></tbody></table><p>基本使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建一个对象，并指定中间的间隔符号</span></span><br><span class="line"><span class="type">StringJoiner</span> <span class="variable">sj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;---&quot;</span>);</span><br><span class="line"><span class="comment">//2.添加元素</span></span><br><span class="line">sj.add(<span class="string">&quot;aaa&quot;</span>).add(<span class="string">&quot;bbb&quot;</span>).add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line"><span class="comment">//3.打印结果</span></span><br><span class="line">System.out.println(sj);<span class="comment">//aaa---bbb---ccc</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建对象</span></span><br><span class="line"><span class="type">StringJoiner</span> <span class="variable">sj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;, &quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>);</span><br><span class="line"><span class="comment">//2.添加元素</span></span><br><span class="line">sj.add(<span class="string">&quot;aaa&quot;</span>).add(<span class="string">&quot;bbb&quot;</span>).add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> sj.length();</span><br><span class="line">System.out.println(len);<span class="comment">//15</span></span><br><span class="line"><span class="comment">//3.打印</span></span><br><span class="line">System.out.println(sj);<span class="comment">//[aaa, bbb, ccc]</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sj.toString();</span><br><span class="line">System.out.println(str);<span class="comment">//[aaa, bbb, ccc]</span></span><br></pre></td></tr></table></figure><h3 id="关于字符串的小扩展："><a href="#关于字符串的小扩展：" class="headerlink" title="关于字符串的小扩展："></a>关于字符串的小扩展：</h3><ol><li><p>字符串存储的内存原理</p><p>String s &#x3D; “abc”；直接赋值</p><p>特点：</p><p>​此时字符串abc是存在字符串常量池中的。</p><p>​先检查字符串常量池中有没有字符串abc，如果有，不会创建新的，而是直接复用。如果没有abc，才会创建一个新的。</p><p>所以，直接赋值的方式，代码简单，而且节约内存。</p></li><li><p>new出来的字符串</p><p>看到new关键字，一定是在堆里面开辟了一个小空间。</p><p>String s1 &#x3D; new String（“abc”）；</p><p>String s2 &#x3D; “abc”；</p><p>s1记录的是new出来的，在堆里面的地址值。</p><p>s2是直接赋值的，所以记录的是字符串常量池中的地址值。</p></li><li><p>&#x3D;&#x3D;号比较的到底是什么？</p><p>如果比较的是基本数据类型：比的是具体的数值是否相等。</p><p>如果比较的是引用数据类型：比的是地址值是否相等。</p><p>结论：&#x3D;&#x3D;只能用于比较基本数据类型。不能比较引用数据类型。</p></li></ol><h3 id="8-5-字符串原理"><a href="#8-5-字符串原理" class="headerlink" title="8.5 字符串原理"></a>8.5 字符串原理</h3><h4 id="8-5-1-字符串存储的内存原理"><a href="#8-5-1-字符串存储的内存原理" class="headerlink" title="8.5.1 字符串存储的内存原理"></a>8.5.1 字符串存储的内存原理</h4><ul><li>直接赋值会复用字符串常量池中的</li><li>new出来不会复用，而是开辟一个新的空间</li></ul><h4 id="8-5-2-号比较的到底是什么"><a href="#8-5-2-号比较的到底是什么" class="headerlink" title="8.5.2 &#x3D;&#x3D;号比较的到底是什么"></a>8.5.2 &#x3D;&#x3D;号比较的到底是什么</h4><ul><li>基本数据类型比较数据值</li><li>引用数据类型比较地址值</li></ul><h4 id="8-5-3-字符串拼接的低层原理"><a href="#8-5-3-字符串拼接的低层原理" class="headerlink" title="8.5.3 字符串拼接的低层原理"></a>8.5.3 字符串拼接的低层原理</h4><p><strong>&#x3D;右边没有变量</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span> + <span class="string">&quot;b&quot;</span> + <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拼接的时候没有变量，都是字符串。触发字符串的优化机制，在编译的时候已经是最终的结果了。</p><p><strong>&#x3D;右边有变量</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>,</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> s1 + <span class="string">&quot;b&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> s2 + <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        System.out.println(s3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JDK8以前，系统底层会自动你创建一个StringBuilder对象，然后调用其append方法完成拼接。拼接后，再调用toString方法转换为String类型，而toString方法的底层是直接new了一个字符串对象</li><li>没进行一次，至少创建两个对象</li><li>JDK8之后，系统会预估要字符串拼接之后的总大小，把要拼接的内容都放在数组中，此时也是产生一个新的字符串</li><li>先预估空间，再创建对象</li></ul><p>如果有变量参与，每一行拼接的代码，都会在内存中创建新的字符串，浪费内存</p><h4 id="8-5-4-StringBuilder提高效率原理图"><a href="#8-5-4-StringBuilder提高效率原理图" class="headerlink" title="8.5.4 StringBuilder提高效率原理图"></a>8.5.4 StringBuilder提高效率原理图</h4><ul><li>所有要拼接的内容都会往StringBuilder中放，不会创建很多无用的空间，节约内存</li></ul><h4 id="8-5-5-StringBuilder源码分析"><a href="#8-5-5-StringBuilder源码分析" class="headerlink" title="8.5.5 StringBuilder源码分析"></a>8.5.5 StringBuilder源码分析</h4><ul><li>默认创建一个长度为16的字节数组</li><li>添加的内容长度小于16，直接存</li><li>添加的内容大于16会扩容（原来的容量*2 + 2）</li><li>如果扩容之后还不够，以实际长度为准</li></ul><h2 id="九、ArrayList"><a href="#九、ArrayList" class="headerlink" title="九、ArrayList"></a>九、ArrayList</h2><h3 id="集合和数组的优势对比："><a href="#集合和数组的优势对比：" class="headerlink" title="集合和数组的优势对比："></a>集合和数组的优势对比：</h3><ol><li>长度可变</li><li>存储类型：可以存储引用数据类型，基本数据类型需要变为包装类才可存储</li><li>添加数据的时候不需要考虑索引，默认将数据添加到末尾</li></ol><h3 id="9-1-ArrayList类概述"><a href="#9-1-ArrayList类概述" class="headerlink" title="9.1 ArrayList类概述"></a>9.1 ArrayList类概述</h3><ul><li><p>什么是集合</p><p>​提供一种存储空间可变的存储模型，存储的数据容量可以发生改变</p></li><li><p>ArrayList集合的特点</p><p>​长度可以变化，只能存储引用数据类型。</p></li><li><p>泛型的使用</p><p>​用于约束集合中存储元素的数据类型</p></li></ul><h3 id="1-2-ArrayList类常用方法"><a href="#1-2-ArrayList类常用方法" class="headerlink" title="1.2 ArrayList类常用方法"></a>1.2 ArrayList类常用方法</h3><h4 id="1-2-1-构造方法"><a href="#1-2-1-构造方法" class="headerlink" title="1.2.1 构造方法"></a>1.2.1 构造方法</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public ArrayList()</td><td>创建一个空的集合对象</td></tr></tbody></table><h4 id="1-2-2-成员方法"><a href="#1-2-2-成员方法" class="headerlink" title="1.2.2 成员方法"></a>1.2.2 成员方法</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean add(要添加的元素)</td><td>将指定的元素追加到此集合的末尾</td></tr><tr><td>public boolean remove(要删除的元素)</td><td>删除指定元素,返回值表示是否删除成功</td></tr><tr><td>public E  remove(int   index)</td><td>删除指定索引处的元素，返回被删除的元素</td></tr><tr><td>public E   set(int index,E   element)</td><td>修改指定索引处的元素，返回被修改的元素</td></tr><tr><td>public E   get(int   index)</td><td>返回指定索引处的元素</td></tr><tr><td>public int   size()</td><td>返回集合中的元素的个数</td></tr></tbody></table><h4 id="1-2-3-示例代码"><a href="#1-2-3-示例代码" class="headerlink" title="1.2.3 示例代码"></a>1.2.3 示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合</span></span><br><span class="line">        <span class="comment">// 泛型</span></span><br><span class="line">        <span class="comment">// ArrayList&lt;String&gt; array = new ArrayList&lt;String&gt;();</span></span><br><span class="line">        <span class="comment">// JDK7：</span></span><br><span class="line">        <span class="comment">//此时我们创建的是ArrayList的对象，而ArrayList是java已经写号的一个类</span></span><br><span class="line">        <span class="comment">// 这个类在底层做了一些处理</span></span><br><span class="line">        <span class="comment">// 打印对象不是地址值，而是集合中存储数据内容</span></span><br><span class="line">        <span class="comment">// 在展示的时候会拿[]b</span></span><br><span class="line">        ArrayList&lt;String&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        array.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;java&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public boolean remove(Object o)：删除指定的元素，返回删除是否成功</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.remove(&quot;world&quot;));</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.remove(&quot;javaee&quot;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public E remove(int index)：删除指定索引处的元素，返回被删除的元素</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.remove(1));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//IndexOutOfBoundsException</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.remove(3));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public E set(int index,E element)：修改指定索引处的元素，返回被修改的元素</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.set(1,&quot;javaee&quot;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//IndexOutOfBoundsException</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.set(3,&quot;javaee&quot;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public E get(int index)：返回指定索引处的元素</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.get(0));</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.get(1));</span></span><br><span class="line">        <span class="comment">//        System.out.println(array.get(2));</span></span><br><span class="line">        <span class="comment">//System.out.println(array.get(3)); //？？？？？？ 自己测试</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public int size()：返回集合中的元素的个数</span></span><br><span class="line">        System.out.println(array.size());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出集合</span></span><br><span class="line">        System.out.println(<span class="string">&quot;array:&quot;</span> + array);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-ArrayList存储字符串并遍历"><a href="#1-3-ArrayList存储字符串并遍历" class="headerlink" title="1.3 ArrayList存储字符串并遍历"></a>1.3 ArrayList存储字符串并遍历</h3><h4 id="1-3-1-案例需求"><a href="#1-3-1-案例需求" class="headerlink" title="1.3.1 案例需求"></a>1.3.1 案例需求</h4><p>​创建一个存储字符串的集合，存储3个字符串元素，使用程序实现在控制台遍历该集合</p><h4 id="1-3-2-代码实现"><a href="#1-3-2-代码实现" class="headerlink" title="1.3.2 代码实现"></a>1.3.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建集合对象</span></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加元素</span></span><br><span class="line">        list.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.遍历</span></span><br><span class="line">        <span class="comment">//快捷键: list.fori 正向遍历</span></span><br><span class="line">        <span class="comment">//list.forr 倒着遍历</span></span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="comment">//i 依次表示集合里面的每一个索引</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i == list.size() - <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//最大索引</span></span><br><span class="line">                System.out.print(list.get(i));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//非最大索引</span></span><br><span class="line">                System.out.print(list.get(i) + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-4-ArrayList存储学生对象并遍历"><a href="#1-4-ArrayList存储学生对象并遍历" class="headerlink" title="1.4 ArrayList存储学生对象并遍历"></a>1.4 ArrayList存储学生对象并遍历</h3><h4 id="1-4-1-案例需求"><a href="#1-4-1-案例需求" class="headerlink" title="1.4.1 案例需求"></a>1.4.1 案例需求</h4><p>​创建一个存储学生对象的集合，存储3个学生对象，使用程序实现在控制台遍历该集合</p><h4 id="1-4-2-代码实现"><a href="#1-4-2-代码实现" class="headerlink" title="1.4.2 代码实现"></a>1.4.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建集合对象，用来存储数据</span></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">16</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;lisi&quot;</span>,<span class="number">15</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;wangwu&quot;</span>,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.把学生对象添加到集合中</span></span><br><span class="line">        list.add(s1);</span><br><span class="line">        list.add(s2);</span><br><span class="line">        list.add(s3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="comment">//i 依次表示集合中的每一个索引</span></span><br><span class="line">            <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            System.out.println(stu.getName() + <span class="string">&quot;, &quot;</span> + stu.getAge());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-5-查找用户的索引"><a href="#1-5-查找用户的索引" class="headerlink" title="1.5 查找用户的索引"></a>1.5 查找用户的索引</h3><p>需求： </p><p>1，main方法中定义一个集合，存入三个用户对象。 </p><p>   用户属性为：id，username，password    </p><p>2，要求：定义一个方法，根据id查找对应的学生信息。</p><p>   如果存在，返回索引</p><p>   如果不存在，返回-1</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*需求：</span></span><br><span class="line"><span class="comment">        1，main方法中定义一个集合，存入三个用户对象。</span></span><br><span class="line"><span class="comment">        用户属性为：id，username，password</span></span><br><span class="line"><span class="comment">        2，要求：定义一个方法，根据id查找对应的学生信息。</span></span><br><span class="line"><span class="comment">        如果存在，返回索引</span></span><br><span class="line"><span class="comment">        如果不存在，返回-1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建集合对象</span></span><br><span class="line">        ArrayList&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建用户对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima001&quot;</span>, <span class="string">&quot;zhangsan&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima002&quot;</span>, <span class="string">&quot;lisi&quot;</span>, <span class="string">&quot;1234&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima003&quot;</span>, <span class="string">&quot;wangwu&quot;</span>, <span class="string">&quot;1234qwer&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.把用户对象添加到集合当中</span></span><br><span class="line">        list.add(u1);</span><br><span class="line">        list.add(u2);</span><br><span class="line">        list.add(u3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用方法，通过id获取对应的索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> getIndex(list, <span class="string">&quot;heima001&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(index);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.我要干嘛？  根据id查找对应的学生信息</span></span><br><span class="line">    <span class="comment">//2.我干这件事情需要什么才能完成？   集合 id</span></span><br><span class="line">    <span class="comment">//3.方法的调用处是否需要继续使用方法的结果？</span></span><br><span class="line">    <span class="comment">//要用必须返回，不要用可以返回也可以不返回</span></span><br><span class="line">    <span class="comment">//明确说明需要有返回值 int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(ArrayList&lt;User&gt; list, String id)</span> &#123;</span><br><span class="line">        <span class="comment">//遍历集合得到每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="type">String</span> <span class="variable">uid</span> <span class="operator">=</span> u.getId();</span><br><span class="line">            <span class="keyword">if</span>(uid.equals(id))&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为只有当集合里面所有的元素都比较完了，才能断定id是不存在的。</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-6-判断用户的是否存在"><a href="#1-6-判断用户的是否存在" class="headerlink" title="1.6 判断用户的是否存在"></a>1.6 判断用户的是否存在</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">/* 需求：</span></span><br><span class="line"><span class="comment">        1，main方法中定义一个集合，存入三个用户对象。</span></span><br><span class="line"><span class="comment">        用户属性为：id，username，password</span></span><br><span class="line"><span class="comment">        2，要求：定义一个方法，根据id查找对应的学生信息。</span></span><br><span class="line"><span class="comment">        如果存在，返回true</span></span><br><span class="line"><span class="comment">        如果不存在，返回false*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义集合</span></span><br><span class="line">        ArrayList&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima001&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima002&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;12345678&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;heima003&quot;</span>,<span class="string">&quot;wangwu&quot;</span>,<span class="string">&quot;1234qwer&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.把用户对象添加到集合当中</span></span><br><span class="line">        list.add(u1);</span><br><span class="line">        list.add(u2);</span><br><span class="line">        list.add(u3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用方法，查询id是否存在</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> contains(list, <span class="string">&quot;heima001&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义在测试类中的方法需要加static</span></span><br><span class="line">    <span class="comment">//1.我要干嘛？ 我要根据id查询学生是否存在</span></span><br><span class="line">    <span class="comment">//2.我干这件事情，需要什么才能完成？ 集合 id</span></span><br><span class="line">    <span class="comment">//3.方法的调用处是否需要使用方法的结果？</span></span><br><span class="line">    <span class="comment">//如果要用，必须返回，如果不用，可以返回也可以不返回</span></span><br><span class="line">    <span class="comment">//但是本题明确说明需要返回</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(ArrayList&lt;User&gt; list, String id)</span>&#123;</span><br><span class="line">        <span class="comment">//循环遍历集合，得到集合里面的每一个元素</span></span><br><span class="line">        <span class="comment">//再进行判断</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="comment">//i 索引  list.get(i); 元素</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="comment">//判断id是否存在，我是拿着谁跟谁比较</span></span><br><span class="line">            <span class="comment">//需要把用户对象里面的id拿出来再进行比较。</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">uid</span> <span class="operator">=</span> u.getId();</span><br><span class="line">            <span class="keyword">if</span>(id.equals(uid))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//return 关键字：作用就是结束方法。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//只有当集合里面所有的元素全部比较完毕才能认为是不存在的。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaEE</title>
      <link href="/2024/07/07/Java/JavaEE/"/>
      <url>/2024/07/07/Java/JavaEE/</url>
      
        <content type="html"><![CDATA[<p>JavaSE: Java Standard Edition PC机上的软件，C&#x2F;S（客户端单独的软件）</p><p>JavaEE：Java Enterprise Edition企业级结构，B&#x2F;S Browser&#x2F;Server（没有软件，跑页面）</p><p>JavaME：Java Micro Edition移动终端</p><p>Android ： Java</p><h1 id="一、JSP概述"><a href="#一、JSP概述" class="headerlink" title="一、JSP概述"></a>一、JSP概述</h1><p>JSP: Java Server Pages</p><ul><li>给予Java的用于编写动态网页的语法，在Web服务器上运行</li><li>JSP &#x3D; HTML + Java</li></ul><h2 id="1-1-jsp执行过程"><a href="#1-1-jsp执行过程" class="headerlink" title="1.1 jsp执行过程"></a>1.1 jsp执行过程</h2><p>JSP页面的主要成分：</p><ol><li>脚本元素（Scrpting Element）：嵌入Java代码</li><li>指令（Directive）：从整体上控制Servlet的结构</li><li>动作（Action）：引入已有的组件来控制Web容器的行为</li></ol><p>JSP <strong>第一次</strong>执行的过程：</p><p>（1）客户端发送请求（URL地址）（jsp）</p><p>（2）服务器将 JSP 文件翻译为 Java 程序（Servlet）（Java）</p><p>（3）服务器将 Java程序编译为字节码（.class）</p><p>（4）服务器运行字节码（.html）</p><p>（5）服务器将 HTML 代码发送给客户端浏览器</p><p>JSP <strong>第二次</strong>以后执行：</p><p>（1）客户端发送请求（.jsp）</p><p>（2）服务器运行字节码（.html）</p><p>（3）服务器将HTML代码发送给客户端浏览器</p><h2 id="1-2-jsp的几种形式"><a href="#1-2-jsp的几种形式" class="headerlink" title="1.2 jsp的几种形式"></a>1.2 jsp的几种形式</h2><p>1.JSP脚本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  java  %&gt;</span><br></pre></td></tr></table></figure><p>2.JSP表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= 表达式%&gt;</span><br></pre></td></tr></table></figure><p>说明：在表达式的位置直接输出表达式的值</p><p>3.声明标签</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%! 变量、方法、类的声明%&gt;</span><br></pre></td></tr></table></figure><p>说明：用声明标签声明的变量、方法和类的作用范围是整个JSP页面，与位置无关</p><p>原理：JSP 执行时，先执行&lt;%! %&gt;在&lt;% %&gt;和&lt;%&#x3D;%&gt;之前执行</p><p>4.JSP注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="comment">//  %&gt; &lt;%/* */%&gt;</span></span><br></pre></td></tr></table></figure><p>HTML注释<!-- --></p><h3 id="1-2-1-jsp脚本"><a href="#1-2-1-jsp脚本" class="headerlink" title="1.2.1 jsp脚本"></a>1.2.1 jsp脚本</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  java  %&gt;</span><br></pre></td></tr></table></figure><h3 id="1-2-2-输出表达式"><a href="#1-2-2-输出表达式" class="headerlink" title="1.2.2 输出表达式"></a>1.2.2 输出表达式</h3><p>&lt;%&#x3D;表达式%&gt;输出表达式的计算结果。表达式中的变量必须是前面已声明过的变量。</p><blockquote><p>注意：%与&#x3D;之间不能有空格，且表达式后面不需要分号</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;JSP表达式&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor=<span class="string">&quot;#FFFFFF&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">5</span>; i++) &#123; %&gt;</span><br><span class="line">&lt;H&lt;%=i %&gt;&gt; 你好&lt;/H&lt;%=i %&gt;&gt;</span><br><span class="line">&lt;%&#125; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-2-3-注释"><a href="#1-2-3-注释" class="headerlink" title="1.2.3 注释"></a>1.2.3 注释</h3><p>JSP页面中有两种注释</p><ol><li>输出到客户端的注释，在浏览器查看源码时可以看到<code>&lt;!-comment-&gt;</code></li><li>不输出到客户端在注释：<code>&lt;%--comment--%&gt;</code>，在客户端看不到</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">&lt;!-在客户端可以看到的注释-&gt;<span class="comment">//html注释</span></span><br><span class="line">&lt;%--在客户端看不到的注释 --%&gt;</span><br><span class="line">&lt;%<span class="comment">//zai %&gt;</span></span><br><span class="line">&lt;%<span class="comment">/**/ %&gt;</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h3 id="1-2-4-声明变量、方法、类"><a href="#1-2-4-声明变量、方法、类" class="headerlink" title="1.2.4 声明变量、方法、类"></a>1.2.4 声明变量、方法、类</h3><h4 id="1-声明变量"><a href="#1-声明变量" class="headerlink" title="1. 声明变量"></a>1. 声明变量</h4><p><strong>语法：</strong><code>&lt;%! 声明代码 %&gt;</code></p><blockquote><p>注意：JSP声明变量的作用域是<strong>整个页面</strong>。也就是说，在整个页面中都可以访问声明的变量</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">&lt;font size=<span class="number">5</span>&gt;</span><br><span class="line">&lt;% i++; %&gt;</span><br><span class="line">&lt;p&gt;你是第&lt;%=i %&gt;个访问本站的用户&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!<span class="type">int</span> i=<span class="number">0</span>; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="2-声明方法"><a href="#2-声明方法" class="headerlink" title="2. 声明方法"></a>2. 声明方法</h4><p><strong>语法：</strong><code>&lt;%! 声明代码 %&gt;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!String <span class="title function_">sayHello</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%=sayHello() %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：该方法在整个页面有效，但方法内的变量只在该方法内有效</p></blockquote><h4 id="3-声明类"><a href="#3-声明类" class="headerlink" title="3. 声明类"></a>3. 声明类</h4><p><strong>语法：</strong><code>&lt;%! 声明代码 %&gt;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%! <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sayHello</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">boolean</span> county;</span><br><span class="line">sayHello(<span class="type">boolean</span> county)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">this</span>.county = county;</span><br><span class="line">&#125;</span><br><span class="line">String <span class="title function_">Hello</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (county)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;你好&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;% <span class="type">sayHello</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">sayHello</span>(<span class="literal">false</span>); %&gt;</span><br><span class="line">&lt;%=a.Hello() %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="1-3-指令"><a href="#1-3-指令" class="headerlink" title="1.3 指令"></a>1.3 指令</h2><p>格式：<code>&lt;%@ 指令名称 属性名=&quot;属性值&quot;...%&gt;</code></p><p>指令名有page、include和taglib三种。taglib指令允许页面使用扩展标记。</p><h3 id="1-3-1-page指令"><a href="#1-3-1-page指令" class="headerlink" title="1.3.1 page指令"></a>1.3.1 page指令</h3><h4 id="1-language属性"><a href="#1-language属性" class="headerlink" title="1. language属性"></a>1. language属性</h4><p><strong>作用：</strong>指明JSP所用的编程语言，因为一定是java语言，所以可以省略</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span>　%&gt;</span><br></pre></td></tr></table></figure><h4 id="2-import属性（-）"><a href="#2-import属性（-）" class="headerlink" title="2. import属性（**）"></a>2. import属性（**）</h4><p><strong>作用：</strong>用来设置JSP页面导入的Java类，相当于Java语言的import语句<br>注意：import属性是Page指令唯一可以多次设置的属性</p><p><strong>代码</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.*, java.lang.*&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：包名要用引号括起来，各个包之间用逗号隔开</p></blockquote><h4 id="3-session属性"><a href="#3-session属性" class="headerlink" title="3. session属性"></a>3. session属性</h4><p>作用：指定JSP页面是否支持会话，默认值为true</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page session=<span class="string">&quot;true&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page session=<span class="string">&quot;false&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="4-errorPage"><a href="#4-errorPage" class="headerlink" title="4. errorPage**"></a>4. errorPage**</h4><p><strong>作用：</strong>当JSP程序发生错误后，用于设置出错页面</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page errorPage=<span class="string">&quot;error.jsp&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>实例：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--testError.jsp --%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> errorPage=<span class="string">&quot;error.jsp&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;页面错误属性测试&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%! <span class="type">int</span>[] a =&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;; %&gt;</span><br><span class="line">&lt;%=a[<span class="number">3</span>] %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- error.jsp--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;JSP Page&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;The Page is wrong!&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="5-contentType"><a href="#5-contentType" class="headerlink" title="5. contentType"></a>5. contentType</h4><p><strong>作用：</strong>用于设置JSP页面的内容类型和编码</p><p>内容类型有：text&#x2F;plain、text&#x2F;html（默认类型）、image&#x2F;gif和image&#x2F;jpeg等</p><p>JSP默认的字符编码方式是ISO 8859-1</p><p>代码：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=utf-8&quot;</span>%&gt;</span><br></pre></td></tr></table></figure><h4 id="6-isThreadSafe"><a href="#6-isThreadSafe" class="headerlink" title="6. isThreadSafe"></a>6. isThreadSafe</h4><p><strong>作用：</strong>设置JSP文件是否可以多线程使用，默认为true。如果设置为false，一次只能处理一个请求。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--safe.jsp --%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%! <span class="type">int</span> number=<span class="number">0</span>;<span class="comment">//声明一个方法</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">countPeople</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span>  <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">while</span> (i++ &lt; <span class="number">200000000</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum += i;</span><br><span class="line">&#125;</span><br><span class="line">number++;</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">countPeople();<span class="comment">//在程序片段中调用方法</span></span><br><span class="line">%&gt;</span><br><span class="line">&lt;P&gt;你是第  &lt;%=number %&gt; 个访问本站的客户。</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-2-include-指令"><a href="#1-3-2-include-指令" class="headerlink" title="1.3.2 include 指令"></a>1.3.2 include 指令</h3><p>include指令：<br>用于在当前页面包含另外一个页面<br><strong>语法</strong>：<code> &lt;%@ include file=“url”%&gt;</code></p><p>include动作<br>用于在当前页面包含另外一个页面<br>格式：<code>&lt;jsp:include page=“url”/&gt;</code></p><p>include指令和include动作之间的区别<br>include指令（静态包含）：<br>（1）语法格式：&lt;%@ include file&#x3D;“url”%&gt;<br>（2）包含时间：翻译JSP文件到Servlet时<br>（3）逻辑上：统一的</p><p>include动作（动态包含）:<br>（1）语法格式：&lt;jsp:include page&#x3D;“url”&#x2F;&gt;<br>（2）包含时间：运行时<br>（3）逻辑上：独立的</p><p><img src="/2024/07/07/Java/JavaEE/image-20220831163956860.png" alt="image-20220831163956860"></p><h2 id="1-4-动作组件"><a href="#1-4-动作组件" class="headerlink" title="1.4 动作组件"></a>1.4 动作组件</h2><p>动作组件是一些XML语法格式的标记，被用来控制Web容器的行为。</p><p>常见的jsp动作组件有以下几种：</p><ul><li><code>&lt;jsp:include&gt;</code>：在页面被请求时引入一个文件</li><li><code>&lt;jsp:forward&gt;</code>：把请求转到一个新的页面</li><li><code>&lt;jsp:param&gt;</code>：在动作组件中引入参数信息</li><li><code>&lt;jsp:plugin&gt;</code>：执行一个Applet或Bean</li><li><code>&lt;jsp:setProperty&gt;</code>：设置JavaBean的属性</li><li><code>&lt;jsp:getProperty&gt;</code>：输出某个JavaBean的属性</li><li><code>&lt;jsp:useBean&gt;</code>：寻找或者实例化一个JavaBean</li></ul><h3 id="1-5-1-include动作组件"><a href="#1-5-1-include动作组件" class="headerlink" title="1.5.1 include动作组件"></a>1.5.1 include动作组件</h3><p><strong>动作：</strong>把指定文件插入正在生成的页面</p><p><strong>语法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page=<span class="string">&quot;文件名&quot;</span> flush=<span class="string">&quot;true&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="1-5-2-forward动作组件"><a href="#1-5-2-forward动作组件" class="headerlink" title="1.5.2 forward动作组件"></a>1.5.2 forward动作组件</h3><p><strong>作用：</strong>用于将浏览器显示的网页导向至另一个HTML页面或jsp网页，浏览器网址不发生改变</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:forward page=<span class="string">&quot;网页名称&quot;</span>&gt;&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><p><strong>实例：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--forward.jsp --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">double</span> <span class="variable">i</span> <span class="operator">=</span> Math.random();</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0.5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     %&gt;</span><br><span class="line">    &lt;jsp:forward page=<span class="string">&quot;catalog1.html&quot;</span>&gt;&lt;/jsp:forward&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="1-5-3-param动作组件"><a href="#1-5-3-param动作组件" class="headerlink" title="1.5.3 param动作组件"></a>1.5.3 param动作组件</h3><p><strong>作用：</strong>用于传递参数信息，必须配合include动作组件或forward动作组件一起使用</p><p><strong>语法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:param name=参数名称, value=值 /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>和<code>&lt;jsp:include&gt;</code>一起使用，可以将param中的值传递到include动作组件中</p></blockquote><p><strong>实例：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- param1.jsp--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;向加载文件传递参数实例：&lt;/p&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;add.jsp&quot;</span>&gt;</span><br><span class="line">&lt;jsp:param name=<span class="string">&quot;start&quot;</span> value=<span class="string">&quot;0&quot;</span> /&gt;</span><br><span class="line">&lt;jsp:param name=<span class="string">&quot;end&quot;</span> value=<span class="string">&quot;100&quot;</span> /&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- add.jsp--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">String start=request.getParameter(<span class="string">&quot;start&quot;</span>);<span class="comment">//获取值</span></span><br><span class="line"><span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;end&quot;</span>);<span class="comment">//获取值</span></span><br><span class="line"><span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> Integer.parseInt(start);</span><br><span class="line"><span class="type">int</span> <span class="variable">e</span> <span class="operator">=</span> Integer.parseInt(end);</span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s; i &lt;= e; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + i;</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;从&lt;%=start %&gt;到&lt;%=end %&gt;的连续和是：</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;%=sum %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Java/JavaEE/image-20220928113836648.png" alt="image-20220928113836648"> </p><h3 id="1-5-4-plugin动作组件"><a href="#1-5-4-plugin动作组件" class="headerlink" title="1.5.4 plugin动作组件"></a>1.5.4 plugin动作组件</h3><p><strong>作用：</strong>用来执行一个Applet或Bean</p><p><strong>代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:plugin type=<span class="string">&quot;bean | applet&quot;</span> code=<span class="string">&quot;classFileName&quot;</span> codebase=<span class="string">&quot;classFileDirectoryName&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="1-5-内置对象"><a href="#1-5-内置对象" class="headerlink" title="1.5 内置对象"></a>1.5 内置对象</h2><p>Servlet API规范了一些接口，这些接口向开发者提供了方便的抽象，这些抽象封装了对象的实现。</p><p>JSP根据Servlet API规范提供了相应的内置对象，开发者不用事先声明就可以使用标准的变量来访问这些对象</p><p>JSP提供了9种内置对象：<code>request、reponse、out、session、application、config、pagecongtext、page、exception</code></p><h3 id="1-5-1-request对象"><a href="#1-5-1-request对象" class="headerlink" title="1.5.1 request对象"></a>1.5.1 request对象</h3><p><strong>作用：</strong>代表来自客户端的请求，封装了用户提交的新信息。</p><p><img src="/2024/07/07/Java/JavaEE/image-20220928092627058.png" alt="image-20220928092627058"> </p><p><img src="/2024/07/07/Java/JavaEE/image-20220928092636556.png" alt="image-20220928092636556"> </p><p><img src="/2024/07/07/Java/JavaEE/image-20220928092807005.png" alt="image-20220928092807005"> </p><p><img src="/2024/07/07/Java/JavaEE/image-20220928092818983.png" alt="image-20220928092818983"> </p><h3 id="4-6-2-response对象"><a href="#4-6-2-response对象" class="headerlink" title="4.6.2 response对象"></a>4.6.2 response对象</h3><p><strong>作用：</strong>向客户端发送数据。response代表的是服务器对客户端的响应。</p><p><img src="/2024/07/07/Java/JavaEE/image-20220928092905741.png" alt="image-20220928092905741"> </p><p>常用的方法：</p><p>（1）addCookie (Cookie cookie):</p><p>（2）header</p><p>（3）setContentType(String )</p><p>（4）sendRedirect(String url)：将请求重新定位到一个新的页面。</p><p>response.sendRedirect()与&lt;jsp:forward &gt;的区别：</p><p>response.sendRedirect()：在客户端浏览器跳转，客户端浏览器能看到地址变化<br>&lt;jsp:forward &gt;在服务器跳转，客户端浏览器不能看到地址变化</p><h3 id="4-6-3-session对象"><a href="#4-6-3-session对象" class="headerlink" title="4.6.3 session对象"></a>4.6.3 session对象</h3><p><strong>同一个浏览器</strong>打开的<strong>同一个服务器下</strong>的<strong>所有页面</strong>共享<strong>同一个Session对象。</strong></p><p><strong>作用</strong>：用于在这些页面之间实现数据共享</p><p>登录成功时，系统将登录成功信息放入session对象中:在每一个其他的页面的顶端，加入验证代码，查看session对象中是否有登录成功标志，如果有，XXXXX，如果没有，YYYY</p><h3 id="4-6-4-application对象"><a href="#4-6-4-application对象" class="headerlink" title="4.6.4 application对象"></a>4.6.4 application对象</h3><p><strong>作用：</strong>代表运行在服务器上的所有Web应用程序，针对所有页面，一旦创建，除非服务器关闭，否则将一直保持下去</p><p>session每次浏览器的访问</p><p><img src="/2024/07/07/Java/JavaEE/image-20220928093125371.png" alt="image-20220928093125371"> </p><h3 id="1-6-5-内置对象的作用范围"><a href="#1-6-5-内置对象的作用范围" class="headerlink" title="1.6.5 内置对象的作用范围"></a>1.6.5 内置对象的作用范围</h3><p>JSP的内置对象一种有四种范围</p><p>（1）page。page范围内的对象仅在<strong>当前JSP页面内</strong>有效</p><p>（2）request。由于采用&#96;&#96;<a href="jsp:forward">jsp:forward</a><code>和</code>response.sendRedirect()&#96;等重定向技术，跳转和包含的页面。在当前request范围内的若干个页面有效</p><p>（3）session。客户端与服务器的交互过程，称为session（会话）。在同一用户的所有页面（用同一浏览器、同一服务器）</p><p>（4）application。部署在服务器上的Web应用程序与所有客户端的交互过程。作用在网站下的所有页面</p><h2 id="1-7-JavaBean"><a href="#1-7-JavaBean" class="headerlink" title="1.7 JavaBean"></a>1.7 JavaBean</h2><p>JavaBean编写规范：</p><ol><li>构造方法：必须提一个无参的构造方法</li><li>set和get方法：<br>对于变量XXX，应提供方法getXxx()和setXxx()<br>getXxx()用于获取变量XXX的值<br>setXxx()用于设置变量XXX的值</li></ol><p>JavaBean组件是一些可移植、可重用，并可以组装到应用程序中的类。</p><p>在JavaBean中封装事务逻辑、数据库操作等，使用JSP调用，如果需要修改，直接修改JavaBean就可以了，不需要对JSP代码进行修改。</p><h4 id="1"><a href="#1" class="headerlink" title="1. &lt;jsp:useBean&gt;"></a>1. <code>&lt;jsp:useBean&gt;</code></h4><p><strong>作用：</strong>声明一个具有一定生存范围及一个唯一id的JavaBean的实例，JSP页面通过id来识别JavaBean，并可通过id.method类似的语句来操作JavaBean。</p><p><strong>语法：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">&quot;对象名&quot;</span> class=<span class="string">&quot;类名&quot;</span> scope=<span class="string">&quot;范围&quot;</span>/&gt;</span><br><span class="line">&lt;% 类名 对象名=<span class="keyword">new</span> 类名() %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="comment">//实例 %&gt;</span></span><br><span class="line">&lt;jsp:useBean id=<span class="string">&quot;s1&quot;</span> class=<span class="string">&quot;Student&quot;</span> scope=<span class="string">&quot;application&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h4 id="2"><a href="#2" class="headerlink" title="2. &lt;jsp:getProperty&gt;"></a>2. <code>&lt;jsp:getProperty&gt;</code></h4><p>**作用:**获取属性，用来返回一个已被创建的bean组件的属性值</p><p><strong>语法：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:getProperty name=<span class="string">&quot;对象名&quot;</span> property=<span class="string">&quot;属性名&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:getProperty name=<span class="string">&quot;s1&quot;</span> property=<span class="string">&quot; name &quot;</span> /&gt;</span><br><span class="line">&lt;%<span class="comment">// 等价于 %&gt;</span></span><br><span class="line">&lt;%=s1.getName&gt;</span><br></pre></td></tr></table></figure><h4 id="3"><a href="#3" class="headerlink" title="3. &lt;jsp:setProperty&gt;"></a>3. <code>&lt;jsp:setProperty&gt;</code></h4><p><strong>作用：</strong>设定一个已被创建的bean组件的属性值</p><p><strong>语法：</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:setProperty name=<span class="string">&quot;对象名&quot;</span> property=<span class="string">&quot;属性名&quot;</span> value=<span class="string">&quot;属性值&quot;</span> /&gt;</span><br><span class="line">&lt;jsp:setProperty name=<span class="string">&quot;对象名&quot;</span> property=<span class="string">&quot;属性名&quot;</span> param=<span class="string">&quot;参数值&quot;</span> /&gt;</span><br><span class="line">&lt;% <span class="comment">// 用表单空间的值给JavaBean对象属性赋值 %&gt;</span></span><br><span class="line">&lt;jsp:setProperty name=<span class="string">&quot;对象名&quot;</span> property=<span class="string">&quot;*&quot;</span> /&gt;</span><br><span class="line">&lt;% <span class="comment">// 用表单空间的值给JavaBean同名属性赋值 %&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-生命周期"><a href="#4-生命周期" class="headerlink" title="4. 生命周期"></a>4. 生命周期</h4><p>生存范围见内置对象</p><h1 id="二、JDBC访问数据库"><a href="#二、JDBC访问数据库" class="headerlink" title="二、JDBC访问数据库"></a>二、JDBC访问数据库</h1><p>jar包放在Tomcat安装目录\lib</p><h2 id="2-1-基本概念"><a href="#2-1-基本概念" class="headerlink" title="2.1 基本概念"></a>2.1 基本概念</h2><p>JDBC（Java DataBase Connection）</p><p>由Sun公司制定的，用于执行SQL语句的Java API(Application Programming Interface)，由一些Java语言编写的类和接口组成。</p><h2 id="2-2-使用JDBC访问数据库的基本步骤"><a href="#2-2-使用JDBC访问数据库的基本步骤" class="headerlink" title="2.2 使用JDBC访问数据库的基本步骤"></a>2.2 使用JDBC访问数据库的基本步骤</h2><p>（1）加载驱动程序</p><p><code>Class.forName(“数据库驱动程序串”)；</code></p><p>（2）获取数据库连接</p><p><code>DriverManager.getConnection(“URL”, ”Username”, ”Password”);</code></p><p>（3）创建Statement对象</p><p><code>&lt;Connection对象&gt;.createStatement();</code></p><p>（4）执行SQL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Statement对象&gt;.executeQuery(“查询语句”);</span><br><span class="line">&lt;Statement对象&gt;.executeUpdate(“修改语句”);</span><br></pre></td></tr></table></figure><p>（5）处理返回数据</p><p>（6）释放对象和数据库连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ResultSet对象&gt;.close();</span><br><span class="line"></span><br><span class="line">&lt;Statement对象&gt;.close();</span><br><span class="line"></span><br><span class="line">&lt;Connection对象&gt;.close();</span><br></pre></td></tr></table></figure><h2 id="2-3-开发人员常用的JDBC-API"><a href="#2-3-开发人员常用的JDBC-API" class="headerlink" title="2.3 开发人员常用的JDBC API"></a>2.3 开发人员常用的JDBC API</h2><h3 id="（1）Class"><a href="#（1）Class" class="headerlink" title="（1）Class"></a>（1）Class</h3><p>作用：加载数据库驱动程序；</p><p>用法：Class.forName(“数据库驱动程序串”)；</p><p>常用驱动程序：</p><p>ODBC的驱动程序：“sun.jdbc.odbc.JdbcOdbcDriver”</p><p>SQL Server的驱动程序：“com.microsoft.jdbc.sqlserver. SQLServerDriver”</p><p>Oracle的驱动程序：“oracle.jdbc.driver.OracleDriver”</p><h3 id="（2）DriverManager"><a href="#（2）DriverManager" class="headerlink" title="（2）DriverManager"></a>（2）DriverManager</h3><p>作用：创建数据库连接；</p><p>用法：<code>DriverManager.getConnection(“URL”,”Username”,”Password”);</code></p><p>说明：</p><p>URL为数据库统一资源定位符，即数据库的地址。URL的格式为“协议标识：驱动程序标识：数据库标识”，其中，协议标识固定为jdbc，驱动程序标识为驱动定义的类型，一般用于识别数据库服务器的地址和端口号，数据库标识用来识别某个特定的数据库，一般为数据库名称或ODBC数据源名称。</p><p>Username为用户名；</p><p>Password为用户密码。</p><h3 id="（3）Connection"><a href="#（3）Connection" class="headerlink" title="（3）Connection"></a>（3）Connection</h3><p>用来管理JDBC和数据库之间的连接。</p><p>常用方法：</p><p>1）<code>void setAutoCommit(boolean autoCommit) throws SQLException</code></p><p>功能：设置自动提交，参数autoCommit为true是自动提交，false是不自动提交。</p><p>说明：数据库连接处于自动提交状态时，每执行一条SQL语句提交一次；否则，由程序逻辑调用commit()方法显示提交。默认状态下，连接处于自动提交状态下。</p><p>2）<code>boolean getAutoCommit() throws SQLException</code></p><p>功能：获取连接的自动提交模式。</p><p>说明：自动提交模式返回true；否则返回false。</p><p>3）<code>void rollback() throws SQLException</code></p><p>功能：取消当前事务的执行的所有SQL语句，即回滚。</p><p>说明：只有在连接处于非自动提交状态时，该方法才可以使用。</p><p>4）<code>void commit() throws SQLException</code></p><p>功能：提交当前事务，既使当前事务中的所有SQL语句对数据库的更改生效、永久化。</p><p>说明：只有在连接处于非自动提交状态时，该方法才可以使用。</p><p>5）<code>void close() throws SQLException</code></p><p>功能：释放数据库连接和JDBC的所有资源。</p><p>6）<code>boolean isClosed() throws SQLException</code></p><p>功能：判断数据库连接是否释放。</p><p>7）<code>Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException</code></p><p>功能：创建一个Statement对象，通过该Statement对象，能够生成给定类型和并发性的ResultSet对象。</p><p>说明：</p><p>resultSetType参数有三种取值：</p><ul><li><p>ResultSet.TYPE_FORWARD_ONLY：结果集指针只能向前移动</p></li><li><p>ResultSet.TYPE_SCROLL_INSENSITIVE：结果集指针可以随意移动，自从获取数据后，数据库内容的变化不会引起结果集内容的变化。</p></li><li><p>ResultSet.TYPE_SCROLL_SENSITIVE: 结果集指针可以随意移动，获取数据后，数据库内容的变化将引起结果集内容的变化。</p></li></ul><p>resultSetConcurrency参数有两种取值：</p><ul><li><p>ResultSet.CONCUR_READ_ONLY：不能通过结果集中数据的更改来更新数据库。</p></li><li><p>ResultSet.CONCUR_UPDATABLE：可以通过结果集中数据的更改来更新数据库。</p></li></ul><p>8）<code>Statement createStatement( ) throws SQLException</code></p><p>功能：创建一个Statement对象，通过该Statement对象，生成ResultSet对象的类型默认为ResultSet.TYPE_FORWARD_ONLY，并发性默认为ResultSet.CONCUR_READ_ONLY。</p><p>9）<code>PreparedStatement prepareStatement(String sql) throws SQLException</code></p><p>功能：</p><p>10）<code>PreparedStatement prepareStatement(String sql, int resultSetType,int resultSetConcurrency) throws SQLException</code></p><p>11）<code>CallableStatement prepareCall(String sql) throws SQLException</code></p><p>12）<code>CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency) throws SQLException</code></p><h3 id="（4）Statement"><a href="#（4）Statement" class="headerlink" title="（4）Statement"></a>（4）Statement</h3><p><strong>作用</strong>：用于执行SQL语句</p><p>Statement对象代表SQL语句，可用于将SQL语句发往数据库。</p><p>Statement对象用于执行一条静态的SQL语句并获得它的结果，记录结果集。</p><p><strong>3种Statement对象：</strong></p><ul><li><p>Statement：执行基本的SQL语句。</p></li><li><p>PreparedStatement：继承自Statement，用于提供可以与查询信息一起预编译的语句，用于执行带参数的SQL语句。</p></li><li><p>CallableStatement：继承自PreparedStatement ，用来执行数据库中的存储过程。</p></li></ul><p><strong>常用方法：</strong></p><ul><li><p>ResultSet executeQuery(String sql) throws SQLException<br>执行一条返回单个ResultSet的SQL语句。</p></li><li><p>int executeUpdate(String sql) throws SQLException<br>执行INSERT、UPDATE、DELETE以及没有返回结果的SQL语句，如DDL语句。方法返回语句影响的行数。</p></li><li><p>boolean execute(String sql) throws SQLException<br>执行一条可能返回多个结果的SQL语句。<br>如果下一个结果是ResultSet，返回true，否则返回false。</p></li><li><p>ResultSet getResultSet() throws SQLException<br>得到当前的ResultSet结果。</p></li><li><p>int getUpdateCount() throws SQLException<br>得到更新的数量，如果结果是一个ResultSet或没有其他结果，返回-1。</p></li><li><p>void close() throws SQLException<br>关闭语句，同时立即释放该语句的数据库和JDBC资源，如果它有相应的ResultSet，则ResultSet也会被关闭。</p></li></ul><h3 id="（5）ResultSet"><a href="#（5）ResultSet" class="headerlink" title="（5）ResultSet"></a>（5）ResultSet</h3><p>用来接收执行SQL查询语句后得到的记录集。</p><p>用它的getXXX方法可以得到记录中不同列的数据。可通过列的索引或名字来获取值，列索引从1开始。</p><p>用next()可把当前记录指针往下移动一行。</p><p><strong>常用方法：</strong></p><ul><li><p>boolean absolute(int row) throws SQLException<br>当记录指针可以上下移动查询时移动当前记录指针到指定行。<br>参数row为正数，指针移动到正方向第row个记录；参数row为负数，指针移动到反方向第row个记录。<br>第一行行号为1。<br>当记录指针移到第一行的前面或最后一行的后面，返回值false。</p></li><li><p>boolean next() throws SQLException<br>当前记录指针下移一行。<br>指针初始位置为第一行之前。<br>当移动指针到最后一行之后时，返回false;否则返回true。</p></li><li><p>boolean previous() throws SQLException<br>previous先前的<br>当记录指针可以上下移动时，当前记录指针上移一行。<br>当移动指针到第一行之前时，返回false;否则返回true。</p></li><li><p>boolean relative(int rows)<br>relative 相对的<br>将记录指针相对于当前行移动rows行，正数向后移，负数向前移。</p></li><li><p>void beforeFirst()<br>将指针移动到第一行的前面。</p></li><li><p>boolean first()<br>将指针移动到第一行。</p></li><li><p>boolean last()<br>将指针移动到最后一行。</p></li><li><p>void afterLast()<br>将指针移动到最后一行的后面。</p></li><li><p>boolean isFirst() 判断指针是否指向第一行</p></li><li><p>boolean isLast() 判断指针是否指向最后一行</p></li><li><p>boolean isBeforeFirst()</p></li><li><p>boolean isAfterLast()</p></li></ul><p><strong>注意：</strong></p><p>使用所有除了next()以外的指针移动方法有一个前提条件，记录指针必须是可以上下移动的，即产生ResultSet的Statement的创建应该如下：</p><p>createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, XXXX) 或</p><p>createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, XXXX)</p><p>用它的getXXX方法可以得到记录中不同列的数据。可通过列的索引或名字来获取值，列索引从1开始。</p><p>XXX代表数据类型</p><p>xxx getXxx(int columnIndex)</p><p>xxx getXxx(String  columnLabel)</p><p>参数columnIndex为列索引，第一列索引号为1；参数columnLabel为列名。</p><p>xxx可以是boolean、byte、short、int、long、float、double、String、……</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="title function_">getByte</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="title function_">getShort</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">getInt</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="title function_">getLong</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">getFloat</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">getDouble</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">getBoolean</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span>[] getBytes(<span class="type">int</span> columnIndex | String columnLabel)</span><br><span class="line"></span><br><span class="line">Date <span class="title function_">getDate</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span></span><br><span class="line"></span><br><span class="line">Time <span class="title function_">getTime</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span> </span><br><span class="line"></span><br><span class="line">String <span class="title function_">getString</span><span class="params">(<span class="type">int</span> columnIndex | String columnLabel)</span><span class="comment">//最常用</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">getRow</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 获取当前行的行号，从1开始。如果没有当前行，返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span><br><span class="line"><span class="comment">// 关闭ResultSet对象，立即释放该语句的数据库和JDBC资源。</span></span><br></pre></td></tr></table></figure><h2 id="2-4-JDBC实验"><a href="#2-4-JDBC实验" class="headerlink" title="2.4 JDBC实验"></a>2.4 JDBC实验</h2><h3 id="2-4-1-编写JSP程序，输出学生数据库的学生基本信息。"><a href="#2-4-1-编写JSP程序，输出学生数据库的学生基本信息。" class="headerlink" title="2.4.1 编写JSP程序，输出学生数据库的学生基本信息。"></a>2.4.1 编写JSP程序，输出学生数据库的学生基本信息。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> pageEncoding=<span class="string">&quot;GB2312&quot;</span>%&gt;<span class="comment">//import必须引入这个包</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line"> &lt;head&gt;  </span><br><span class="line"></span><br><span class="line">  &lt;title&gt;output the student<span class="string">&#x27;s information&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;/head&gt; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String url = &quot;jdbc:mysql://127.0.0.1:3306/mis?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot;;//东八区</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Connection conn = DriverManager.getConnection(url, &quot;root&quot;,&quot;123456&quot;);//建立数据库连接</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Statement stmt = conn.createStatement();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> ResultSet rs = stmt.executeQuery(&quot;select * from student&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;table width=800 border=1 align=&#x27;</span>center<span class="string">&#x27;&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;tr&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;学号&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;用户名&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;密码&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;姓名&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;性别&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;出生日期&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;专业&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;年级&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;td&gt;电话号码&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;/tr&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> while(rs.next())&#123;  //rs结果集</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;tr&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;sno&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;susername&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;spassword&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;sname&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;ssex&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;sbirthday&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;smajor&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;sgrade&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;td&gt;&quot;+rs.getString(&quot;sphone&quot;)+&quot;&lt;/td&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   out.println(&quot;&lt;/tr&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;&lt;/table&gt;&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> rs.close();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> stmt.close();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> conn.close();    //释放资源</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  %&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-2-编写JSP程序，向数据库添加学生信息。"><a href="#2-4-2-编写JSP程序，向数据库添加学生信息。" class="headerlink" title="2.4.2 编写JSP程序，向数据库添加学生信息。"></a>2.4.2 编写JSP程序，向数据库添加学生信息。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//input.jsp</span></span><br><span class="line"></span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;gb2312&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;title&gt;输入学生基本信息&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h2&gt;请输入学生基本信息:&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;add.jsp&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;   <span class="comment">//提交到add.jsp</span></span><br><span class="line"></span><br><span class="line">用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;susername&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;spassword&quot;</span>/&gt; </span><br><span class="line"></span><br><span class="line">&lt;p&gt;学号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;sno&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;sname&quot;</span>/&gt; </span><br><span class="line"></span><br><span class="line">&lt;p&gt;性别：男&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;ssex&quot;</span> value=<span class="string">&quot;m&quot;</span> checked/&gt;</span><br><span class="line"></span><br><span class="line">​     女&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;ssex&quot;</span> value=<span class="string">&quot;f&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;出生日期：</span><br><span class="line"></span><br><span class="line">  &lt;select name=<span class="string">&quot;year&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;%</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1980</span>;i&lt;=<span class="number">2000</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">   out.println(<span class="string">&quot;&lt;option value=&#x27;&quot;</span>+i+<span class="string">&quot;&#x27;&gt;&quot;</span>+i+<span class="string">&quot;&lt;/option&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;  </span><br><span class="line"></span><br><span class="line">   %&gt;   </span><br><span class="line"></span><br><span class="line">  &lt;/select&gt;年</span><br><span class="line"></span><br><span class="line">  &lt;select name=<span class="string">&quot;month&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;%</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">   out.println(<span class="string">&quot;&lt;option value=&#x27;&quot;</span>+i+<span class="string">&quot;&#x27;&gt;&quot;</span>+i+<span class="string">&quot;&lt;/option&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;  </span><br><span class="line"></span><br><span class="line">   %&gt;    </span><br><span class="line"></span><br><span class="line">  &lt;/select&gt;月</span><br><span class="line"></span><br><span class="line">  &lt;select name=<span class="string">&quot;day&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;%</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">31</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">   out.println(<span class="string">&quot;&lt;option value=&#x27;&quot;</span>+i+<span class="string">&quot;&#x27;&gt;&quot;</span>+i+<span class="string">&quot;&lt;/option&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;  </span><br><span class="line"></span><br><span class="line">   %&gt;     </span><br><span class="line"></span><br><span class="line">  &lt;/select&gt;日</span><br><span class="line"></span><br><span class="line">&lt;p&gt;电话号码：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;sphone&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;年级：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;sgrade&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;专业：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;smajor&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重写&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//add.jsp</span></span><br><span class="line"></span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> pageEncoding=<span class="string">&quot;GB2312&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line"> &lt;head&gt;  </span><br><span class="line"></span><br><span class="line">  &lt;title&gt;output the student<span class="string">&#x27;s information&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;/head&gt; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sno = request.getParameter(&quot;sno&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String susername = request.getParameter(&quot;susername&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String spassword = request.getParameter(&quot;spassword&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sname = request.getParameter(&quot;sname&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String ssex = request.getParameter(&quot;ssex&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sbirthday = request.getParameter(&quot;year&quot;)+&quot;-&quot;+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​           request.getParameter(&quot;month&quot;)+&quot;-&quot;+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​           request.getParameter(&quot;day&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String smajor = request.getParameter(&quot;smajor&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sgrade = request.getParameter(&quot;sgrade&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sphone = request.getParameter(&quot;sphone&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String url = &quot;jdbc:mysql://127.0.0.1:3306/mis?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Connection conn = DriverManager.getConnection(url, &quot;root&quot;,&quot;123456&quot;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Statement stmt = conn.createStatement();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> String sql=&quot;insert into student &quot;+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​    &quot;(sno,sname,ssex,sbirthday,smajor,sgrade,sphone,susername,spassword)&quot;+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​    &quot; values(&#x27;</span><span class="string">&quot;+sno+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+sname+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+ssex+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+sbirthday+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+smajor+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​    &quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+sgrade+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+sphone+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+susername+&quot;</span><span class="string">&#x27;,&#x27;</span><span class="string">&quot;+spassword+&quot;</span><span class="string">&#x27;)&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> stmt.executeUpdate(sql);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> out.println(&quot;数据已成功添加到数据库中。&quot;); </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> stmt.close();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> conn.close();  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  %&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-3-编写JaveBean，对数据库中的数据进行查询、删除和修改。"><a href="#2-4-3-编写JaveBean，对数据库中的数据进行查询、删除和修改。" class="headerlink" title="2.4.3 编写JaveBean，对数据库中的数据进行查询、删除和修改。"></a>2.4.3 编写JaveBean，对数据库中的数据进行查询、删除和修改。</h3><p>功能：加载驱动程序；建立数据库连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;    <span class="comment">//JDBC有关的包都在这里面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DBConn</span> &#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">private</span> Connection conn=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">private</span> String driver,url,username,password;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">//String connectionUrl = //&quot;jdbc:sqlserver://localhost:1433;databaseName=test;user=sa;password=sa;&quot;;</span></span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> <span class="title function_">DBConn</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">​     <span class="built_in">this</span>.driver= <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.url= <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mis? characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&quot;</span></span><br><span class="line"></span><br><span class="line">​     <span class="built_in">this</span>.username=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="built_in">this</span>.password=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      Class.forName(driver);</span><br><span class="line"></span><br><span class="line">​      conn=DriverManager.getConnection(url,username,password);</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;不能加载数据库驱动。&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;不能建立数据库连接。&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     </span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">add</span><span class="params">(String username,String password,</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">​           String realname,String sex,String email)</span>&#123;</span><br><span class="line"></span><br><span class="line">​     <span class="type">boolean</span> temp=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">​     PreparedStatement stmt=<span class="literal">null</span>;  <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">​    String sql=<span class="string">&quot;insert into reginfor(username,password,realname,sex,email) &quot;</span>;</span><br><span class="line"></span><br><span class="line">​        sql=sql+<span class="string">&quot;values(?,?,?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      stmt=conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">1</span>,username);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">2</span>,password);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">3</span>,realname);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">4</span>,sex);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">5</span>,email);</span><br><span class="line"></span><br><span class="line">​      stmt.execute();</span><br><span class="line"></span><br><span class="line">​      temp=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;添加数据异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     </span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> ResultSet <span class="title function_">find</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">​     Statement stmt=<span class="literal">null</span>;  <span class="comment">//定义语句对象，用statement不用传参数</span></span><br><span class="line"></span><br><span class="line">​     ResultSet rs=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      stmt=conn.createStatement();</span><br><span class="line"></span><br><span class="line">​      rs=stmt.executeQuery(<span class="string">&quot;select * from reginfor&quot;</span>);  </span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;查询异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">return</span> rs;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> ResultSet <span class="title function_">find</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line"></span><br><span class="line">​     PreparedStatement stmt=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​     ResultSet rs=<span class="literal">null</span>; <span class="comment">//定义结果集</span></span><br><span class="line"></span><br><span class="line">​     String sql=<span class="string">&quot;select * from reginfor &quot;</span> +</span><br><span class="line"></span><br><span class="line">​        <span class="string">&quot;where username=? and password=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      stmt=conn.prepareStatement(sql);<span class="comment">//创建语句对象</span></span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">1</span>,username);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">2</span>,password);</span><br><span class="line"></span><br><span class="line">​      rs=stmt.executeQuery();  <span class="comment">//执行SQL语句</span></span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;查询异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">return</span> rs;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> id)</span>&#123;</span><br><span class="line"></span><br><span class="line">​     <span class="type">boolean</span> temp=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">​     PreparedStatement stmt=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​     String sql=<span class="string">&quot;delete from reginfor where id=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      stmt=conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">​      stmt.setInt(<span class="number">1</span>,id);</span><br><span class="line"></span><br><span class="line">​      stmt.execute();</span><br><span class="line"></span><br><span class="line">​      temp=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;删除异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     </span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(<span class="type">int</span> id,String username,String password,</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">​          String realname,String sex,String email)</span>&#123;</span><br><span class="line"></span><br><span class="line">​     <span class="type">boolean</span> temp=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">​     PreparedStatement stmt=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​     String sql=<span class="string">&quot;update reginfor &quot;</span> +</span><br><span class="line"></span><br><span class="line">​        <span class="string">&quot;set username=?,password=?,realname=?,&quot;</span> +</span><br><span class="line"></span><br><span class="line">​        <span class="string">&quot;sex=?,email=? where id=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      stmt=conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">1</span>,username);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">2</span>,password);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">3</span>,realname);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">4</span>,sex);</span><br><span class="line"></span><br><span class="line">​      stmt.setString(<span class="number">5</span>,email);  </span><br><span class="line"></span><br><span class="line">​      stmt.setInt(<span class="number">6</span>,id);</span><br><span class="line"></span><br><span class="line">​      stmt.execute();</span><br><span class="line"></span><br><span class="line">​      temp=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;更新异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     </span><br><span class="line"></span><br><span class="line">​     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(ResultSet rs)</span>&#123;</span><br><span class="line"></span><br><span class="line">​     System.out.print(<span class="string">&quot;ID&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     System.out.print(<span class="string">&quot;用户名&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     System.out.print(<span class="string">&quot;密　码&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     System.out.print(<span class="string">&quot;姓　名&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     System.out.print(<span class="string">&quot;性　别&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     System.out.println(<span class="string">&quot;邮　箱&quot;</span>+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">​      <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"></span><br><span class="line">​      System.out.print(rs.getString(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      System.out.print(rs.getString(<span class="string">&quot;username&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      System.out.print(rs.getString(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      System.out.print(rs.getString(<span class="string">&quot;realname&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      System.out.print(rs.getString(<span class="string">&quot;sex&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      System.out.println(rs.getString(<span class="string">&quot;email&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      &#125;</span><br><span class="line"></span><br><span class="line">​     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">​      System.out.println(<span class="string">&quot;输出异常．&quot;</span>);</span><br><span class="line"></span><br><span class="line">​      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、Servlet"><a href="#三、Servlet" class="headerlink" title="三、Servlet"></a>三、Servlet</h1><h2 id="3-1-Web应用模型"><a href="#3-1-Web应用模型" class="headerlink" title="3.1 Web应用模型"></a>3.1 Web应用模型</h2><p>一次请求处理过程：</p><ol><li>客户端向服务器发出一个请求</li><li>建立连接</li><li>服务器对客户端的请求进行响应</li><li>断开连接</li></ol><p><img src="/2024/07/07/Java/JavaEE/image-20221113102156559.png" alt="image-20221113102156559"> </p><p>HTTP协议的两个重要特性：</p><ul><li>无状态：服务器不会记录和保持客户端的任何信息</li><li>无连接：服务器不会保持与客户端的永久性连接</li></ul><h2 id="3-2-Servlet基础"><a href="#3-2-Servlet基础" class="headerlink" title="3.2 Servlet基础"></a>3.2 Servlet基础</h2><p>Servlet是服务器端的Java应用程序，用来扩展服务器的功能，运行在Web服务器里。</p><h3 id="3-2-1-Servlet工作流程"><a href="#3-2-1-Servlet工作流程" class="headerlink" title="3.2.1 Servlet工作流程"></a>3.2.1 Servlet工作流程</h3><h4 id="1、服务器、容器与Servlet之间的关系"><a href="#1、服务器、容器与Servlet之间的关系" class="headerlink" title="1、服务器、容器与Servlet之间的关系"></a>1、服务器、容器与Servlet之间的关系</h4><p>（1）Web服务器包含多个容器，一个容器对应于一个Web应用</p><p>（2）一个Web容器可以运行多个Servlet实例</p><p>（3）一个Servlet实例以多线程的形式运行</p><p> <img src="/2024/07/07/Java/JavaEE/image-20221113102803215.png" alt="image-20221113102803215"> </p><h4 id="2、Servlet的工作流程"><a href="#2、Servlet的工作流程" class="headerlink" title="2、Servlet的工作流程"></a>2、Servlet的工作流程</h4><p>（1）客户端向Web服务器发送请求</p><p>（2）Web服务器将请求发给Web容器</p><p>（3）Web容器将Servlet实例化，创建线程，调用init()方法</p><p>（4）Web容器将客户端请求发给Servlet，调用对应的do方法（doGet、doPost、doPut、doDelete）</p><p>（5）Servlet创建一个响应，并将响应返回给Web容器</p><p>（6）Web容器将响应返回给Web服务器</p><p>（7）Web服务器将响应返回给客户端</p><p>（8）当服务器关闭或者Servlet空闲时间超过一定限度时，Web容器将Servlet实例从内存移除，调用destroy()方法</p><p> <strong>注意：</strong></p><ul><li>init()方法只执行一次，Web容器将Servlet实例化时执行</li><li>destroy()方法只执行一次，当服务器关闭或者Servlet空闲时间超过一定限度时执行</li><li>do方法执行很多次，客户端每请求一次就执行一次</li></ul><h3 id="3-2-2-Servlet编程接口"><a href="#3-2-2-Servlet编程接口" class="headerlink" title="3.2.2 Servlet编程接口"></a>3.2.2 Servlet编程接口</h3><p><img src="/2024/07/07/Java/JavaEE/image-20221113103548342.png" alt="image-20221113103548342"> </p><h4 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h4><p>所有Servlet应用必须继承HttpServlet，常用的方法如下：</p><p>（1）<code>void doGet(HttpServletRequest req, HttpServletResponse resp)</code><br>当客户端发出get请求时，Web服务器调用该方法</p><p>（2）<code>void doPost(HttpServletRequest req, HttpServletResponse resp)</code><br>当客户端发出post请求时，Web服务器调用该方法</p><h4 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h4><p>代表发送到HttpServlet的请求，封装了客户端环境和从客户端发送到Servlet的数据。</p><p>常用方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpSession <span class="title function_">getSession</span><span class="params">()</span></span><br><span class="line">String <span class="title function_">getParameter</span><span class="params">(String name)</span></span><br><span class="line">String[] getParameterValues(String name)</span><br><span class="line">RequestDispatcher <span class="title function_">getRequestDispatcher</span><span class="params">(String path)</span></span><br><span class="line">ServletContext <span class="title function_">getServletContext</span><span class="params">()</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setCharacterEncoding</span><span class="params">(String env)</span></span><br></pre></td></tr></table></figure><h4 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h4><p>代表HttpServlet返回给客户端的响应，常用方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">sendRedirect</span><span class="params">(String location)</span></span><br><span class="line">PrintWriter <span class="title function_">getWriter</span><span class="params">()</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setCharacterEncoding</span><span class="params">(String charset)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentType</span><span class="params">(String type)</span></span><br></pre></td></tr></table></figure><h4 id="HttpSession"><a href="#HttpSession" class="headerlink" title="HttpSession"></a>HttpSession</h4><p>用来在无状态的HTTP协议下跨越多个请求页面来维持状态和识别用户。</p><p>常用方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletContext <span class="title function_">getServlet</span><span class="params">()</span></span><br><span class="line">Object <span class="title function_">getAttribute</span><span class="params">(java.lang.String name)</span></span><br><span class="line">Enumeration&lt;java.lang.String&gt; getAttributeNames()</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setAttribute</span><span class="params">(java.lang.String name, java.lang.Object value)</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isNew</span><span class="params">()</span></span><br></pre></td></tr></table></figure><h4 id="ServletConfig"><a href="#ServletConfig" class="headerlink" title="ServletConfig"></a>ServletConfig</h4><p>代表Servlet的配置信息（在Web.xml中设置）</p><p>常用方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">getInitParameter</span><span class="params">(java.lang.String name)</span></span><br><span class="line">Enumeration&lt;java.lang.String&gt; getInitParameterNames()</span><br><span class="line">ServletContet <span class="title function_">getServletContext</span><span class="params">()</span></span><br><span class="line">String <span class="title function_">getServletName</span><span class="params">()</span></span><br></pre></td></tr></table></figure><h4 id="RequestDispatcher"><a href="#RequestDispatcher" class="headerlink" title="RequestDispatcher"></a>RequestDispatcher</h4><p>请求转发器，可将客户端的请求转发到另一个程序</p><p>常用方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">forward</span><span class="params">(ServletRequest request, ServletResponse response)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">include</span><span class="params">(ServletRequest request, ServletResponse response)</span></span><br></pre></td></tr></table></figure><h4 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h4><p>代表Servlet的运行环境信息</p><h4 id="ServletException"><a href="#ServletException" class="headerlink" title="ServletException"></a>ServletException</h4><p>代表Servlet运行过程中抛出的例外</p><h2 id="3-3-编写Servlet"><a href="#3-3-编写Servlet" class="headerlink" title="3.3 编写Servlet"></a>3.3 编写Servlet</h2><p>（1）定义Servlet类，继承HttpServlet</p><p>（2）定义doGet()、doPost()、init()、destroy()等方法</p><p>（3）建立Servlet与URL之间的映射</p><ul><li><p>在web.xml中配置<br><img src="/2024/07/07/Java/JavaEE/image-20221113111022387.png" alt="image-20221113111022387"><br>URL与Servlet实例之间的映射：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Servlet实例名称<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>URL<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Servlet实例与Servlet类之间的映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Servlet实例名称<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Servlet类名称<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>注解@WebServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name=&quot;实例名称&quot;, urlPatterns=&quot;URL&quot;)</span></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="meta">@WebS</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="期末考试"><a href="#期末考试" class="headerlink" title="期末考试"></a>期末考试</h1><p>简答题<br>1.请简要解释HTML、JavaEE、JSP、JDBC的英文含义和中文含义。<br>2.请简要叙述Servlet和JSP在软件开发时的作用与地位。。<br>3.请简要说明JSP页面第一次运行时的过程。<br>4.请简要叙述MVC设计模式，JSP、JavaBean和Servlet在MVC设计模式中的作用。<br>5.请简要叙述include指令和include动作的功能，以及它们的区别。<br>6.请简要叙述JavaBean的四种生存范围。<br>7.请简要描述Servlet的基本工作流程。<br>8.请简要说明JDBC访问数据库的基本步骤。<br>9.请简要叙述利用JDBC访问数据库时常用的类和接口有哪些。<br>10.请简要解释下列JSP内置对象的主要用途：request、response、session、application。</p><p>材料分析题考点（填空）<br>1.表单<br>    一个表单，用于学生的信息</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=gb2312&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;titile&gt;<span class="built_in">this</span> is a form&lt;/titile&gt;&lt;/head&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    String origins[]=&#123;<span class="string">&quot;黑龙江&quot;</span>,<span class="string">&quot;吉林&quot;</span>,<span class="string">&quot;辽宁&quot;</span>,<span class="string">&quot;山东&quot;</span>,<span class="string">&quot;江苏&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;浙江&quot;</span>,<span class="string">&quot;福建&quot;</span>&#125;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;请输入学生基本信息&lt;/h2&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/hello/servlet/print&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">        &lt;p&gt;姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;realname&quot;</span>/&gt;</span><br><span class="line">        &lt;p&gt;性别：</span><br><span class="line">            男：&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;sex&quot;</span> value=<span class="string">&quot;male&quot;</span> checked/&gt;</span><br><span class="line">            女：&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;sex&quot;</span> value=<span class="string">&quot;femle&quot;</span>/&gt;</span><br><span class="line">        &lt;p&gt;爱好：</span><br><span class="line">            文学&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;art&quot;</span>/&gt;</span><br><span class="line">            体育&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;sports&quot;</span>/&gt;</span><br><span class="line">        &lt;p&gt;籍贯：</span><br><span class="line">            &lt;select name=<span class="string">&quot;origin&quot;</span>&gt;</span><br><span class="line">            &lt;%</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">inti</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;origins.length; i++) &#123;</span><br><span class="line">                    out.println(<span class="string">&quot;&lt;option value=&quot;</span>+origins[i]+<span class="string">&quot;&gt;&quot;</span>+origins[i]+<span class="string">&quot;&lt;/option&gt;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            %&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">        &lt;p&gt;备注：&lt;br&gt;</span><br><span class="line">            &lt;textarea name=<span class="string">&quot;memo&quot;</span> rows=<span class="number">5</span> cols=<span class="number">50</span>&gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;p&gt;&lt;input type=<span class="string">&quot;sbumit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>/&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>2.JSP脚本<br>3.request对象、session对象、application对象<br>4.JavaBean及在JSP中使用JavaBean<br>5.基于JDBC访问数据库<br>6.Servlet</p><p>编程题</p><p>1.编写JavaBean<br>2.JSP脚本</p><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><p>**1.请简要解释HTML、JavaEE、JSP、JDBC的英文含义和中文含义。</p><p>HTML：Hyper Text Markup Language，超文本标记语言<br>JavaEE：Java Enterprise Editionjava企业版<br>JSP：Java Server Pages java服务器端页面<br>JDBC：Java Database Connectionjava数据库连接</p><p><strong>2.请简要叙述Servlet和JSP在软件开发时的作用与地位。</strong></p><p>Servlet和JSP都是J2EE的组件。<br>Servlet主要用于实现软件和组成系统的控制。<br>JSP主要用于实现软件的界面。</p><p><strong>3.请简要说明JSP页面第一次运行时的过程。</strong></p><p>（1）客户端发送请求（URL地址）（jsp）</p><p>（2）服务器将 JSP 文件翻译为 Java 程序（Servlet）（Java）</p><p>（3）服务器将 Java程序编译为字节码（.class）</p><p>（4）服务器运行字节码（.html）</p><p>（5）服务器将 HTML 代码发送给客户端浏览器</p><p><strong>4.请简要叙述MVC设计模式，JSP、JavaBean和Servlet在MVC设计模式中的作用。</strong></p><p>JavaBean用来业务处理 model<br>JSP用来显示数据 view<br>Servlet用来控制页面转移 control</p><p><strong>5.请简要叙述include指令和include动作的功能，以及它们的区别。</strong></p><p>include指令：用于在当前页面包含另外一个页面<br>include动作：用于在当前页面包含另外一个页面</p><p>区别<br>include指令（静态包含）：<br>（1）语法格式：&lt;%@ include file&#x3D;“url”%&gt;<br>（2）包含时间：翻译JSP文件到Servlet时<br>（3）逻辑上：统一的</p><p>include动作（动态包含）:<br>（1）语法格式：&lt;jsp:include page&#x3D;“url”&#x2F;&gt;<br>（2）包含时间：运行时<br>（3）逻辑上：独立的</p><p><strong>6.请简要叙述JavaBean的四种生存范围。</strong></p><p>（1）page：当前JSP页面内<br>（2）request：①当前拥有相同请求的JSP文件②以及用include动作和forward动作和当前页面连接在一起的页面。<br>（3）session：同一用户的所有页面<br>（4）application：服务器下的所有页面<br><strong>7.请简要描述Servlet的基本工作流程。</strong></p><p>（1）客户端向Web服务器发送请求</p><p>（2）Web服务器将请求发给Web容器</p><p>（3）Web容器将Servlet实例化，创建线程，调用init()方法</p><p>（4）Web容器将客户端请求发给Servlet，调用对应的do方法（doGet、doPost、doPut、doDelete）</p><p>（5）Servlet创建一个响应，并将响应返回给Web容器</p><p>（6）Web容器将响应返回给Web服务器</p><p>（7）Web服务器将响应返回给客户端</p><p>（8）当服务器关闭或者Servlet空闲时间超过一定限度时，Web容器将Servlet实例从内存移除，调用destroy()方法</p><p><strong>8.请简要说明JDBC访问数据库的基本步骤。</strong></p><p>（1）加载驱动程序<code>Class.forName(“数据库驱动程序串”)；</code></p><p>（2）获取数据库连接<code>DriverManager.getConnection(“URL”, ”Username”, ”Password”);</code></p><p>（3）创建Statement对象<code>&lt;Connection对象&gt;.createStatement();</code></p><p>（4）执行SQL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Statement对象&gt;.executeQuery(“查询语句”);</span><br><span class="line">&lt;Statement对象&gt;.executeUpdate(“修改语句”);</span><br></pre></td></tr></table></figure><p>（5）处理返回数据</p><p>（6）释放对象和数据库连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ResultSet对象&gt;.close();</span><br><span class="line"></span><br><span class="line">&lt;Statement对象&gt;.close();</span><br><span class="line"></span><br><span class="line">&lt;Connection对象&gt;.close();</span><br></pre></td></tr></table></figure><p><strong>9.请简要叙述利用JDBC访问数据库时常用的类和接口有哪些。</strong>（任意四个就给4分，1个1分）</p><ul><li>Class</li><li>DriverManager</li><li>Connection</li><li>Statement</li><li>ResultSet</li><li>PreparedStatement</li></ul><p><strong>10.请简要解释下列JSP内置对象的主要用途：request、response、session、application。</strong></p><p>request:代表来自客户端的请求，用于从客户端向服务器端发送信息<br>response:代表服务器端的回复信息，用于从服务器向客户端发送信息。<br>session:代表一次会话，用于识别同一用户<br>application:用于全局共享数据</p><p>选择题</p><ol><li><p>关于类成员与实例成员，下列说法正确的是（BC)(多选)</p><p>A 在类外，类成员只能通过类进行访问，实例成员只能通过实例进行访问（类成员也可以通过实例访问）</p><p>B 类方法中只能调用类成员，实例方法中既能调用类成员，也能调用实例成员</p><p>C 类成员属于类，实例成员属于对象</p><p>D 类成员不用static修饰，实例成员用static修饰（反了）</p></li><li><p>param动作用于传递参数，关于param动作，下列说法错误的是（B）（单选）</p><p>A。param动作的语法格式为&lt;jsp:param name&#x3D;参数名称 value&#x3D;值&gt;</p><p>B. parama动作只能和include动作配合使用</p><p>C。param动作不能单独使用</p><p>D。param动作传递参数的类型只能为字符串</p></li><li><p>Java中，所有异常类的父类是<strong>Throwable</strong></p></li><li><p>Java程序默认有java.lang这个类</p></li><li><p>用一个jsp程序access.jsp和一个java类Counter，用于实现网站访问的计数，统一用户不重复计数</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//access.jsp</span></span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;bean.Counter&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;logon page&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;jsp:useBean id=<span class="string">&quot;counter&quot;</span> class=<span class="string">&quot;bean.Counter&quot;</span> scope=<span class="string">&quot;application&quot;</span>/&gt;</span><br><span class="line">        &lt;% out.println(<span class="string">&quot;你是第&quot;</span>+counter.getCount(session)+<span class="string">&quot;位来访者&quot;</span>);%&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Counter.java</span></span><br><span class="line"><span class="keyword">package</span> bean;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Counter</span><span class="params">()</span> &#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(session.isNew()) &#123;</span><br><span class="line">            count = count + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/07/07/Java/JavaEE/image-20221216093234939.png" alt="image-20221216093234939"></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oxidized</title>
      <link href="/2024/07/07/%E8%AE%BA%E6%96%87/Oxidized/"/>
      <url>/2024/07/07/%E8%AE%BA%E6%96%87/Oxidized/</url>
      
        <content type="html"><![CDATA[<h1 id="一、配置"><a href="#一、配置" class="headerlink" title="一、配置"></a>一、配置</h1><h2 id="1-1、安装"><a href="#1-1、安装" class="headerlink" title="1.1、安装"></a>1.1、安装</h2><p><a href="https://cloud.tencent.com/developer/article/1657021">构建企业级网络设备自动备份系统 – Oxidized （ubuntu 20.04 LTS）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h2 id="1-2、下载ruby3"><a href="#1-2、下载ruby3" class="headerlink" title="1.2、下载ruby3"></a>1.2、下载ruby3</h2><p><a href="https://zhuanlan.zhihu.com/p/684381088">ubuntu20 安装 ruby 3.0 - 知乎 (zhihu.com)</a></p><p>注意：ruby3是在用户模式下下载的，它的环境也在用户模式下；如果使用sudo，那就是在root用户下，它的环境还是ruby2.7</p><h2 id="1-3、pip换源"><a href="#1-3、pip换源" class="headerlink" title="1.3、pip换源"></a>1.3、pip换源</h2><p><a href="https://blog.csdn.net/JineD/article/details/124774570">完美解决 Could not find a version that satisfies the requirement 安装包名字 (from versions: )-CSDN博客</a></p><h2 id="1-3、下载virtualenv-venv"><a href="#1-3、下载virtualenv-venv" class="headerlink" title="1.3、下载virtualenv&#x2F;venv"></a>1.3、下载virtualenv&#x2F;venv</h2><p>[要不我们还是用回 virtualenv&#x2F;venv 和 pip 吧 - 知乎 (zhihu.com)](<a href="https://zhuanlan.zhihu.com/p/81568689#:~:text=%E5%9C%A8">https://zhuanlan.zhihu.com/p/81568689#:~:text=在</a> Windows 下使用下面的命令安装 virtualenv： %24 pip install virtualenv,pip 的方式安装 Python 包，但这仍然是最简单和统一的方式。 更安全的方式是使用系统包管理器来安装，或是使用 pip –user 方式安装。)</p><p>doubanio.com</p><p>[ERROR: Could not open requirements file: <a href="https://blog.csdn.net/qq_30722795/article/details/104077236">Errno 2] 没有那个文件或目录: ‘requrements.txt’-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
