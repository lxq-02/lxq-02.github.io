<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>李新乾的个人博客</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>命由我做，福自己求</description>
    <pubDate>Mon, 25 Nov 2024 14:56:11 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>数据库（二）-关系数据库</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;二、关系数据库&quot;&gt;&lt;a href=&quot;#二、关系数据库&quot; class=&quot;headerlink&quot; title=&quot;二、关系数据库&quot;&gt;&lt;/a&gt;二、关系数据库&lt;/h1&gt;&lt;p&gt;域、投影操作、选择操作、链接操作、自然连接、左右连接&lt;/p&gt;
&lt;p&gt;在关系代数的专门运算中，从表中取</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="二、关系数据库"><a href="#二、关系数据库" class="headerlink" title="二、关系数据库"></a>二、关系数据库</h1><p>域、投影操作、选择操作、链接操作、自然连接、左右连接</p><p>在关系代数的专门运算中，从表中取出指定的属性（列）的操作称为：投影</p><p>​从表中选出满足某种条件的元组操作称为：选择</p><p>提出关系模型的是美国<strong>IBM</strong>公司的<strong>E.F.Codd</strong></p><ul><li><p>1970年提出关系数据模型</p><p>E.F.Codd，”A Relational Model of Data for Large Shared Data Banks”，《Communication of the ACM》，1970</p></li><li><p>之后，提出了关系代数和关系演算的概念</p></li><li><p>1972年提出了关系的第一、第二、第三范式</p></li><li><p>1974年提出了关系的<strong>BC</strong>范式</p></li></ul><h2 id="2-1、关系数据结构及形式化定义"><a href="#2-1、关系数据结构及形式化定义" class="headerlink" title="2.1、关系数据结构及形式化定义"></a>2.1、关系数据结构及形式化定义</h2><h3 id="1、关系"><a href="#1、关系" class="headerlink" title="1、关系"></a>1、关系</h3><ul><li><p>单一的数据结构——关系</p><p>现实世界的实体以及实体间的各种联系均用关系来表示</p></li><li><p>逻辑结构——二维表</p><p>从用户角度，关系模型中数据的逻辑结构是一张二维表</p></li><li><p>建立在集合代数的基础上</p></li></ul><ol><li><p>域（domain）</p><p>域是一组具有相同数据类型的值的集合。比如：整数、实数、介于某个取值范围的整数，长度指定长度的字符串集合</p></li><li><p>笛卡尔积（Cartesian Product）</p><ol><li><p>给定一组域D<sub>1</sub>，D<sub>2</sub>，。。。，D<sub>n</sub>，这些域中可以有相同的<br>D<sub>1</sub>，D<sub>2</sub>，。。。，D<sub>n</sub>的笛卡尔积为：<br>D<sub>1</sub>&times;D<sub>2</sub>&times;…&times;D<sub>n</sub>&#x3D;{(d<sub>1</sub>,d<sub>2</sub>,…,d<sub>n</sub>)|d<sub>i</sub>&in;D<sub>i</sub>,i &#x3D; 1, 2, .., n}<br>所有域的所有取值的一个组合<br>不能重复</p></li><li><p>基数（Cardinal number）</p><ol><li><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220607145543179.png" alt="image-20220607145543179"></li></ol></li><li><p>笛卡尔积的表示方法</p><ol><li>笛卡尔积可表示为一个二维表</li><li>表中的每行对应一个元组，表中的每列对应一个域</li><li><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220323194920348.png" alt="image-20220323194920348"></li></ol></li></ol></li><li><p>元组（Tuple）</p><p>关系中的每个元素都是关系中的元组，用t表示。</p><p>笛卡尔积中每一个元素（d<sub>1</sub>, d<sub>2</sub>, …, d<sub>n</sub>）叫做一个n元组（n-tuple）或简称元组（Tuple）</p><p>（张庆梅，计算机专业，李勇）是元组</p></li><li><p>分量（Component）</p><ol><li>笛卡尔积元素（d<sub>1</sub>, d<sub>2</sub>, …, d<sub>n</sub>）中的每一个d<sub>i</sub> 都叫做一个分量</li><li>张庆梅、计算机专业、李勇、都是分量</li></ol></li><li><p>关系（Relation）</p><ol><li><p>D<sub>1</sub>&times;D<sub>2</sub>&times;。。。&times;D<sub>n</sub>的子集叫做在域D<sub>1</sub>，D<sub>2</sub>，。。。D<sub>n</sub>上的关系，表示为<br>R(D<sub>1</sub>, D<sub>2</sub>， …, D<sub>n</sub>)<br>            R:关系名<br>            n：关系的目或度（Degree）</p></li><li><p>单元关系与二元关系</p><ol><li>当n&#x3D;1时，称该关系为单元关系或一元关系</li><li>当n&#x3D;2时，称该关系为二元关系</li></ol></li><li><p>关系的表示</p><ol><li>关系是一个二维表，表的每行对应一个元组，表的每列对应一个域</li><li><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220607153430860.png" alt="image-20220607153430860"></li></ol></li></ol></li><li><p>属性（attribute）</p><ol><li>关系中不同列可以对应相同的域</li><li>为了加以区分，必须对每列起一个名字，成为属性</li><li>n目关系必有n个属性</li></ol></li><li><p>码（key）</p><ol><li><p>候选码（Candidate key）</p><ol><li>若关系中的某一属性组的值能惟一地标识一个元组，则称该属性组为候选码</li><li>简单的情况：候选码只包含一个属性</li><li>候选码中的属性称为：主属性</li></ol></li><li><p>全码（All-key）</p><ol><li>最极端的情况：关系模式的所有属性组是这个关系模式的候选码，称为全码（All-key）</li></ol></li><li><p>主码</p><ol><li>若一个关系有多个候选码，则选定其中一个为主码（Primary key）</li></ol></li><li><p>主属性</p><ol><li>候选码的诸属性成为主属性（Prime attribute）</li><li>不包含在任何候选码中的属性称为非主属性（Non-Prime attribute）或非码属性（Non-key attribute）</li></ol></li></ol><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220323195300233.png" alt="image-20220323195300233"></p></li><li><p>三类关系</p><ol><li><p>基本关系（基本表或基表）</p><ol><li>实际存在的表，是实际存储的逻辑表示</li></ol></li><li><p>查询表</p><ol><li>查询结果对应的表</li></ol></li><li><p>视图表</p><ol><li>由基本表或其他视图表导出的表，是虚表，不对应实际存储的数据</li></ol></li></ol></li><li><p>基本关系的性质</p><ol><li><p>列是同质的（Homogeneoous）</p></li><li><p>不同的列可出自同一个域</p><ol><li>其中的每一列称为一个属性</li><li>不同的属性要给予不同的属性名</li></ol></li><li><p>列的顺序无所谓，列的次序可以任意交换</p></li><li><p>任意两个元组的候选码不能相同</p></li><li><p>行的顺序无所谓，行的次序可以任意交换</p></li><li><p>分量必须取原子值</p><ol><li>这是规范条件中最基本的一条</li><li><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220607155229751.png" alt="image-20220607155229751"></li></ol></li></ol></li></ol><h3 id="2、关系模式"><a href="#2、关系模式" class="headerlink" title="2、关系模式"></a>2、关系模式</h3><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220315140114688.png" alt="image-20220315140114688"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220323195539185.png" alt="image-20220323195539185"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220323200000827.png" alt="image-20220323200000827"> </p><h2 id="2-2、关系操作"><a href="#2-2、关系操作" class="headerlink" title="2.2、关系操作"></a>2.2、关系操作</h2><h2 id="2-3、关系的完整性"><a href="#2-3、关系的完整性" class="headerlink" title="2.3、关系的完整性"></a>2.3、关系的完整性</h2><h2 id="2-4、关系代数"><a href="#2-4、关系代数" class="headerlink" title="2.4、关系代数"></a>2.4、关系代数</h2><p>关系代数用关系的运算表示查询，主要分为两类集合</p><p>运算和专门的关系运算</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220607155403393.png" alt="image-20220607155403393"></p><h3 id="1、并（Union）"><a href="#1、并（Union）" class="headerlink" title="1、并（Union）"></a>1、并（Union）</h3><p>R和S</p><ul><li>具有相同的目n（即两个关系都有n个属性）</li><li>相应的属性取自同一个域</li></ul><p>R&cup;S</p><ul><li>仍为n目关系，由属于R或属于S的元组组成<br>R&cup;S&#x3D;{t | t&in;R V t&in;S}</li></ul><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324155112973.png" alt="image-20220324155112973"></p><h3 id="2、差（Difference）"><a href="#2、差（Difference）" class="headerlink" title="2、差（Difference）"></a>2、差（Difference）</h3><p> R和S</p><ul><li>具有相同的目n（即两个关系都有n个属性）</li><li>相应的属性取自同一个域</li></ul><p>R - S</p><ul><li>仍为n目关系，由属于R而不属于S的元组组成<br>R - S&#x3D;{t | t&in;R &wedge;t&notin; S}</li></ul><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324155802074.png" alt="image-20220324155802074"></p><h3 id="3、交（Intersection）"><a href="#3、交（Intersection）" class="headerlink" title="3、交（Intersection）"></a>3、交（Intersection）</h3><p> R和S</p><ul><li>具有相同的目n（即两个关系都有n个属性）</li><li>相应的属性取自同一个域</li></ul><p>R &cap; S</p><ul><li><p>仍为n目关系，由属于R又属于S的元组组成<br>R &cap; S&#x3D;{t | t&in;R &wedge;t&in; S}</p><p>R &cap; S &#x3D; R - (R - S)</p></li></ul><h3 id="4、笛卡尔积（Cartesian-Product）"><a href="#4、笛卡尔积（Cartesian-Product）" class="headerlink" title="4、笛卡尔积（Cartesian Product）"></a>4、笛卡尔积（Cartesian Product）</h3><p>严格地讲应该是广义的笛卡尔积（Extended Cartesian Product）</p><p>R：n目关系，k<sub>1</sub>个元组</p><p>S：n目关系，k<sub>2</sub>个元组</p><p>R&times;S</p><ul><li>列：（n+m)列元组的集合<ul><li>元组的前n列是关系R的一个元组</li><li>后m列是关系S的一个元组</li></ul></li><li>行：k<sub>1</sub>&times;k<sub>2</sub>个元组<ul><li>R&times;S &#x3D; {t<sub>r</sub>t<sub>s</sub> | t<sub>r</sub>&in; R &wedge; t<sub>s</sub>&in;S}</li></ul></li></ul><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324160033196.png" alt="image-20220324160033196"> </p><h3 id="5、专门的关系运算"><a href="#5、专门的关系运算" class="headerlink" title="5、专门的关系运算"></a>5、专门的关系运算</h3><p>（1）R，t&in;R, t[A<sub>i</sub>]<br>            设关系模式为R（A<sub>1</sub>, A<sub>2</sub>, …, A<sub>n</sub>）<br>            它的一个关系设为R<br>            t&in; R表示 t 是R 的一个元组<br>             t[A<sub>i</sub>]则表示元组 t 中相应于属性 A<sub>i</sub>的一个分量</p><p>（2）A， t[A], $\overline{A}$</p><p>​<img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220607162449619.png" alt="image-20220607162449619"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324160749147.png" alt="image-20220324160749147"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324160832464.png" alt="image-20220324160832464"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324161126231.png" alt="image-20220324161126231"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324161323339.png" alt="image-20220324161323339"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324162039103.png" alt="image-20220324162039103"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324165558241.png" alt="image-20220324165558241"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324165714957.png" alt="image-20220324165714957"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324170034629.png" alt="image-20220324170034629"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324170157637.png" alt="image-20220324170157637"> </p><p> <img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324171127657.png" alt="image-20220324171127657"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324171214703.png" alt="image-20220324171214703"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324171524418.png" alt="image-20220324171524418"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324171851215.png" alt="image-20220324171851215"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172130938.png" alt="image-20220324172130938"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172137019.png" alt="image-20220324172137019"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172147978.png" alt="image-20220324172147978"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172210602.png" alt="image-20220324172210602"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172537497.png" alt="image-20220324172537497"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172543966.png" alt="image-20220324172543966"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172906617.png" alt="image-20220324172906617"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324172941073.png" alt="image-20220324172941073"> </p><p>自然连接</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324173116268.png" alt="image-20220324173116268"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324173422580.png" alt="image-20220324173422580"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324185316862.png" alt="image-20220324185316862"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324185327796.png" alt="image-20220324185327796"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324185709823.png" alt="image-20220324185709823"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/image-20220324190045237.png" alt="image-20220324190045237"> </p><h1 id="六、关系数据理论"><a href="#六、关系数据理论" class="headerlink" title="六、关系数据理论"></a>六、关系数据理论</h1><p>分值最高</p><p>范式都要掌握2NF,3NF,BCNF,4NF。给你一个表，判断哪个范式</p><p>去掉部分依赖，变成2NF</p><p>去掉传递依赖，变成3NF</p><p>决定因素是码的话，就是BCNF</p><p>BCNF是去掉了主属性之间的函数传递？？？</p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/02-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库（一）-基础</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;一、基础&quot;&gt;&lt;a href=&quot;#一、基础&quot; class=&quot;headerlink&quot; title=&quot;一、基础&quot;&gt;&lt;/a&gt;一、基础&lt;/h1&gt;&lt;p&gt;B-Tree索引、Hash索引、聚集索引&lt;/p&gt;
&lt;p&gt;B-Tree索引：以B&lt;sub&gt;+&lt;/sub&gt;树结构存储数据，可以范</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h1><p>B-Tree索引、Hash索引、聚集索引</p><p>B-Tree索引：以B<sub>+</sub>树结构存储数据，可以范围查询</p><p>hash索引只能用在等于的情况下，不能进行范围查询，无法用于排序</p><p>聚集索引：每个表都只有一个聚集索引，创建表的时候自动创建。作用：决定数据在硬盘上的物理存储位置</p><p>一列可以添加多个索引</p><p>系统恢复采用的机制是日志机制</p><h2 id="1-1、数据库系统概述"><a href="#1-1、数据库系统概述" class="headerlink" title="1.1、数据库系统概述"></a>1.1、数据库系统概述</h2><h3 id="1、数据库的四个基本概念"><a href="#1、数据库的四个基本概念" class="headerlink" title="1、数据库的四个基本概念"></a>1、数据库的四个基本概念</h3><h4 id="①、数据（data"><a href="#①、数据（data" class="headerlink" title="①、数据（data)"></a>①、数据（data)</h4><p>数据（Data）是数据库存储的基本对象。</p><p>数据的定义：描述事物的符号记录</p><p>数据的种类：数字、文字、图形、图像、音频、视频、学生的档案记录等</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220305134759382.png" alt="image-20220305134759382"></p><h4 id="②、数据库"><a href="#②、数据库" class="headerlink" title="②、数据库"></a>②、数据库</h4><p>数据库（Database,简称DB）是长期储存在计算机内、有组织的、可共享的大量数据的集合。</p><p>基本特征：</p><ul><li>数据按一定的数据模型组织、描述和储存</li><li>可为各种用户共享</li><li>冗余度较小</li><li>数据独立性较高</li><li>易扩展</li></ul><h4 id="③、数据库管理系统"><a href="#③、数据库管理系统" class="headerlink" title="③、数据库管理系统"></a>③、数据库管理系统</h4><p>数据库管理系统（DataBase Management System,DBMS）是位于用户与操作系统之间的一层数据管理软件，是计算机的基础软件，是一个大型复杂的软件系统。</p><p>用途：科学地组织和存储数据、高效地获取和维护数据</p><p><strong>功能：</strong></p><ol><li>数据定义功能<ul><li>提供数据定义语言（Data Definition Language,DDL）</li><li>定义数据库中的数据对象</li></ul></li><li>数据组织、存储和管理<ul><li>分类组织、存储和管理各种数据</li><li>确定组织数据的文件结构和存取方式</li><li>实现数据之间的联系</li><li>提供多种存取方法提高存取效率</li><li>索引：</li></ul></li><li>数据操纵功能<ul><li>提供数据操纵语言（Data Manipulation Language,DML）</li><li>实现对数据库的基本操作（查询、插入、删除和修改）</li></ul></li><li>数据库的事务管理和运营管理<ul><li>数据库在建立、运行和维护时由数据库管理系统统一管理和控制</li><li>保证数据的安全性、完整性、多用户对数据的并发使用</li><li>发生故障后的系统恢复</li></ul></li><li>数据库的建立和维护功能<ul><li>数据库初始数据的转载和转换</li><li>数据库转储、恢复功能</li><li>数据库的重组织</li><li>性能监视、分析等</li></ul></li><li>其他功能<ul><li>数据库管理系统与网络中其他软件系统的通信</li><li>数据库管理系统与另一个系统之间的数据转换</li><li>异构数据库之间的互访和互操作</li></ul></li></ol><h4 id="④、数据库系统"><a href="#④、数据库系统" class="headerlink" title="④、数据库系统"></a>④、数据库系统</h4><p><strong>数据库系统（Database System，简称DBS）</strong>：是由数据库、数据库管理系统（及其应用开发工具）、应用程序和数据库管理员（DataBase Administrator,DBA）组成的存储、管理、处理和维护数据的系统。</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220305135123827.png" alt="image-20220305135123827"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220306095641090.png" alt="image-20220306095641090"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220306100406482.png" alt="image-20220306100406482"></p><h3 id="2、数据管理技术的产生和发展"><a href="#2、数据管理技术的产生和发展" class="headerlink" title="2、数据管理技术的产生和发展"></a>2、数据管理技术的产生和发展</h3><ul><li>什么是数据管理<ul><li>对数据进行分类、组织、编码、存储、检索和维护</li></ul></li><li>发展过程<ul><li>人工管理阶段（20世纪40年代中–50年代中）</li><li>文件系统阶段（20世纪50年代末–60年代中）</li><li>数据库系统阶段（20世纪60年代末–现在）</li></ul></li></ul><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220305135641990.png" alt="image-20220305135641990"></p><h3 id="3、数据库的特点"><a href="#3、数据库的特点" class="headerlink" title="3、数据库的特点"></a>3、数据库的特点</h3><ol><li><p>数据结构化</p><ol><li>不仅数据内部结构化，整体也是结构化的，数据之间有联系</li><li>数据库中实现的是数据的真正结构化，数据的结构用&#x3D;&#x3D;数据模型&#x3D;&#x3D;描述，数据可以变长，数据的最小存取单位是&#x3D;&#x3D;数据项&#x3D;&#x3D;</li></ol></li><li><p>数据的共享性高、冗余度低且易扩充</p></li><li><p>数据独立性高</p><ol><li>数据独立性：不会因为系统数据存储与数据逻辑结构的变化而影响应用程序</li><li>物理独立性：指用户的应用程序与数据库中数据的物理存储是相互独立的。也就是，数据在数据库中怎样存储，用户程序不需要了解</li><li>逻辑独立性：用户的应用程序与数据库的逻辑结构是相互独立的。也就是说，数据的逻辑结构改变时，用户程序也可以不变</li></ol></li><li><p>数据由DBMS统一管理和控制</p><ol><li><p>数据的安全性（Security） 保护</p><p>保护数据，以防止不合法的使用造成的数据的泄密和破坏</p></li><li><p>数据的完整性（Integrity）检查</p><p>数据的正确性、有效性和相容性。完整性检查将数据控制在有效的范围内，并保证数据之间满足一定的关系。</p></li><li><p>并发（Concurrency）控制</p><p>对多用户的并发操作加以控制和协调，防止相互干扰而得到错误的结果</p></li><li><p>数据库恢复（Recovery）</p><p>将数据库从错误状态恢复到某一已知的正确状态</p></li></ol></li></ol><h2 id="1-2、数据模型"><a href="#1-2、数据模型" class="headerlink" title="1.2、数据模型"></a>1.2、数据模型</h2><p>数据库重用数据模型来<strong>抽象、表示和处理</strong>现实世界中的数据和信息。</p><p>数据模型（data model）是对现实世界数据特征的抽象。</p><p>数据模型是数据库系统的核心和基础。</p><p>数据模型应满足三方面要求：</p><ol><li>能比较真实地模拟现实世界</li><li>容易为人所理解</li><li>便于在计算机上实现</li></ol><h3 id="1、两类数据模型"><a href="#1、两类数据模型" class="headerlink" title="1、两类数据模型"></a>1、两类数据模型</h3><p>根据模型应用的不同目的，可以将这些模型分为两类。</p><p>第一类是<strong>概念模型</strong>，第二类是<strong>逻辑模型和物理模型</strong>。</p><p>第一类概念模型（couceptual model)，也称信息模型，是按用户的观点来对数据和信息建模，主要用于数据库设计。<br>                                                                    ER-win powerdesigner</p><p>第二类逻辑模型和物理模型主要包括</p><ul><li>层次模型（hierarchical model)</li><li>网状模型（network model）</li><li>关系模型（relational model）</li><li>面向对象数据模型（object oriented data model）</li><li>对象关系数据模型（object relational data model）</li><li>半结构化数据模型（semistructured data model)</li></ul><p>物理模型是对数据最底层的抽象，描述数据在系统内部的表示方式和存取方法，在磁盘或磁带上的存储方式和存取方法</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308133328682.png" alt="image-20220308133328682"></p><h3 id="2、概念模型"><a href="#2、概念模型" class="headerlink" title="2、概念模型"></a>2、概念模型</h3><ul><li>概念模型的用途<ul><li>概念模型用于信息世界的建模</li><li>是现实世界到机器世界的一个中间层次</li><li>是数据库设计的有力工具</li><li>数据库设计人员和用户之间进行交流的语言</li></ul></li><li>对概念模型的基本要求<ul><li>较强的语义表达能力</li><li>能够方便、直接地表达应用中的各种语义知识</li><li>简单、清晰、易于用户理解</li></ul></li></ul><p><strong>基本概念</strong></p><ol><li><p>实体（entity）</p><p>客观存在并可相互区别的事物称为实体。可以是具体的人、事、物或抽象的概念。</p></li><li><p>属性（attribute）</p><p>实体所具有的某一特性称为属性</p><p>一个实体可以由若干个属性来刻画</p></li><li><p>码（key)</p><p>唯一标识实体的属性集称为码。例如学生的学号</p></li><li><p>域（domain）</p><p>属性的取值范围称为该属性的域</p><p>字符串域，浮点类型</p></li><li><p>实体型（entity type)</p><p>用实体名及其属性名集合来抽象和刻画同类实体称为实体型</p></li><li><p>实体集（entity set）</p><p>同一类型实体的集合称为实体集。例如，全体学生就是一个实体集。</p><p>真实的数据</p></li><li><p>联系（relationship）</p><p>现实世界中事物内部以及事物之间的联系在信息世界中反映为实体内部的联系和实体之间的联系</p><p>实体内部的联系通常是指组成实体的各属性之间的联系</p><p>实体之间的联系通常是指不同实体集之间的联系</p></li></ol><p><strong>实体之间的联系有一对一、一对多和多对多等多种类型。</strong></p><table><thead><tr><th align="center">联系</th><th align="center">定义</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">一对一</td><td align="center">如果对于实体集A中的每一个实体，实体集B中至多有一个（也可以没有）实体与之联系，反之亦然，则称实体集A与实体集B具有一对一联系（1：1）</td><td align="center">一个班级只有一个班长</td></tr><tr><td align="center">一对多</td><td align="center">如果对于实体集A中的每一个实体，实体集B中有n个实体（n&geq;0），反之亦然。（1：n）</td><td align="center">一个班级有若干名学生</td></tr><tr><td align="center">多对多</td><td align="center">如果对于实体集A中的每一个实体，实体集B中有n个实体（n&geq;0）；反之，对于实体集B中的每一个实体，实体集A中有m个实体（m&geq;0）(m:n)</td><td align="center">课程与学生之间的联系：<br> 一门课程同时有若干个学生选修， 一个学生可以同时选修多门课程</td></tr></tbody></table><p><strong>实例</strong></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308141202681.png" alt="image-20220308141202681"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308141355133.png" alt="image-20220308141355133"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308141413915.png" alt="image-20220308141413915"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308142527676.png" alt="image-20220308142527676"><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308142537732.png" alt="image-20220308142537732"></p><p><strong>实例</strong></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308142648766.png" alt="image-20220308142648766"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308142932450.png" alt="image-20220308142932450"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308142841137.png" alt="image-20220308142841137"></p><h3 id="3、数据模型的组成要素"><a href="#3、数据模型的组成要素" class="headerlink" title="3、数据模型的组成要素"></a>3、数据模型的组成要素</h3><p>数据模型通常由数据结构、数据操作和数据的完整性约束条件组成。</p><ol><li><p>数据结构</p><p>数据结构描述数据库的组成对象以及对象之间的联系。</p></li><li><p>数据操作</p><p>数据操作是指对数据库中各种对象（型）的实例（值）允许执行的操作的集合，包括操作及有关的操作规则。</p></li><li><p>数据的完整性约束条件</p><p>数据的完整性约束条件是一组完整性规则。</p></li></ol><h3 id="4、常用的数据模型"><a href="#4、常用的数据模型" class="headerlink" title="4、常用的数据模型"></a>4、常用的数据模型</h3><p>非关系模型</p><ul><li>层次模型（Hierarchical Model）</li><li>网状模型（Network Model）</li></ul><p>关系模型（Relational Model）</p><p>面向对象模型（Object Oriented Model）</p><p>对象关系模型（Object Relational Model）</p><h3 id="5、层次模型"><a href="#5、层次模型" class="headerlink" title="5、层次模型"></a>5、层次模型</h3><p>层次模型是数据库系统中最早出现的数据模型</p><p>层次数据库系统的典型代表是IBM公司的IMS（Information Management System）数据库管理系统</p><p>层次模型用<strong>树形结构</strong>来表示各类实体以及实体间的联系。</p><p><strong>①层次模型的数据结构</strong></p><p>满足下面两个条件的基本层次联系的集合为层次模型：</p><ol><li>有且只有一个结点没有双亲结点，这个结点称为根节点</li><li>根以外的其他结点有且只有一个双亲结点</li></ol><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308144107326.png" alt="image-20220308144107326"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220308144608091.png" alt="image-20220308144608091"></p><p>层次模型的特点：</p><ul><li>结点的双亲是唯一的</li><li>只能直接处理一对多的实体联系</li><li>每个记录类型可以定义一个排序字段，也成为码字段</li><li>任何记录值只有按其路径查看时，才能显示它的全部意义</li><li>没有一个子女记录值能够脱离双亲记录值而独立存在</li></ul><p>多对多联系在层次模型中的表示</p><ul><li>用层次模型间接表示多对多联系</li><li>方法<br>讲多对多联系分解成一对多联系</li><li>分解方法<ul><li>冗余结点法</li><li>虚拟结点法</li></ul></li></ul><p>②<strong>层次模型的完整性约束条件</strong></p><p>层次模型的完整性约束条件：</p><ul><li>无相应的双亲结点值就不能插入子女结点值</li><li>如果删除双亲结点值，则相应的子女结点值也被同时删除</li><li>更新操作时，应更新所有相应记录，以保证数据的一致性</li></ul><p>优点：</p><ul><li>层次模型的数据结构比较简单清晰</li><li>查询效率高，性能优于关系模型，不低于网状模型</li><li>层次数据模型提供了良好的完整性支持</li></ul><p>缺点：</p><ul><li>多对多联系表示不自然</li><li>对插入和删除操作的限制多，应用程序的编写比较复杂</li><li>查询子女结点必须通过双亲结点</li><li>由于结构严密，层次命令趋于程序化</li></ul><h3 id="6、网状模型"><a href="#6、网状模型" class="headerlink" title="6、网状模型"></a>6、网状模型</h3><p>网状模型中子女结点与双亲结点的联系可以不唯一</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220310152343215.png" alt="image-20220310152343215"></p><h3 id="7、关系模型"><a href="#7、关系模型" class="headerlink" title="7、关系模型"></a>7、关系模型</h3><p>关系数据库系统采用关系模型作为数据的组织方式。</p><p>1970年美国IBM公司San Jose研究室的研究员E.F.Codd首次提出了数据库系统的关系模型。</p><p>计算机厂商新推出的数据库管理系统几乎都支持关系模型。</p><h4 id="①、关系数据模型的数据结构"><a href="#①、关系数据模型的数据结构" class="headerlink" title="①、关系数据模型的数据结构"></a>①、关系数据模型的数据结构</h4><p>在用户观点下，用户数据模型中数据的逻辑结构是一张二维表，它由行和列组成。</p><ul><li><p>关系（relation）</p><p>一个关系对应通常说的一张表</p></li><li><p>元组（Tuple）</p><p>表中的一行即为一个元组</p></li><li><p>属性（attribute）</p><p>表中的一列即为一个属性</p></li><li><p>主码（key）</p><p>表中的某个属性组，它可以唯一确定一个元组。</p></li><li><p>域（domain）</p><p>属性的取值范围</p></li><li><p>分量</p><p>元组中的一个属性值</p></li><li><p>关系模式</p><p>对关系的描述</p><p>关系名（属性1，属性2，…，属性n）</p><p>学生（学号，姓名，年龄，性别，系，年级）</p></li></ul><p>例1：学生、系、系与学生之间的一对多联系：<br>            学生（学号，姓名，年龄，性别，系号，年级）<br>            （001,x1,15,nan,01,2020）<br>            （002,x2,16,nan,02,2020）</p><p>​系（系号，系名，办公地点）<br>​（01，计算机系，2号楼）<br>​（02，物理系，1号楼）</p><p>例2：系、系主任、系与系主任间的一对一联系<br>            教工（教工号，名称，系号）<br>            系（系号，系名，办公地点，主任教工号）</p><p>例3：学生、课程、学生与课程之间的多对多联系：</p><p>​学生（学号，姓名，年龄，性别，系号，年级）</p><p>​课程（课程号、课程名、学分）</p><p>​选修（学号，课程名，成绩）</p><p>关系必须是规范化的，满足一定的规范条件</p><p>最基本的规范条件：关系的每一个分量必须是一个不可分的数据项，不允许表中还有表</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/image-20220606115921025.png" alt="image-20220606115921025"> </p><p>表中的工资和扣除是可分的数据项，不符合关系模型要求。</p><h4 id="②、关系数据模型的操纵与完整性约束"><a href="#②、关系数据模型的操纵与完整性约束" class="headerlink" title="②、关系数据模型的操纵与完整性约束"></a>②、关系数据模型的操纵与完整性约束</h4><p>数据操作是集合操作，操作对象和操作结构都是关系</p><ul><li>查询</li><li>插入</li><li>删除</li><li>更新</li></ul><p>数据操作是集合操作，操作对象和操作结构都是关系，即若干元组的集合</p><p>存取路径对用户隐蔽，用户只要指出“干什么”，不必详细说明“怎么干”</p><h4 id="③、关系数据模型的存储结构"><a href="#③、关系数据模型的存储结构" class="headerlink" title="③、关系数据模型的存储结构"></a>③、关系数据模型的存储结构</h4><p>实体及实体间的联系都用表来表示</p><p>表以文件形式存储</p><ul><li>有的DBMS一个表对应一个操作系统文件</li><li>有的DBMS自己设计文件结构</li></ul><h4 id="④、关系数据模型的优缺点"><a href="#④、关系数据模型的优缺点" class="headerlink" title="④、关系数据模型的优缺点"></a>④、关系数据模型的优缺点</h4><p>优点：</p><ul><li>建立在严格的数学概念的基础上</li><li>概念单一<ul><li>实体和各类联系都用联系来表示</li><li>对数据的检索结果也是关系</li></ul></li><li>关系模型的存取路径对拥护透明<ul><li>具有更高的数据独立性，更好的安全保密性</li><li>简化了程序员的工作和数据库开发建立的工作</li></ul></li></ul><p>缺点：</p><ul><li>存取路径对拥护透明导致查询效率往往不如非关系数据模型</li><li>为提高性能，必须对用户的查询请求进行优化，增加了开发DBMS的难度</li></ul><h1 id="二、数据库安全性"><a href="#二、数据库安全性" class="headerlink" title="二、数据库安全性"></a>二、数据库安全性</h1><ol><li>用户鉴别（用户名和密码）</li><li>多层存取控制  （不同的用户进来，看到的表格是不同的）（不同的权限）（root用户的host只能本机用，其他电脑不能用，）（用root用户创建其他用户）</li><li>审计（大量的辅助文件）（在出现问题后，怎么追责）（追责机制）</li><li>视图和数据加密<ol><li>数据加密（比如，你的硬盘等丢失，别人无法打开，复制数据后也不能正常显示）</li><li>表加密（身份证号、手机号密文存储）<br>加密方式AES_EN___(  <em>,  密钥 )</em><br>解密方式AES_DE___( _, 密钥)<br>字符串转换为16进制，方式HEX，二进制UNHEX</li></ol></li></ol><h1 id="三、数据库完整性"><a href="#三、数据库完整性" class="headerlink" title="三、数据库完整性"></a>三、数据库完整性</h1><p>数据库的完整性是指数据库的<strong>正确性</strong>和<strong>相容性</strong></p><p>分类：</p><ol><li>实体完整性</li><li>参照完整性</li><li>用户自定义完整性</li></ol>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/01-%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库（三）-SQL</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;三、SQL&quot;&gt;&lt;a href=&quot;#三、SQL&quot; class=&quot;headerlink&quot; title=&quot;三、SQL&quot;&gt;&lt;/a&gt;三、SQL&lt;/h1&gt;&lt;p&gt;全部是重点、十多分&lt;/p&gt;
&lt;p&gt;&amp;#x3D;NULL错误&lt;/p&gt;
&lt;p&gt;JDBC的操作步骤&lt;/p&gt;
&lt;p&gt;触发器的</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="三、SQL"><a href="#三、SQL" class="headerlink" title="三、SQL"></a>三、SQL</h1><p>全部是重点、十多分</p><p>&#x3D;NULL错误</p><p>JDBC的操作步骤</p><p>触发器的</p><ol><li>定义事件 before &#x2F; after insert\update\delete </li><li>关键字old\new   after update后两个都可以用<br>after delete用old<br>   before insert用new</li><li>authorization</li></ol><h2 id="3-1、SQL概述"><a href="#3-1、SQL概述" class="headerlink" title="3.1、SQL概述"></a>3.1、SQL概述</h2><h3 id="1、历史"><a href="#1、历史" class="headerlink" title="1、历史"></a>1、历史</h3><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329133219172.png" alt="image-20220329133219172"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329133328971.png" alt="image-20220329133328971"> </p><p>DBMS:MySQL,Oracle,DB2,SQL Sever</p><h3 id="2、SQL的特点"><a href="#2、SQL的特点" class="headerlink" title="2、SQL的特点"></a>2、SQL的特点</h3><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329133912991.png" alt="image-20220329133912991"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329134132726.png" alt="image-20220329134132726"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329134703758.png" alt=" "></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329134904865.png" alt="image-20220329134904865"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145620253.png" alt="image-20220329145620253"> </p><h2 id="3-2、学生-课程数据库"><a href="#3-2、学生-课程数据库" class="headerlink" title="3.2、学生-课程数据库"></a>3.2、学生-课程数据库</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145801272.png" alt="image-20220329145801272"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145832639.png" alt="image-20220329145832639"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145841031.png" alt="image-20220329145841031"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145848884.png" alt="image-20220329145848884"> </p><h2 id="3-3、数据定义"><a href="#3-3、数据定义" class="headerlink" title="3.3、数据定义"></a>3.3、数据定义</h2><h3 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a>1、创建表</h3><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329140206316.png" alt="image-20220329140206316"> </p><h3 id="2、基本表的定义、删除与修改"><a href="#2、基本表的定义、删除与修改" class="headerlink" title="2、基本表的定义、删除与修改"></a>2、基本表的定义、删除与修改</h3><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329140315971.png" alt="image-20220329140315971"> </p><p>&lt;&gt;必须有 []可有可无</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329140732529.png" alt="image-20220329140732529"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329140900853.png" alt="image-20220329140900853"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329150033271.png" alt="image-20220329150033271">  </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329141101141.png" alt="image-20220329141101141"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220329145113627.png" alt="image-20220329145113627"></p><p>4、修改基本表 </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405133459139.png" alt="image-20220405133459139"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405133633735.png" alt="image-20220405133633735"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405133745468.png" alt="image-20220405133745468"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405135304468.png" alt="image-20220405135304468"></p><h3 id="3、索引的建立与删除"><a href="#3、索引的建立与删除" class="headerlink" title="3、索引的建立与删除"></a>3、索引的建立与删除</h3><p>B+Tree索引、Hash索引、聚集索引</p><p>hash索引只能用在等于的情况下</p><p>如果是范围索引，用不到hash</p><p>聚集索引：每个表都只有一个聚集索引，创建表的时候自动创建。作用：决定数据在硬盘上的物理存储位置</p><p>一列可以添加多个索引</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405135922612.png" alt="image-20220405135922612"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405140529692.png" alt="image-20220405140529692"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405140753608.png" alt="image-20220405140753608"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405140847492.png" alt="image-20220405140847492"></p><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405142121947.png" alt="image-20220405142121947"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405142229647.png" alt="image-20220405142229647"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405142353663.png" alt="image-20220405142353663"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405142401855.png" alt="image-20220405142401855"> </p><p>更新</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405143544414.png" alt="image-20220405143544414"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220405144327707.png" alt="image-20220405144327707"> </p><p>防止出错 <code>set autocommit = 0;</code></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407151637029.png" alt="image-20220407151637029"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407151906643.png" alt="image-20220407151906643"></p><h2 id="查询-1"><a href="#查询-1" class="headerlink" title="查询"></a>查询</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407151953162.png" alt="image-20220407151953162"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152001143.png" alt="image-20220407152001143"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152040779.png" alt="image-20220407152040779"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152227071.png" alt="image-20220407152227071"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152407915.png" alt="image-20220407152407915"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152514204.png" alt="image-20220407152514204"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407152932148.png" alt="image-20220407152932148"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153006719.png" alt="image-20220407153006719"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153057255.png" alt="image-20220407153057255"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153339228.png" alt="image-20220407153339228"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153604629.png" alt="image-20220407153604629"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153655052.png" alt="image-20220407153655052"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220407153827523.png" alt="image-20220407153827523"> </p><p>查找包含%的字符</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412135357794.png" alt="image-20220412135357794"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412140026084.png" alt="image-20220412140026084"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412140455405.png" alt="image-20220412140455405"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412140615313.png" alt="image-20220412140615313"> </p><h2 id="3-4、数据更新"><a href="#3-4、数据更新" class="headerlink" title="3.4、数据更新"></a>3.4、数据更新</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412140719541.png" alt="image-20220412140719541"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412141218564.png" alt="image-20220412141218564"> </p><p>limit 分页查询，指明开始和查几个</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412142419378.png" alt="image-20220412142419378"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412142544689.png" alt="image-20220412142544689"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412142917596.png" alt="image-20220412142917596"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220412143816221.png" alt="image-20220412143816221"> </p><p>having 是分组后的查询</p><p>where是分组前</p><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220414152201337.png" alt="image-20220414152201337"> </p><p>左连接</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220414152722945.png" alt="image-20220414152722945"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220414153214620.png" alt="image-20220414153214620"></p><h2 id="3-5、数据查询"><a href="#3-5、数据查询" class="headerlink" title="3.5、数据查询"></a>3.5、数据查询</h2><p>嵌套查询，子查询</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419134617718.png" alt="image-20220419134617718"> </p><p>嵌套查询可以放到select,from,where中</p><p>放到select中，只可以返回一列</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419135355613.png" alt="image-20220419135355613"> </p><p>放到from中</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419135727134.png" alt="image-20220419135727134"> </p><p>n+1查询，</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419141114824.png" alt="image-20220419141114824"> </p><p>在where</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419142631689.png" alt="image-20220419142631689"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419143404437.png" alt="image-20220419143404437"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/image-20220419143833277.png" alt="image-20220419143833277"> </p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/03-%E6%95%B0%E6%8D%AE%E5%BA%93-SQL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库（四）-数据库设计</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;七、数据库设计&quot;&gt;&lt;a href=&quot;#七、数据库设计&quot; class=&quot;headerlink&quot; title=&quot;七、数据库设计&quot;&gt;&lt;/a&gt;七、数据库设计&lt;/h1&gt;&lt;h2 id=&quot;7-1、数据库设计的基本步骤&quot;&gt;&lt;a href=&quot;#7-1、数据库设计的基本步骤&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="七、数据库设计"><a href="#七、数据库设计" class="headerlink" title="七、数据库设计"></a>七、数据库设计</h1><h2 id="7-1、数据库设计的基本步骤"><a href="#7-1、数据库设计的基本步骤" class="headerlink" title="7.1、数据库设计的基本步骤"></a>7.1、数据库设计的基本步骤</h2><p>数据库设计的基本步骤</p><ol><li>需求分析<ol><li>形成需求分析文档</li></ol></li><li>概念结构分析<ol><li>设计出数据结构，画出E-R图</li><li>矩形是实体，椭圆表示实体的属性，菱形表示实体之间的联系</li><li>联系是1：1，1：N， M：N;</li></ol></li><li>逻辑结构分析<ol><li>由E-R图转换成表，像关系模型</li></ol></li><li>物理结构分析<ol><li>采用什么样的模型，是不是受事务管理</li><li>数据保存的位置，需要详细的规划</li></ol></li><li>数据库实施<ol><li>导入一些基本的数据，</li><li>创建表</li></ol></li><li>数据库运行和维护</li></ol><h2 id="7-2、E-R图向关系模型的转换"><a href="#7-2、E-R图向关系模型的转换" class="headerlink" title="7.2、E-R图向关系模型的转换"></a>7.2、E-R图向关系模型的转换</h2><p>逻辑结构设计</p><p>E-R图由实体型、实体的属性和实体型之间的联系组成</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608171814998.png" alt="image-20220608171814998"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608171824428.png" alt="image-20220608171824428"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608171832477.png" alt="image-20220608171832477"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608171854964.png" alt="image-20220608171854964"></p><p>第一种情况，没有合并的形式建了一个表</p><p>第二种情况，一对多</p><p>合并，合并的多的那个表中</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608172017666.png" alt="image-20220608172017666"> </p><p>没有合并的话，就是建了一个新表，但可能会出现一个学生出现多个班级之中，可以通过限定将Sno为唯一值</p><p>第三种情况：多对多，只能建一个新表</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/image-20220608172231784.png" alt="image-20220608172231784"> </p><h1 id><a href="#" class="headerlink" title></a></h1>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/04-%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E8%AE%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库（五）-JDBC</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;四、JDBC&quot;&gt;&lt;a href=&quot;#四、JDBC&quot; class=&quot;headerlink&quot; title=&quot;四、JDBC&quot;&gt;&lt;/a&gt;四、JDBC&lt;/h1&gt;&lt;p&gt;Java数据库连接（Java Data Base Connectivity）&lt;/p&gt;
&lt;p&gt;用于Java编程</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="四、JDBC"><a href="#四、JDBC" class="headerlink" title="四、JDBC"></a>四、JDBC</h1><p>Java数据库连接（Java Data Base Connectivity）</p><p>用于Java编程语言和数据库之间连接的API  </p><h2 id="4-1、连接数据的步骤"><a href="#4-1、连接数据的步骤" class="headerlink" title="4.1、连接数据的步骤"></a>4.1、连接数据的步骤</h2><ul><li>注册驱动（只做一次）JDBC com.mysql.jdbc.Driver</li><li>建立连接（Connection）</li><li>创建执行SQL的容器（Statement）</li><li>执行语句</li><li>处理执行结果（ResultSet）</li><li>释放资源</li></ul><h2 id="4-2、注册驱动"><a href="#4-2、注册驱动" class="headerlink" title="4.2、注册驱动"></a>4.2、注册驱动</h2><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/image-20220426133904971.png" alt="image-20220426133904971"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/image-20220426135549340.png" alt="image-20220426135549340"> </p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/image-20220426140428680.png" alt="image-20220426140428680"></p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/image-20220426142905753.png" alt="image-20220426142905753"> </p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/05-%E6%95%B0%E6%8D%AE%E5%BA%93-JDBC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库（六）-事务</title>
      <link>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/06-%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8B%E5%8A%A1/</link>
      <guid>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/06-%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8B%E5%8A%A1/</guid>
      <pubDate>Mon, 25 Nov 2024 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;事务&quot;&gt;&lt;a href=&quot;#事务&quot; class=&quot;headerlink&quot; title=&quot;事务&quot;&gt;&lt;/a&gt;事务&lt;/h1&gt;&lt;p&gt;事务管理是原子操作，是加锁的，并发执行，如果隔离不合理，可能会出现脏读、不可重复读、幻读（更新3次，结果却更新了4次）&lt;/p&gt;
&lt;p&gt;四个隔</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><p>事务管理是原子操作，是加锁的，并发执行，如果隔离不合理，可能会出现脏读、不可重复读、幻读（更新3次，结果却更新了4次）</p><p>四个隔离级别   可序列化等</p><p><a href="https://developer.aliyun.com/article/743691">https://developer.aliyun.com/article/743691</a></p><p>set autocommit&#x3D;0开启事务</p><p>commit roll back结束事务</p><p>隔离级别：多个用户之间，你是否有影响</p><ol><li><p>读未提取（READ UNCOMMITTED）<br>允许的用户最多<br>读到别人未提交的数据</p></li><li><p>读已提取（READ COMMITTED）<br>允许的用户次之</p><p>读到别人已提交的数据</p></li><li><p>可重复读（REPEATABLE READ）<br>允许的用户再次之</p><p>保证不会出现不可重复读</p></li><li><p>可串行化（SERLALZABLE）<br>允许的用户最少</p><p>保证不会出现幻读</p></li></ol><hr><p>事务并发可能出现的问题：</p><ul><li>脏读（Dirty Read）<ul><li>一个事务读到了另一个未提交事务修改过的数据</li><li>就是两个用户都先后开始了事务操作，其中一个人进行操作的时候，读取到另一个人修改后的操作，而另一个人的修改操作还未完成，这就叫脏读</li><li>如果允许脏读，就要把隔离级别设到最低，READ_UNCOMMITTED</li></ul></li><li><h2 id="不可重复读（Non-Repeatable-Read）-一个事务只能读到另一个已经提交的事务并修改过的数据，并且其他事务每对该数据进行一次修改并提交后，该事务都能查询得到最新值。（不可重复读在读未提取和读已提取隔离级别都可能会出现）-在READ-COMMITTED中，可以读到别人提交的事务，进行同样的操作后，读取后的数据不一样"><a href="#不可重复读（Non-Repeatable-Read）-一个事务只能读到另一个已经提交的事务并修改过的数据，并且其他事务每对该数据进行一次修改并提交后，该事务都能查询得到最新值。（不可重复读在读未提取和读已提取隔离级别都可能会出现）-在READ-COMMITTED中，可以读到别人提交的事务，进行同样的操作后，读取后的数据不一样" class="headerlink" title="不可重复读（Non-Repeatable Read）- 一个事务只能读到另一个已经提交的事务并修改过的数据，并且其他事务每对该数据进行一次修改并提交后，该事务都能查询得到最新值。（不可重复读在读未提取和读已提取隔离级别都可能会出现）- 在READ_COMMITTED中，可以读到别人提交的事务，进行同样的操作后，读取后的数据不一样"></a>不可重复读（Non-Repeatable Read）<br>- 一个事务只能读到另一个已经提交的事务并修改过的数据，并且其他事务每对该数据进行一次修改并提交后，该事务都能查询得到最新值。（不可重复读在读未提取和读已提取隔离级别都可能会出现）<br>- 在READ_COMMITTED中，可以读到别人提交的事务，进行同样的操作后，读取后的数据不一样</h2></li><li>幻读<ul><li>在可重复读级别下，</li><li>进行事务操作，更新操作看不到，但是可以看到新增的插入操作结果</li><li>解决方法：用最高的隔离级别：可串行化</li></ul></li></ul><p>四种隔离级别比较</p><p><img src="/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/06-%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8B%E5%8A%A1/image-20220608193503585.png" alt="image-20220608193503585"></p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2024/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/06-%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8B%E5%8A%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>http://example.com/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
      <guid>http://example.com/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      <pubDate>Mon, 25 Nov 2024 14:23:32 GMT</pubDate>
      
        
        
      <description>&lt;hr&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1-问题描述&quot;&gt;&lt;a href=&quot;#1-问题描述&quot; class=&quot;headerlink&quot; title=&quot;1. *问题描述*&quot;&gt;&lt;/a&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;em&gt;&lt;strong&gt;*问题描述*&lt;/strong&gt;&lt;/em&gt;&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<hr><hr><h1 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1. *问题描述*"></a><strong>1.</strong> <em><strong>*问题描述*</strong></em></h1><p>宿舍管理系统的设计，首先包含两个方面：一个是宿舍中学生的信息，一个是宿舍中管理人员的信息。学生信息包含学号、姓名、性别、公寓、宿舍、电话，管理人员包含id号、姓名、公寓、宿舍、电话。这两种信息的区别是身份不同，所以需要加一个身份区别。</p><p>除此之外，还需要进行一定的操作，给出交互反应：添加、删除、查找、修改等新信息，这些都可以设计响应的函数进行操作，并与数据库进行连接。</p><h1 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2. *需求分析*"></a><strong>2.</strong> <em><strong>*需求分析*</strong></em></h1><p>（1）学生信息：每位学生的学号、姓名、性别、公寓、宿舍、电话、身份</p><p>（2）学生信息：每位学生的学号、姓名、性别、公寓、宿舍、电话、身份</p><p>（3）系统实现的功能安排</p><p>① 添加人员：添加学生和管理人员信息</p><p>② 显示人员信息：显示学生和管理人员信息</p><p>③ 删除人员信息：删除学生和管理人员信息</p><p>④ 修改人员信息：根据输入的id号，修改学生和管理人员的各种信息</p><p>⑤ 查找人员：根据输入的id号，查找相应的人员信息</p><p>⑥ 查找公寓：根据公寓号，查找对应的人员和管理人员信息</p><p>⑦ 退出程序</p><h1 id="3-概要设计"><a href="#3-概要设计" class="headerlink" title="3. *概要设计*"></a><strong>3.</strong> <em><strong>*概要设计*</strong></em></h1><p>3.1 数据结构设计</p><p>本宿舍管理系统主要采用链表结构类型存储学生信息、管理人员信息以及管理楼对应管理，并且，该宿舍管理系统与数据库建立连接，方便用户进行操作。</p><p>此外，根据宿舍的特点，采用多态技术，对学生和管理人员分别重写虚函数，便于使用。</p><p>3.2 创新点</p><p>（1）多态设计：学生和管理人员在数据库中是两个表，而在计算机中利用多态，同一在一种对象中，方便对对象进行操作</p><p>（2）连接数据库：根据数据库的相关函数，与数据库建立连接，调用数据库资源</p><p>（3）浏览人员信息：利用数据库，将所有的表中的数据都进行显示</p><p>（4）清空文件：利用相关的链表和SQL语言，将链表和数据库中所有信息清空</p><h1 id="4-模块设计"><a href="#4-模块设计" class="headerlink" title="4. *模块设计*"></a><strong>4.</strong> <em><strong>*模块设计*</strong></em></h1><p>4.1 模块设计</p><p>本系统包括链表模块和数据库模块</p><p>4.2 系统子程序及功能设计</p><p>（1） 主程序函数  int main() ：调用各个函数进行操作</p><p>（2） 功能提示函数  void Show_Menu() ：输出功能选项</p><p>（3） 退出系统函数  void exitSystem() ：退出系统</p><p>（4） 添加函数    void Add() ：添加学生或管理人员信息</p><p>（5） 显示人员函数  void Show()：显示所有的学生和管理人员信息</p><p>（6） 删除人员函数  void Delete()：删除相应的人员信息</p><p>（7） 修改人员函数  void Mod()：根据输入的信息在链表和数据库中修改信息</p><p>（8） 查找人员函数  void Find()：根据id号查找相应的人员数据</p><p>（9） 公寓人员函数  void Build()：根据输入的公寓号查找所有的学生和管理人员</p><p>（10） 清空文件函数  void Clean()：清空链表和数据库中的函数</p><p>4.3 函数及调用关系图</p><p>函数及调用关系图，如图1所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps2.jpg" alt="img"> </p><p>图1函数关系图</p><h1 id="5-详细设计"><a href="#5-详细设计" class="headerlink" title="5. *详细设计*"></a><strong>5.</strong> <em><strong>*详细设计*</strong></em></h1><p>介绍模块设计中各个函数的具体实现代码</p><p>（1） 主程序函数  int main() </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 实例化一个管理者对象</span></span><br><span class="line">DormManager dm;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 调用展示菜单成员函数</span></span><br><span class="line">dm.<span class="built_in">Show_Menu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出系统</span></span><br><span class="line">dm.<span class="built_in">exitSystem</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加人员</span></span><br><span class="line">dm.<span class="built_in">Add</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示人员</span></span><br><span class="line">dm.<span class="built_in">Show</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除人员</span></span><br><span class="line">dm.<span class="built_in">Delete</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//修改人员</span></span><br><span class="line">dm.<span class="built_in">Mod</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//查找人员</span></span><br><span class="line">dm.<span class="built_in">Find</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: <span class="comment">//公寓人员</span></span><br><span class="line">dm.<span class="built_in">Build</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="comment">//清空文件</span></span><br><span class="line">dm.<span class="built_in">Clean</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//刷新屏幕</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2） 人员抽象基类 person.h</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 人员抽象基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;<span class="comment">// 人员编号</span></span><br><span class="line">string name;<span class="comment">//人员姓名</span></span><br><span class="line">string sex;<span class="comment">// 人员性别</span></span><br><span class="line"><span class="type">int</span> building;<span class="comment">// 人员公寓楼</span></span><br><span class="line">string dorm;<span class="comment">// 人员宿舍</span></span><br><span class="line">string phone;<span class="comment">// 人员电话</span></span><br><span class="line">string status;<span class="comment">//人员身份</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>（3） 学生类 class student</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> :<span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="built_in">Student</span>(<span class="type">int</span> id, string name, string sex, <span class="type">int</span> building, string dorm, string phone);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>（4） 学生类实现 student.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line">Student::<span class="built_in">Student</span>(<span class="type">int</span> id, string name, string sex, <span class="type">int</span> building, string dorm, string phone)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;sex = sex;</span><br><span class="line"><span class="keyword">this</span>-&gt;building = building;</span><br><span class="line"><span class="keyword">this</span>-&gt;dorm = dorm;</span><br><span class="line"><span class="keyword">this</span>-&gt;phone = phone;</span><br><span class="line"><span class="keyword">this</span>-&gt;status = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示个人信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;id</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t学生姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t学生性别：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;sex</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t学生公寓：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;building</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t学生宿舍：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;dorm</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t学生电话：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;phone</span><br><span class="line">&lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（5） 管理人员类 manager.h</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 管理人员类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> : <span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="built_in">Manager</span>(<span class="type">int</span> id, string name, string sex, <span class="type">int</span> building, string dorm, string phone);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>（6） 管理人员类实现 manager.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(<span class="type">int</span> id, string name, string sex, <span class="type">int</span> building, string dorm, string phone)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;sex = sex;</span><br><span class="line"><span class="keyword">this</span>-&gt;building = building;</span><br><span class="line"><span class="keyword">this</span>-&gt;dorm = dorm;</span><br><span class="line"><span class="keyword">this</span>-&gt;phone = phone;</span><br><span class="line"><span class="keyword">this</span>-&gt;status = <span class="string">&quot;管理人员&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示个人信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;舍管编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;id</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t舍管姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t舍管性别：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;sex</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t舍管公寓：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;building</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t舍管宿舍：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;dorm</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t舍管电话：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;phone</span><br><span class="line">&lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（7） 宿舍管理类 dormManager.h</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span><span class="comment">// 包含输入输出流文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">// 使用标准命名空间</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;person.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;WinSock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;mysql.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DormManager</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 记录人员个数</span></span><br><span class="line"><span class="type">int</span> m_Num;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 人员数组指针</span></span><br><span class="line">Person** m_Array;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="built_in">DormManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 展示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Menu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">exitSystem</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断人员是否存在 存在返回索引值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Exist</span><span class="params">(<span class="type">int</span> id, string status)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mod</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Find</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公寓人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Build</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Clean</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 析构函数</span></span><br><span class="line">~<span class="built_in">DormManager</span>();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>（8） 宿舍管理类实现 dormManager.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dormManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mysql.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mysql.h&gt;</span></span></span><br><span class="line">DormManager::<span class="built_in">DormManager</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 展示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Show_Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*******************************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************   欢迎使用宿舍管理系统    ****************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  0.退出管理程序  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  1.增加人员信息  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  2.显示人员信息  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  3.删除人员信息  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  4.修改人员信息  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  5.查找人员信息  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  6.按照编号排序  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;****************************  7.清空所有文档  *********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*******************************************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::exitSystem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Add</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入添加职工数量：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> addNum = <span class="number">0</span>;<span class="comment">// 保存用户的输入数量</span></span><br><span class="line">cin &gt;&gt; addNum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (addNum &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 计算添加新空间大小</span></span><br><span class="line"><span class="type">int</span> newSize = <span class="keyword">this</span>-&gt;m_Num + addNum;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开辟新空间</span></span><br><span class="line">Person** newSpace = <span class="keyword">new</span> Person * [newSize];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将原来空间下数据，拷贝到新空间中</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line">newSpace[i] = <span class="keyword">this</span>-&gt;m_Array[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量添加新数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; addNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line">string sex;</span><br><span class="line"><span class="type">int</span> building;</span><br><span class="line">string dorm;</span><br><span class="line">string phone;</span><br><span class="line"></span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line">Person* person = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> choice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入该人员类别：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、管理人员&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">string status = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员性别：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员公寓：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; building;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员宿舍：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; dorm;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line"></span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Student</span>(id, name, sex, building, dorm, phone);<span class="comment">// 创建对象空间</span></span><br><span class="line">string sql = <span class="string">&quot;insert into student(id, name, sex, building, dorm, phone, status) values(&quot;</span></span><br><span class="line">+ <span class="built_in">to_string</span>(id) + <span class="string">&quot;,&#x27;&quot;</span> + name + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + sex + <span class="string">&quot;&#x27;,&quot;</span> + <span class="built_in">to_string</span>(building) + <span class="string">&quot;,&#x27;&quot;</span> + dorm + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + phone + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + status + <span class="string">&quot;&#x27;)&quot;</span>;</span><br><span class="line"><span class="type">char</span> query[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(query, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(query);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">string status = <span class="string">&quot;管理人员&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员性别：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员公寓：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; building;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新人员宿舍：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; dorm;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line"></span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, sex, building, dorm, phone);</span><br><span class="line">string sql = <span class="string">&quot;insert into manager(id, name, sex, building, dorm, phone, status) values(&quot;</span></span><br><span class="line">+ <span class="built_in">to_string</span>(id) + <span class="string">&quot;,&#x27;&quot;</span> + name + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + sex + <span class="string">&quot;&#x27;,&quot;</span> + <span class="built_in">to_string</span>(building) + <span class="string">&quot;,&#x27;&quot;</span> + dorm + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + phone + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + status + <span class="string">&quot;&#x27;)&quot;</span>;</span><br><span class="line"><span class="type">char</span> query[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(query, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(query);</span><br><span class="line"></span><br><span class="line">string sql2 = <span class="string">&quot;insert into normal(Mid, Mbuilding) values(&quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;,&quot;</span> + <span class="built_in">to_string</span>(building) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line"><span class="type">char</span> query2[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(query2, sql<span class="number">2.</span><span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(query2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将创建的人员放到数组中</span></span><br><span class="line">newSpace[<span class="keyword">this</span>-&gt;m_Num + i] = person;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 释放原有空间</span></span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_Array;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改新空间指向</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array = newSpace;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改新的人员数量</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Num = newSize;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加成功</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addNum &lt;&lt; <span class="string">&quot;名新人员&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入数据有误&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按任意键清屏</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;<span class="built_in">Query</span>(<span class="string">&quot;student&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生信息显示成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生信息显示失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (d-&gt;<span class="built_in">Query</span>(<span class="string">&quot;manager&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;管理人员信息显示成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;管理人员信息显示失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按任意键清屏</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断人员是否存在 存在返回索引值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DormManager::Exist</span><span class="params">(<span class="type">int</span> id, string status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> index = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array[i]-&gt;id = id &amp;&amp; <span class="keyword">this</span>-&gt;m_Array[i]-&gt;status == status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 找到职工</span></span><br><span class="line">index = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> index;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Delete</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;删除的人员是：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、宿舍管理人员&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> choice;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)<span class="comment">// 学生</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入删除人员的id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">int</span> index = <span class="keyword">this</span>-&gt;<span class="built_in">Exist</span>(id, <span class="string">&quot;学生&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 说明职工存在，并且删除掉index位置的职工</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = index; i &lt; <span class="keyword">this</span>-&gt;m_Num - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 数据前移</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[i] = <span class="keyword">this</span>-&gt;m_Array[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Num--;<span class="comment">// 更新数组中记录人员个数</span></span><br><span class="line">string sql = <span class="string">&quot;delete from student where id = &#x27;&quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="type">char</span> del[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(del, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(del);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生删除成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生删除失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">// 管理人员</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入删除人员的id号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">int</span> index = <span class="keyword">this</span>-&gt;<span class="built_in">Exist</span>(id, <span class="string">&quot;管理人员&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 说明职工存在，并且删除掉index位置的职工</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = index; i &lt; <span class="keyword">this</span>-&gt;m_Num - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 数据前移</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[i] = <span class="keyword">this</span>-&gt;m_Array[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Num--;<span class="comment">// 更新数组中记录人员个数</span></span><br><span class="line">string sql = <span class="string">&quot;delete from manager where id = &#x27;&quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="type">char</span> del[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(del, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(del);</span><br><span class="line">string sql2 = <span class="string">&quot;delete from normal where Mid = &#x27;&quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="type">char</span> del2[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(del2, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(del2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生删除成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生删除失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Find</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找人员的编号&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> newId;</span><br><span class="line">cin &gt;&gt; newId;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line"></span><br><span class="line">string sql = <span class="string">&quot;select * from student where id =&quot;</span> + <span class="built_in">to_string</span>(newId);</span><br><span class="line">string sql2 = <span class="string">&quot;select * from manager where id =&quot;</span> + <span class="built_in">to_string</span>(newId);</span><br><span class="line"><span class="type">char</span> find[<span class="number">150</span>];</span><br><span class="line"><span class="type">char</span> find2[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(find, sql.<span class="built_in">c_str</span>());</span><br><span class="line"><span class="built_in">strcpy_s</span>(find2, sql<span class="number">2.</span><span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(find);</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(find2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Mod</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入修改人员的身份&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、管理人员&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> choice;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)<span class="comment">// 学生</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入修改学生的编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">Exist</span>(id, <span class="string">&quot;学生&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 查找到编号的学生</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_Array[ret];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> newId = <span class="number">0</span>;</span><br><span class="line">string newName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string newSex = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> newBuilding = <span class="number">0</span>;</span><br><span class="line">string newDorm = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string newPhone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;号学生，请输入新学生号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newId;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的姓名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的性别：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newSex;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的公寓：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newBuilding;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的宿舍：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newDorm;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的电话：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newPhone;</span><br><span class="line"></span><br><span class="line">Person* person = <span class="literal">NULL</span>;</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Student</span>(newId, newName, newSex, newBuilding, newDorm, newPhone);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新数据到数组中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[ret] = person;</span><br><span class="line"></span><br><span class="line">string sql = <span class="string">&quot;update student set id = &quot;</span> + <span class="built_in">to_string</span>(newId) + <span class="string">&quot;,name = &#x27;&quot;</span>+ newName + <span class="string">&quot;&#x27;, sex = &#x27;&quot;</span>+ newSex + <span class="string">&quot;&#x27;, building = &quot;</span>+<span class="built_in">to_string</span>(newBuilding)+<span class="string">&quot;, dorm = &#x27;&quot;</span>+newDorm + <span class="string">&quot;&#x27;, phone = &#x27;&quot;</span>+newPhone +<span class="string">&quot;&#x27; where id = &quot;</span> +<span class="built_in">to_string</span>(id)+<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">char</span> update[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(update, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(update);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;找不到对应的数据，修改失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">2</span>)<span class="comment">// 管理人员</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入修改管理人员的编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">Exist</span>(id, <span class="string">&quot;管理人员&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 查找到编号的管理人员</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_Array[ret];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> newId = <span class="number">0</span>;</span><br><span class="line">string newName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string newSex = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> newBuilding = <span class="number">0</span>;</span><br><span class="line">string newDorm = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string newPhone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;号管理人员，请输入新id号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newId;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的姓名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的性别：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newSex;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的公寓：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newBuilding;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的宿舍：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newDorm;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新的电话：&quot;</span>;</span><br><span class="line">cin &gt;&gt; newPhone;</span><br><span class="line"></span><br><span class="line">Person* person = <span class="literal">NULL</span>;</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Manager</span>(newId, newName, newSex, newBuilding, newDorm, newPhone);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新数据到数组中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[ret] = person;</span><br><span class="line"></span><br><span class="line">string sql = <span class="string">&quot;update manager set id = &quot;</span> + <span class="built_in">to_string</span>(newId) + <span class="string">&quot;,name = &#x27;&quot;</span> + newName + <span class="string">&quot;&#x27;, sex = &#x27;&quot;</span> + newSex + <span class="string">&quot;&#x27;, building = &quot;</span> + <span class="built_in">to_string</span>(newBuilding) + <span class="string">&quot;, dorm = &#x27;&quot;</span> + newDorm + <span class="string">&quot;&#x27;, phone = &#x27;&quot;</span> + newPhone + <span class="string">&quot;&#x27; where id = &quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="type">char</span> update[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(update, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(update);</span><br><span class="line"></span><br><span class="line">string sql2 = <span class="string">&quot;update normal set Mid = &quot;</span> + <span class="built_in">to_string</span>(newId) + <span class="string">&quot;&#x27;, building = &quot;</span> + <span class="built_in">to_string</span>(newBuilding) + <span class="string">&quot;&#x27; where Mid = &quot;</span> + <span class="built_in">to_string</span>(id) + <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="type">char</span> update2[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(update2, sql.<span class="built_in">c_str</span>());</span><br><span class="line">d-&gt;<span class="built_in">Implement</span>(update2);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;找不到对应的数据，修改失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Clean</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;确定清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、确定&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、返回&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">DataBase* d = <span class="keyword">new</span> DataBase;</span><br><span class="line">d-&gt;<span class="built_in">Connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;13525681378.Ll&quot;</span>, <span class="string">&quot;dormitory_management_system&quot;</span>, <span class="number">3306</span>);</span><br><span class="line"></span><br><span class="line">string sql = <span class="string">&quot;delete  from student&quot;</span>;</span><br><span class="line">string sql2 = <span class="string">&quot;delete  from manager&quot;</span>;</span><br><span class="line">string sql3 = <span class="string">&quot;delete  from normal&quot;</span>;</span><br><span class="line"><span class="type">char</span> empty[<span class="number">150</span>];</span><br><span class="line"><span class="type">char</span> empty2[<span class="number">150</span>];</span><br><span class="line"><span class="type">char</span> empty3[<span class="number">150</span>];</span><br><span class="line"><span class="built_in">strcpy_s</span>(empty, sql.<span class="built_in">c_str</span>());</span><br><span class="line"><span class="built_in">strcpy_s</span>(empty2, sql<span class="number">2.</span><span class="built_in">c_str</span>());</span><br><span class="line"><span class="built_in">strcpy_s</span>(empty3, sql<span class="number">3.</span><span class="built_in">c_str</span>());</span><br><span class="line"><span class="keyword">if</span> (d-&gt;<span class="built_in">Implement</span>(empty) &amp;&amp; d-&gt;<span class="built_in">Implement</span>(empty2) &amp;&amp; d-&gt;<span class="built_in">Implement</span>(empty3))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数据库清空成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 删除堆区的每个职工对象</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_Array[i];</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[i] = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除堆区数组指针</span></span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_Array;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 公寓人员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DormManager::Build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要查询的公寓楼号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="type">int</span> index = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; select &lt;&lt; <span class="string">&quot;公寓的所有人员如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array[i]-&gt;building == select &amp;&amp; <span class="keyword">this</span>-&gt;m_Array [i]-&gt;status == <span class="string">&quot;学生&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[i]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array[i]-&gt;building == select &amp;&amp; <span class="keyword">this</span>-&gt;m_Array[i]-&gt;status == <span class="string">&quot;管理人员&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array[i]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DormManager::~<span class="built_in">DormManager</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Array[i] != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_Array[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_Array;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Array = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（9） 数据库连接类 mysql.h</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MY_SQL_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MY_SQL_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;WinSock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;mysql.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataBase</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">DataBase</span>();</span><br><span class="line">~<span class="built_in">DataBase</span>();</span><br><span class="line"><span class="comment">//连接数据库 参数为ip 用户名 密码 数据库名 端口</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Connect</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* ip, <span class="type">const</span> <span class="type">char</span>* name, <span class="type">const</span> <span class="type">char</span>* cypher, <span class="type">const</span> <span class="type">char</span>* database_name, <span class="type">const</span> <span class="type">int</span> port)</span></span>;</span><br><span class="line"><span class="comment">//获取表内的字段数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetTableField</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* table_name)</span></span>;</span><br><span class="line"><span class="comment">//查询表 参数为表名</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Query</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* table_name)</span></span>;</span><br><span class="line"><span class="comment">//自由执行指令</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Implement</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* sentence)</span></span>;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">bool</span> _state;<span class="comment">//连接状态 true为已连接</span></span><br><span class="line">MYSQL* _mysql;<span class="comment">//mysql连接</span></span><br><span class="line">MYSQL_FIELD* _fd;<span class="comment">//字段列数组  </span></span><br><span class="line"><span class="type">char</span> _field[<span class="number">32</span>][<span class="number">32</span>];<span class="comment">//存字段名二维数组  </span></span><br><span class="line">MYSQL_RES* _res;<span class="comment">//这个结构代表返回行的一个查询结果集  </span></span><br><span class="line">MYSQL_ROW _column;<span class="comment">//一个行数据的类型安全(type-safe)的表示，表示数据行的列  </span></span><br><span class="line"><span class="type">char</span> _query[<span class="number">150</span>];<span class="comment">//查询语句  </span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// !MY_SQL_H</span></span></span><br></pre></td></tr></table></figure><p>（10） 数据库连接类实现 mysql.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mysql.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">DataBase::<span class="built_in">DataBase</span>()</span><br><span class="line">&#123;</span><br><span class="line">    _state = <span class="literal">false</span>;</span><br><span class="line">    _mysql = <span class="keyword">new</span> MYSQL;</span><br><span class="line">    _fd = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="built_in">memset</span>(_field, <span class="literal">NULL</span>, <span class="built_in">sizeof</span>(_field));</span><br><span class="line">    _res = <span class="literal">nullptr</span>;</span><br><span class="line">    _column = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="built_in">memset</span>(_query, <span class="literal">NULL</span>, <span class="built_in">sizeof</span>(_query));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DataBase::~<span class="built_in">DataBase</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DataBase::Connect</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* ip, <span class="type">const</span> <span class="type">char</span>* name, <span class="type">const</span> <span class="type">char</span>* cypher, <span class="type">const</span> <span class="type">char</span>* database_name, <span class="type">const</span> <span class="type">int</span> port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span> == _state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Database connected\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化mysql  </span></span><br><span class="line">    <span class="built_in">mysql_init</span>(_mysql);</span><br><span class="line">    <span class="comment">//返回false则连接失败，返回true则连接成功  </span></span><br><span class="line">    <span class="keyword">if</span> (!(<span class="built_in">mysql_real_connect</span>(_mysql, ip, name, cypher, database_name, port, <span class="literal">NULL</span>, <span class="number">0</span>))) <span class="comment">//中间分别是主机，用户名，密码，数据库名，端口号（可以写默认0或者3306等），可以先写成参数再传进去  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error connecting to database:%s\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        _state = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Connected succeed\n\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DataBase::GetTableField</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* table_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span> == _state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Database not connected\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询内容</span></span><br><span class="line">    <span class="built_in">sprintf_s</span>(_query, <span class="string">&quot;desc %s&quot;</span>, table_name); <span class="comment">//desc 语句获取字段数</span></span><br><span class="line">    <span class="comment">//设置编码格式（SET NAMES GBK也行），否则cmd下中文乱码 </span></span><br><span class="line">    <span class="built_in">mysql_query</span>(_mysql, <span class="string">&quot;set names gbk&quot;</span>);</span><br><span class="line">    <span class="comment">//返回0 查询成功，返回1查询失败  </span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(_mysql, _query))    <span class="comment">//执行SQL语句</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Query failed (%s)\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取结果集  </span></span><br><span class="line">    <span class="keyword">if</span> (!(_res = <span class="built_in">mysql_store_result</span>(_mysql)))   <span class="comment">//获得sql语句结束后返回的结果集  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Couldn&#x27;t get result from %s\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//数据行数即为字段个数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">mysql_affected_rows</span>(_mysql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DataBase::Query</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* table_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span> == _state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Database not connected\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取字段数</span></span><br><span class="line">    <span class="type">int</span> field = <span class="built_in">GetTableField</span>(table_name);</span><br><span class="line">    <span class="comment">//查询内容</span></span><br><span class="line">    <span class="built_in">sprintf_s</span>(_query, <span class="string">&quot;select * from %s&quot;</span>, table_name); <span class="comment">//执行查询语句 </span></span><br><span class="line">    <span class="comment">//设置编码格式（SET NAMES GBK也行），否则cmd下中文乱码 </span></span><br><span class="line">    <span class="built_in">mysql_query</span>(_mysql, <span class="string">&quot;set names gbk&quot;</span>);</span><br><span class="line">    <span class="comment">//返回0 查询成功，返回1查询失败  </span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(_mysql, _query))    <span class="comment">//执行SQL语句</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Query failed (%s)\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;query success\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取结果集  </span></span><br><span class="line">    <span class="keyword">if</span> (!(_res = <span class="built_in">mysql_store_result</span>(_mysql)))   <span class="comment">//获得sql语句结束后返回的结果集  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Couldn&#x27;t get result from %s\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印数据行数  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;number of dataline returned: %lld\n&quot;</span>, <span class="built_in">mysql_affected_rows</span>(_mysql));</span><br><span class="line">    <span class="comment">//获取字段的信息  </span></span><br><span class="line">    <span class="type">char</span>* str_field[<span class="number">32</span>];  <span class="comment">//定义一个字符串数组存储字段信息  </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; field; i++)  <span class="comment">//在已知字段数量的情况下获取字段名  </span></span><br><span class="line">    &#123;</span><br><span class="line">        str_field[i] = <span class="built_in">mysql_fetch_field</span>(_res)-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; field; i++)  <span class="comment">//打印字段  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10s\t&quot;</span>, str_field[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="comment">//打印获取的数据  </span></span><br><span class="line">    <span class="keyword">while</span> (_column = <span class="built_in">mysql_fetch_row</span>(_res))   <span class="comment">//在已知字段数量情况下，获取并打印下一行  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; field; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%10s\t&quot;</span>, _column[i]);  <span class="comment">//column是列数组  </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DataBase::Implement</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* sentence)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span> == _state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Database not connected\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询内容</span></span><br><span class="line">    <span class="built_in">sprintf_s</span>(_query, <span class="string">&quot;%s&quot;</span>, sentence); <span class="comment">//desc 语句获取字段数</span></span><br><span class="line">    <span class="comment">//设置编码格式（SET NAMES GBK也行），否则cmd下中文乱码 </span></span><br><span class="line">    <span class="built_in">mysql_query</span>(_mysql, <span class="string">&quot;set names gbk&quot;</span>);</span><br><span class="line">    <span class="built_in">mysql_query</span>(_mysql, _query);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//执行SQL语句</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">mysql_query</span>(_mysql, _query))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Query failed (%s)\n&quot;</span>, <span class="built_in">mysql_error</span>(_mysql));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-测试分析"><a href="#6-测试分析" class="headerlink" title="6. *测试分析*"></a><strong>6.</strong> <em><strong>*测试分析*</strong></em></h1><p>(1) 主程序main()<br>    运行程序后，窗口自动运行主程序结果如图2所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps3.jpg" alt="img"></p><p>图2主程序图</p><p>(2) 添加函数 Add()<br>    进入窗口页面后，输入“1”，程序，如图3所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps4.jpg" alt="img"></p><p>图3 添加图</p><p>(3) 显示人员函数  dm.Show()<br>        进入系统后，输入“2”，进入查看人员信息的页面，如图4所示。<br><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps5.jpg" alt="img"></p><p>图4 显示图</p><p>(4) 删除人员函数  dm.Delete()<br>        进入窗口后，输入“3”，进入删除界面，然后输入1或2，分别进入学生删除和管理人员删除页面，再输入id号，删除信息。如图5所示。<br><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps6.jpg" alt="img"></p><p>图5 删除人员图</p><p>(5) 修改函数 dm.Delete()<br>    进入窗口后，输入“4”，进入修改窗口。输入所需要修改的id数，然后输入应修改的id,姓名，性别，公寓，宿舍，电话。如图6所示。</p><pre><code>    ![img](C++(十二)-课设-宿舍管理系统/wps7.jpg)</code></pre><p>图6 修改信息图</p><p>(6) 查找函数dm.Find()<br>        主程序页面，输入“5”，输入想要查询的id号，输出所有学生或管理人员信息。如图7所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps8.jpg" alt="img"> </p><p>图7 查找信息图</p><p>(7) 公寓查询函数 dm.FindHeader()<br>    进行选择页面，输入“6”，再输入相应的公寓号，输入所有信息。如图8所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps9.jpg" alt="img"> </p><p>图8 公寓查询图</p><p>（8）清空文档函数 dm.Clear()</p><p>进入选择页面，输入“7”，再输入“确定”或“不确定”，进行相应的操作。如图9所示。</p><p><img src="/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/wps10.jpg" alt="img"> </p><p>图9清空文件图</p><h1 id="7-用户手册"><a href="#7-用户手册" class="headerlink" title="7. *用户手册*"></a><strong>7.</strong> <em><strong>*用户手册*</strong></em></h1><p>（1）首先进入页面，看到功能选项目录</p><p>（2）输入“1”，添加相应的学生或管理人员信息</p><p>（3）输入“2”，根据数据库原理显示所有数据</p><p>（4）输入“3”，输入相应的id号，进行删除人员操作</p><p>（5）输入“4”，输入修改人员的id号，再输入修改后的各种新信息，操作</p><p>（6）输入“5”，输入相应的id号，查找对应的相关信息 </p><p>（7）输入“6”，输入“确定”或“返回”，进行清空或返回操作</p><p>（8）输入“0”，退出该宿舍管理系统。</p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2024/11/25/C++/C++(%E5%8D%81%E4%BA%8C)-%E8%AF%BE%E8%AE%BE-%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CodeBlock下载</title>
      <link>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/</link>
      <guid>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/</guid>
      <pubDate>Mon, 25 Nov 2024 07:39:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;2）codeblock安装&quot;&gt;&lt;a href=&quot;#2）codeblock安装&quot; class=&quot;headerlink&quot; title=&quot;2）codeblock安装&quot;&gt;&lt;/a&gt;2）codeblock安装&lt;/h2&gt;&lt;p&gt;​		2-1）官网 &lt;a href=&quot;https:/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="2）codeblock安装"><a href="#2）codeblock安装" class="headerlink" title="2）codeblock安装"></a>2）codeblock安装</h2><p>​2-1）官网 <a href="https://www.codeblocks.org/">https://www.codeblocks.org/</a></p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps43.jpg" alt="img"> </p><p>​2-2）点击下载</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps44.jpg" alt="img"> </p><p>2-3）选择对应平台</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps45.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps46.jpg" alt="img"> </p><p>2-4）安装即可</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps47.jpg" alt="img"> </p><p>2-5）配置依赖库和include库</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps48.jpg" alt="img"> </p><p>Setting中第三个Compiler</p><p>​<img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps49.jpg" alt="img"></p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps50.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps51.jpg" alt="img"> </p><p>2-6）创建工程</p><p>​<img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps52.jpg" alt="img"></p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps53.jpg" alt="img"> </p><p>2-7）将libmysql.dll复制到工程中</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps54.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps55.jpg" alt="img"> </p><p>2-8）运行结果</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps56.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/wps57.jpg" alt="img"> </p><p>文件：main.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line">\<span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mysql.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Hello, world!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// q1();</span></span><br><span class="line"></span><br><span class="line">  MYSQL conn;</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> res;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mysql_init</span>(&amp;conn);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">mysql_real_connect</span>(&amp;conn, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="number">3306</span>, <span class="literal">NULL</span>, CLIENT_FOUND_ROWS))</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">printf</span>(<span class="string">&quot;connect success!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">​    res = <span class="built_in">mysql_query</span>(&amp;conn, <span class="string">&quot;insert into account values(&#x27;lisi&#x27;,&#x27;9999&#x27;)&quot;</span>);</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> (res)</span><br><span class="line"></span><br><span class="line">​    &#123;</span><br><span class="line"></span><br><span class="line">​      <span class="built_in">printf</span>(<span class="string">&quot;error\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​    &#123;</span><br><span class="line"></span><br><span class="line">​      <span class="built_in">printf</span>(<span class="string">&quot;OK\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">mysql_close</span>(&amp;conn);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">printf</span>(<span class="string">&quot;connect errot!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      <category domain="http://example.com/tags/mysql/">mysql</category>
      
      <category domain="http://example.com/tags/codeblock/">codeblock</category>
      
      
      <comments>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/CodeBlock/CodeBlock/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Mysql下载</title>
      <link>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/</link>
      <guid>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/</guid>
      <pubDate>Mon, 25 Nov 2024 07:39:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Mysql下载&quot;&gt;&lt;a href=&quot;#Mysql下载&quot; class=&quot;headerlink&quot; title=&quot;Mysql下载&quot;&gt;&lt;/a&gt;Mysql下载&lt;/h1&gt;&lt;p&gt;1）进入Mysql 官网，进入下载界面&lt;/p&gt;
&lt;img src=&quot;/2024/11/25/%E8%</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Mysql下载"><a href="#Mysql下载" class="headerlink" title="Mysql下载"></a>Mysql下载</h1><p>1）进入Mysql 官网，进入下载界面</p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/../数据库/C++连接Mysql数据库/wps1.jpg" alt="img" style="zoom:200%;"> <p>​2）选择Mysql Community Downloads</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps2.jpg" alt="img"> </p><p>​3) 选择Mysql Community Server</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps3.jpg" alt="img"> </p><p>4）可以选择之前版本</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps4.jpg" alt="img"> </p><p>5）开始下载</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps5.jpg" alt="img"> </p><p>6）将下载好的压缩包解压缩</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps6.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps7.jpg" alt="img"> </p><p>7）设置配置文件</p><p>a）解压缩后没有配置文件，需要自定义</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps8.jpg" alt="img"> </p><p>b）定义配置文件，同时新建一个文件夹，命名为data，与配置文件中数据存放位置定义的名称一致。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"></span><br><span class="line">\# 设置 MySQL 客户端默认字符集</span><br><span class="line"></span><br><span class="line">default-character-set=utf8 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">\#设置 MySQL 端口号</span><br><span class="line"></span><br><span class="line">port = 3306 </span><br><span class="line"></span><br><span class="line">\#skip-grant-tables</span><br><span class="line"></span><br><span class="line">\# 设置 MySQL 的安装目录</span><br><span class="line"></span><br><span class="line">basedir=D:/mysql-5.7.24-winx64</span><br><span class="line"></span><br><span class="line">\# 设置 MySQL 数据库的数据的存放目录</span><br><span class="line"></span><br><span class="line">datadir=D:/mysql-5.7.24-winx64/data</span><br><span class="line"></span><br><span class="line">\# 允许最大连接数</span><br><span class="line"></span><br><span class="line">max_connections=200</span><br><span class="line"></span><br><span class="line">\# 服务端使用的字符集</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">\# 创建新表时将使用的默认存储引擎</span><br><span class="line"></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">\#default_character_set=utf8</span><br></pre></td></tr></table></figure><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps9.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps10.jpg" alt="img"> </p><p>8）配置环境变量</p><p>​我的电脑 – 属性 – 高级环境设置 – 环境变量 – 系统变量 – 选择PATH – 新建</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps11.jpg" alt="img"> </p><p>将Mysql 文件夹中的bin导入。</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps12.jpg" alt="img"> </p><p>9）重启电脑</p><p>10）如果打开mysql.exe未出现下图错误，则跳过该步骤</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps13.jpg" alt="img"> </p><p>​10-1）下载DirectX 修复工具 </p><p>网址： <a href="https://zhangyue667.lanzouh.com/DirectXRepairEnhanced">https://zhangyue667.lanzouh.com/DirectXRepairEnhanced</a></p><p>10-2）运行程序</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps14.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps15.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps16.jpg" alt="img"> </p><p>10-3）重启电脑</p><p>10-4）修复成功，启动mysql.exe测试</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps17.jpg" alt="img"> </p><p>11）验证环境变量是否配置正确</p><p>​在cmd窗口中输入 mysql -uroot -proot</p><p>​<img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps18.jpg" alt="img"></p><p>说明配置没有问题</p><p>12）修复上述出现的问题</p><p>​12-0)  首先确保服务中启动了Mysql</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps19.jpg" alt="img"> </p><p>​若未启动出现问题，则先启动。</p><p>​12-1）以管理员身份启动<a href="https://so.csdn.net/so/search?q=cmd&spm=1001.2101.3001.7020">cmd</a>，要不然服务禁止访问</p><p>​12-2）在cmd中输入 mysqld –remove mysql来移除服务。</p><p>​12-3）进入MySQL安装目录中找到data文件，清空其中全部文件。我的目录是D:\mysql-5.7.24-winx64\data，没有data文件自己建一个。</p><p>​12-4）接下来注册服务，mysqld -install。</p><p>​12-5）然后开始初始化，mysqld –initialize，然后可以看到data文件夹中文件正在初始化中（生成文件中）</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps20.jpg" alt="img"> </p><p>​12-6）初始化过程中会把登录密码初始化，可以在data文件中找到以.err结尾的文件</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps21.jpg" alt="img"> </p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps22.jpg" alt="img"> </p><p>​12-7）在root@localhost:后面即初始密码，记住初始密码</p><p>​12-8) mysql -u root -p 后出现Enter password:输入密码即可</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps23.jpg" alt="img"> </p><p>12-9）修改密码</p><p>set password for username@localhost &#x3D; password(‘newpwd’)</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps24.jpg" alt="img"> </p><h1 id="一、-创建数据库"><a href="#一、-创建数据库" class="headerlink" title="一、 创建数据库"></a>一、 创建数据库</h1><p>1） 进入mysql数据库，创建一个test数据库</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps25.jpg" alt="img"> </p><p>2） 创建一个account表</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps26.jpg" alt="img"> </p><p>3） 展示表中数据</p><p><img src="/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/wps27.jpg" alt="img"> </p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      <category domain="http://example.com/tags/mysql/">mysql</category>
      
      
      <comments>http://example.com/2024/11/25/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>OpenCV(十二)-机器学习</title>
      <link>http://example.com/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/</link>
      <guid>http://example.com/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/</guid>
      <pubDate>Sun, 24 Nov 2024 08:25:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124162624834.png" alt="image-20241124162624834"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124162803287.png" alt="image-20241124162803287"></p><h1 id="一、Haar人脸识别方法"><a href="#一、Haar人脸识别方法" class="headerlink" title="一、Haar人脸识别方法"></a>一、Haar人脸识别方法</h1><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124162833967.png" alt="image-20241124162833967"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124162856952.png" alt="image-20241124162856952"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124162945362.png" alt="image-20241124162945362"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步、创建级联器</span></span><br><span class="line">faser = cv2.CascadeClassifier(<span class="string">&#x27;./haarcascades/haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步，导入人脸识别的图片并将其灰度化</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;p3.png&#x27;</span>)</span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步，进行人脸识别</span></span><br><span class="line"><span class="comment"># [[x,y,w,h]]</span></span><br><span class="line">faces = faser.detectMultiScale(gray, <span class="number">1.1</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (x,y,w,h) <span class="keyword">in</span> faces:</span><br><span class="line">    cv2.rectangle(img, (x,y), (x+w, y+h), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">cv2.waitKey()</span><br></pre></td></tr></table></figure><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124164125359.png" alt="image-20241124164125359"></p><h1 id="二、Haar识别眼鼻口"><a href="#二、Haar识别眼鼻口" class="headerlink" title="二、Haar识别眼鼻口"></a>二、Haar识别眼鼻口</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一步，创建Haar级联器</span></span><br><span class="line">facer = cv2.CascadeClassifier(<span class="string">&#x27;./haarcascades/haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line">eye = cv2.CascadeClassifier(<span class="string">&#x27;./haarcascades/haarcascade_eye.xml&#x27;</span>)</span><br><span class="line">mouth = cv2.CascadeClassifier(<span class="string">&#x27;./haarcascades/haarcascade_mcs_mouth.xml&#x27;</span>)</span><br><span class="line">nose = cv2.CascadeClassifier(<span class="string">&#x27;./haarcascades/haarcascade_mcs_nose.xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二步，导入人脸识别的图片并将其灰度化</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./p3.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三步，进行人脸识别</span></span><br><span class="line"><span class="comment">#[[x,y,w,h]]</span></span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测出的人脸上再检测眼睛</span></span><br><span class="line">faces = facer.detectMultiScale(gray, <span class="number">1.1</span>, <span class="number">3</span>)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (x,y,w,h) <span class="keyword">in</span> faces:</span><br><span class="line">    cv2.rectangle(img, (x, y), (x+w, y+h), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">    roi_img = img[y:y+h, x:x+w]</span><br><span class="line">    eyes = eye.detectMultiScale(roi_img, <span class="number">1.1</span>, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">for</span> (x,y,w,h) <span class="keyword">in</span> eyes:</span><br><span class="line">        cv2.rectangle(roi_img, (x, y), (x+w, y+h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">        roi_eye=roi_img[y:y+h, x:x+w]</span><br><span class="line">        eyename = <span class="string">&#x27;eye&#x27;</span> + <span class="built_in">str</span>(j)</span><br><span class="line">        j = j+<span class="number">1</span> </span><br><span class="line">        cv2.imshow(eyename, roi_eye)</span><br><span class="line"></span><br><span class="line">    i = i+<span class="number">1</span></span><br><span class="line">    winname = <span class="string">&#x27;face&#x27;</span> + <span class="built_in">str</span>(i)</span><br><span class="line">    cv2.imshow(winname, roi_img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mouths = mouth.detectMultiScale(gray, 1.1, 3)</span></span><br><span class="line"><span class="comment"># for (x,y,w,h) in mouths:</span></span><br><span class="line"><span class="comment">#     cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># noses = nose.detectMultiScale(gray, 1.1, 3)</span></span><br><span class="line"><span class="comment"># for (x,y,w,h) in noses:</span></span><br><span class="line"><span class="comment">#     cv2.rectangle(img, (x, y), (x+w, y+h), (255, 255, 0), 2)</span></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br></pre></td></tr></table></figure><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124171623655.png" alt="image-20241124171623655"></p><h1 id="三、Haar-Tesseract进行车牌识别"><a href="#三、Haar-Tesseract进行车牌识别" class="headerlink" title="三、Haar+Tesseract进行车牌识别"></a>三、Haar+Tesseract进行车牌识别</h1><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124171449117.png" alt="image-20241124171449117"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124171528468.png" alt="image-20241124171528468"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124171730134.png" alt="image-20241124171730134"></p><h1 id="四、深度学习基础知识"><a href="#四、深度学习基础知识" class="headerlink" title="四、深度学习基础知识"></a>四、深度学习基础知识</h1><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172710040.png" alt="image-20241124172710040"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172720603.png" alt="image-20241124172720603"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172731228.png" alt="image-20241124172731228"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172740490.png" alt="image-20241124172740490"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172809677.png" alt="image-20241124172809677"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172824072.png" alt="image-20241124172824072"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124172938312.png" alt="image-20241124172938312"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173013402.png" alt="image-20241124173013402"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173041757.png" alt="image-20241124173041757"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173145330.png" alt="image-20241124173145330"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173213308.png" alt="image-20241124173213308"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173306912.png" alt="image-20241124173306912"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173343995.png" alt="image-20241124173343995"></p><p>.</p><h1 id="五、dnn实现图像分类"><a href="#五、dnn实现图像分类" class="headerlink" title="五、dnn实现图像分类"></a>五、dnn实现图像分类</h1><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173559520.png" alt="image-20241124173559520"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173617944.png" alt="image-20241124173617944"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173709770.png" alt="image-20241124173709770"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173809213.png" alt="image-20241124173809213"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173828190.png" alt="image-20241124173828190"></p><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124173847091.png" alt="image-20241124173847091"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># construct the argument parse and parse the arguments</span></span><br><span class="line">ap = argparse.ArgumentParser()</span><br><span class="line">ap.add_argument(<span class="string">&quot;-i&quot;</span>, <span class="string">&quot;--image&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line"><span class="built_in">help</span>=<span class="string">&quot;path to input image&quot;</span>)</span><br><span class="line">ap.add_argument(<span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--prototxt&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line"><span class="built_in">help</span>=<span class="string">&quot;path to Caffe &#x27;deploy&#x27; prototxt file&quot;</span>)</span><br><span class="line">ap.add_argument(<span class="string">&quot;-m&quot;</span>, <span class="string">&quot;--model&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line"><span class="built_in">help</span>=<span class="string">&quot;path to Caffe pre-trained model&quot;</span>)</span><br><span class="line">ap.add_argument(<span class="string">&quot;-l&quot;</span>, <span class="string">&quot;--labels&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line"><span class="built_in">help</span>=<span class="string">&quot;path to ImageNet labels (i.e., syn-sets)&quot;</span>)</span><br><span class="line">args = <span class="built_in">vars</span>(ap.parse_args())</span><br><span class="line"></span><br><span class="line"><span class="comment"># load the input image from disk</span></span><br><span class="line">image = cv2.imread(args[<span class="string">&quot;image&quot;</span>])</span><br><span class="line"><span class="comment"># load the class labels from disk</span></span><br><span class="line"><span class="comment"># rows = open(args[&quot;labels&quot;]).read().strip().split(&quot;\n&quot;)</span></span><br><span class="line"><span class="comment"># classes = [r[r.find(&quot; &quot;) + 1:].split(&quot;,&quot;)[0] for r in rows]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># our CNN requires fixed spatial dimensions for our input image(s)</span></span><br><span class="line"><span class="comment"># so we need to ensure it is resized to 224x224 pixels while</span></span><br><span class="line"><span class="comment"># performing mean subtraction (104, 117, 123) to normalize the input;</span></span><br><span class="line"><span class="comment"># after executing this command our &quot;blob&quot; now has the shape:</span></span><br><span class="line"><span class="comment"># (1, 3, 224, 224)</span></span><br><span class="line">blob = cv2.dnn.blobFromImage(image, <span class="number">1</span>, (<span class="number">224</span>, <span class="number">224</span>), (<span class="number">104</span>, <span class="number">117</span>, <span class="number">123</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># load our serialized model from disk</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[INFO] loading model...&quot;</span>)</span><br><span class="line">net = cv2.dnn.readNetFromCaffe(args[<span class="string">&quot;prototxt&quot;</span>], args[<span class="string">&quot;model&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># set the blob as input to the network and perform a forward-pass to</span></span><br><span class="line"><span class="comment"># obtain our output classification</span></span><br><span class="line">net.setInput(blob)</span><br><span class="line">start = time.time()</span><br><span class="line">preds = net.forward()</span><br><span class="line">end = time.time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[INFO] classification took &#123;:.5&#125; seconds&quot;</span>.<span class="built_in">format</span>(end - start))</span><br><span class="line"></span><br><span class="line"><span class="comment"># sort the indexes of the probabilities in descending order (higher</span></span><br><span class="line"><span class="comment"># probabilitiy first) and grab the top-5 predictions</span></span><br><span class="line">idxs = np.argsort(preds[<span class="number">0</span>])[::-<span class="number">1</span>][:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># loop over the top-5 predictions and display them</span></span><br><span class="line"><span class="keyword">for</span> (i, idx) <span class="keyword">in</span> <span class="built_in">enumerate</span>(idxs):</span><br><span class="line"><span class="comment"># draw the top prediction on the input image</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">text = <span class="string">&quot;Label: &#123;&#125;, &#123;:.2f&#125;%&quot;</span>.<span class="built_in">format</span>(classes[idx],</span><br><span class="line">preds[<span class="number">0</span>][idx] * <span class="number">100</span>)</span><br><span class="line">cv2.putText(image, text, (<span class="number">5</span>, <span class="number">25</span>),  cv2.FONT_HERSHEY_SIMPLEX,</span><br><span class="line"><span class="number">0.7</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line"><span class="comment"># display the predicted label + associated probability to the</span></span><br><span class="line"><span class="comment"># console</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[INFO] &#123;&#125;. label: &#123;&#125;, probability: &#123;:.5&#125;&quot;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>,</span><br><span class="line">classes[idx], preds[<span class="number">0</span>][idx]))</span><br><span class="line"><span class="comment"># display the output image</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;Image&quot;</span>, image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/image-20241124174737791.png" alt="image-20241124174737791"></p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/OpenCV/">OpenCV</category>
      
      
      <comments>http://example.com/2024/11/24/OpenCV/OpenCV(%E5%8D%81%E4%BA%8C)-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
